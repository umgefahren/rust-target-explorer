{
	"wasm64": [
		{ "name": "atomics", "explanation": "Enable Atomics.", "llvm": false },
		{ "name": "bulk-memory", "explanation": "Enable bulk memory operations.", "llvm": false },
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "exception-handling",
			"explanation": "Enable Wasm exception handling.",
			"llvm": false
		},
		{
			"name": "extended-const",
			"explanation": "Enable extended const expressions.",
			"llvm": false
		},
		{
			"name": "multivalue",
			"explanation": "Enable multivalue blocks, instructions, and functions.",
			"llvm": false
		},
		{ "name": "mutable-globals", "explanation": "Enable mutable globals.", "llvm": false },
		{
			"name": "nontrapping-fptoint",
			"explanation": "Enable non-trapping float-to-int conversion operators.",
			"llvm": false
		},
		{ "name": "reference-types", "explanation": "Enable reference types.", "llvm": false },
		{ "name": "relaxed-simd", "explanation": "Enable relaxed-simd instructions.", "llvm": false },
		{ "name": "sign-ext", "explanation": "Enable sign extension operators.", "llvm": false },
		{ "name": "simd128", "explanation": "Enable 128-bit SIMD.", "llvm": false },
		{ "name": "multimemory", "explanation": "Enable multiple memories.", "llvm": true },
		{ "name": "tail-call", "explanation": "Enable tail call instructions.", "llvm": true }
	],
	"s390x": [
		{
			"name": "backchain",
			"explanation": "Store the address of the caller's frame into the callee's stack frame.",
			"llvm": false
		},
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "vector",
			"explanation": "Assume that the vectory facility is installed.",
			"llvm": false
		},
		{
			"name": "bear-enhancement",
			"explanation": "Assume that the BEAR-enhancement facility is installed.",
			"llvm": true
		},
		{
			"name": "deflate-conversion",
			"explanation": "Assume that the deflate-conversion facility is installed.",
			"llvm": true
		},
		{
			"name": "dfp-packed-conversion",
			"explanation": "Assume that the DFP packed-conversion facility is installed.",
			"llvm": true
		},
		{
			"name": "dfp-zoned-conversion",
			"explanation": "Assume that the DFP zoned-conversion facility is installed.",
			"llvm": true
		},
		{
			"name": "distinct-ops",
			"explanation": "Assume that the distinct-operands facility is installed.",
			"llvm": true
		},
		{
			"name": "enhanced-dat-2",
			"explanation": "Assume that the enhanced-DAT facility 2 is installed.",
			"llvm": true
		},
		{
			"name": "enhanced-sort",
			"explanation": "Assume that the enhanced-sort facility is installed.",
			"llvm": true
		},
		{
			"name": "execution-hint",
			"explanation": "Assume that the execution-hint facility is installed.",
			"llvm": true
		},
		{
			"name": "fast-serialization",
			"explanation": "Assume that the fast-serialization facility is installed.",
			"llvm": true
		},
		{
			"name": "fp-extension",
			"explanation": "Assume that the floating-point extension facility is installed.",
			"llvm": true
		},
		{
			"name": "guarded-storage",
			"explanation": "Assume that the guarded-storage facility is installed.",
			"llvm": true
		},
		{
			"name": "high-word",
			"explanation": "Assume that the high-word facility is installed.",
			"llvm": true
		},
		{
			"name": "insert-reference-bits-multiple",
			"explanation": "Assume that the insert-reference-bits-multiple facility is installed.",
			"llvm": true
		},
		{
			"name": "interlocked-access1",
			"explanation": "Assume that interlocked-access facility 1 is installed.",
			"llvm": true
		},
		{
			"name": "load-and-trap",
			"explanation": "Assume that the load-and-trap facility is installed.",
			"llvm": true
		},
		{
			"name": "load-and-zero-rightmost-byte",
			"explanation": "Assume that the load-and-zero-rightmost-byte facility is installed.",
			"llvm": true
		},
		{
			"name": "load-store-on-cond",
			"explanation": "Assume that the load/store-on-condition facility is installed.",
			"llvm": true
		},
		{
			"name": "load-store-on-cond-2",
			"explanation": "Assume that the load/store-on-condition facility 2 is installed.",
			"llvm": true
		},
		{
			"name": "message-security-assist-extension3",
			"explanation": "Assume that the message-security-assist extension facility 3 is installed.",
			"llvm": true
		},
		{
			"name": "message-security-assist-extension4",
			"explanation": "Assume that the message-security-assist extension facility 4 is installed.",
			"llvm": true
		},
		{
			"name": "message-security-assist-extension5",
			"explanation": "Assume that the message-security-assist extension facility 5 is installed.",
			"llvm": true
		},
		{
			"name": "message-security-assist-extension7",
			"explanation": "Assume that the message-security-assist extension facility 7 is installed.",
			"llvm": true
		},
		{
			"name": "message-security-assist-extension8",
			"explanation": "Assume that the message-security-assist extension facility 8 is installed.",
			"llvm": true
		},
		{
			"name": "message-security-assist-extension9",
			"explanation": "Assume that the message-security-assist extension facility 9 is installed.",
			"llvm": true
		},
		{
			"name": "miscellaneous-extensions",
			"explanation": "Assume that the miscellaneous-extensions facility is installed.",
			"llvm": true
		},
		{
			"name": "miscellaneous-extensions-2",
			"explanation": "Assume that the miscellaneous-extensions facility 2 is installed.",
			"llvm": true
		},
		{
			"name": "miscellaneous-extensions-3",
			"explanation": "Assume that the miscellaneous-extensions facility 3 is installed.",
			"llvm": true
		},
		{
			"name": "nnp-assist",
			"explanation": "Assume that the NNP-assist facility is installed.",
			"llvm": true
		},
		{
			"name": "population-count",
			"explanation": "Assume that the population-count facility is installed.",
			"llvm": true
		},
		{
			"name": "processor-activity-instrumentation",
			"explanation": "Assume that the processor-activity-instrumentation facility is installed.",
			"llvm": true
		},
		{
			"name": "processor-assist",
			"explanation": "Assume that the processor-assist facility is installed.",
			"llvm": true
		},
		{
			"name": "reset-dat-protection",
			"explanation": "Assume that the reset-DAT-protection facility is installed.",
			"llvm": true
		},
		{
			"name": "reset-reference-bits-multiple",
			"explanation": "Assume that the reset-reference-bits-multiple facility is installed.",
			"llvm": true
		},
		{
			"name": "soft-float",
			"explanation": "Use software emulation for floating point.",
			"llvm": true
		},
		{
			"name": "transactional-execution",
			"explanation": "Assume that the transactional-execution facility is installed.",
			"llvm": true
		},
		{
			"name": "vector-enhancements-1",
			"explanation": "Assume that the vector enhancements facility 1 is installed.",
			"llvm": true
		},
		{
			"name": "vector-enhancements-2",
			"explanation": "Assume that the vector enhancements facility 2 is installed.",
			"llvm": true
		},
		{
			"name": "vector-packed-decimal",
			"explanation": "Assume that the vector packed decimal facility is installed.",
			"llvm": true
		},
		{
			"name": "vector-packed-decimal-enhancement",
			"explanation": "Assume that the vector packed decimal enhancement facility is installed.",
			"llvm": true
		},
		{
			"name": "vector-packed-decimal-enhancement-2",
			"explanation": "Assume that the vector packed decimal enhancement facility 2 is installed.",
			"llvm": true
		}
	],
	"x86": [
		{ "name": "adx", "explanation": "Support ADX instructions.", "llvm": false },
		{ "name": "aes", "explanation": "Enable AES instructions.", "llvm": false },
		{ "name": "amx-bf16", "explanation": "Support AMX-BF16 instructions.", "llvm": false },
		{ "name": "amx-complex", "explanation": "Support AMX-COMPLEX instructions.", "llvm": false },
		{ "name": "amx-fp16", "explanation": "Support AMX amx-fp16 instructions.", "llvm": false },
		{ "name": "amx-int8", "explanation": "Support AMX-INT8 instructions.", "llvm": false },
		{ "name": "amx-tile", "explanation": "Support AMX-TILE instructions.", "llvm": false },
		{ "name": "avx", "explanation": "Enable AVX instructions.", "llvm": false },
		{ "name": "avx2", "explanation": "Enable AVX2 instructions.", "llvm": false },
		{ "name": "avx512bf16", "explanation": "Support bfloat16 floating point.", "llvm": false },
		{ "name": "avx512bitalg", "explanation": "Enable AVX-512 Bit Algorithms.", "llvm": false },
		{
			"name": "avx512bw",
			"explanation": "Enable AVX-512 Byte and Word Instructions.",
			"llvm": false
		},
		{
			"name": "avx512cd",
			"explanation": "Enable AVX-512 Conflict Detection Instructions.",
			"llvm": false
		},
		{
			"name": "avx512dq",
			"explanation": "Enable AVX-512 Doubleword and Quadword Instructions.",
			"llvm": false
		},
		{ "name": "avx512f", "explanation": "Enable AVX-512 instructions.", "llvm": false },
		{ "name": "avx512fp16", "explanation": "Support 16-bit floating point.", "llvm": false },
		{
			"name": "avx512ifma",
			"explanation": "Enable AVX-512 Integer Fused Multiple-Add.",
			"llvm": false
		},
		{
			"name": "avx512vbmi",
			"explanation": "Enable AVX-512 Vector Byte Manipulation Instructions.",
			"llvm": false
		},
		{
			"name": "avx512vbmi2",
			"explanation": "Enable AVX-512 further Vector Byte Manipulation Instructions.",
			"llvm": false
		},
		{
			"name": "avx512vl",
			"explanation": "Enable AVX-512 Vector Length eXtensions.",
			"llvm": false
		},
		{
			"name": "avx512vnni",
			"explanation": "Enable AVX-512 Vector Neural Network Instructions.",
			"llvm": false
		},
		{ "name": "avx512vp2intersect", "explanation": "Enable AVX-512 vp2intersect.", "llvm": false },
		{
			"name": "avx512vpopcntdq",
			"explanation": "Enable AVX-512 Population Count Instructions.",
			"llvm": false
		},
		{ "name": "avxifma", "explanation": "Enable AVX-IFMA.", "llvm": false },
		{
			"name": "avxneconvert",
			"explanation": "Support AVX-NE-CONVERT instructions.",
			"llvm": false
		},
		{ "name": "avxvnni", "explanation": "Support AVX_VNNI encoding.", "llvm": false },
		{ "name": "avxvnniint16", "explanation": "Enable AVX-VNNI-INT16.", "llvm": false },
		{ "name": "avxvnniint8", "explanation": "Enable AVX-VNNI-INT8.", "llvm": false },
		{ "name": "bmi1", "explanation": "Support BMI instructions.", "llvm": false },
		{ "name": "bmi2", "explanation": "Support BMI2 instructions.", "llvm": false },
		{
			"name": "cmpxchg16b",
			"explanation": "64-bit with cmpxchg16b (this is true for most x86-64 chips, but not the first AMD chips).",
			"llvm": false
		},
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "ermsb", "explanation": "REP MOVS/STOS are fast.", "llvm": false },
		{
			"name": "f16c",
			"explanation": "Support 16-bit floating point conversion instructions.",
			"llvm": false
		},
		{ "name": "fma", "explanation": "Enable three-operand fused multiple-add.", "llvm": false },
		{ "name": "fxsr", "explanation": "Support fxsave/fxrestore instructions.", "llvm": false },
		{
			"name": "gfni",
			"explanation": "Enable Galois Field Arithmetic Instructions.",
			"llvm": false
		},
		{
			"name": "lahfsahf",
			"explanation": "Support LAHF and SAHF instructions in 64-bit mode.",
			"llvm": false
		},
		{ "name": "lzcnt", "explanation": "Support LZCNT instruction.", "llvm": false },
		{ "name": "movbe", "explanation": "Support MOVBE instruction.", "llvm": false },
		{
			"name": "pclmulqdq",
			"explanation": "Enable packed carry-less multiplication instructions.",
			"llvm": false
		},
		{ "name": "popcnt", "explanation": "Support POPCNT instruction.", "llvm": false },
		{ "name": "prfchw", "explanation": "Support PRFCHW instructions.", "llvm": false },
		{ "name": "rdrand", "explanation": "Support RDRAND instruction.", "llvm": false },
		{ "name": "rdseed", "explanation": "Support RDSEED instruction.", "llvm": false },
		{ "name": "rtm", "explanation": "Support RTM instructions.", "llvm": false },
		{ "name": "sha", "explanation": "Enable SHA instructions.", "llvm": false },
		{ "name": "sse", "explanation": "Enable SSE instructions.", "llvm": false },
		{ "name": "sse2", "explanation": "Enable SSE2 instructions.", "llvm": false },
		{ "name": "sse3", "explanation": "Enable SSE3 instructions.", "llvm": false },
		{ "name": "sse4.1", "explanation": "Enable SSE 4.1 instructions.", "llvm": false },
		{ "name": "sse4.2", "explanation": "Enable SSE 4.2 instructions.", "llvm": false },
		{ "name": "sse4a", "explanation": "Support SSE 4a instructions.", "llvm": false },
		{ "name": "ssse3", "explanation": "Enable SSSE3 instructions.", "llvm": false },
		{ "name": "tbm", "explanation": "Enable TBM instructions.", "llvm": false },
		{
			"name": "vaes",
			"explanation": "Promote selected AES instructions to AVX512/AVX registers.",
			"llvm": false
		},
		{ "name": "vpclmulqdq", "explanation": "Enable vpclmulqdq instructions.", "llvm": false },
		{ "name": "xop", "explanation": "Enable XOP instructions.", "llvm": false },
		{ "name": "xsave", "explanation": "Support xsave instructions.", "llvm": false },
		{ "name": "xsavec", "explanation": "Support xsavec instructions.", "llvm": false },
		{ "name": "xsaveopt", "explanation": "Support xsaveopt instructions.", "llvm": false },
		{ "name": "xsaves", "explanation": "Support xsaves instructions.", "llvm": false },
		{ "name": "16bit-mode", "explanation": "16-bit mode (i8086).", "llvm": true },
		{ "name": "32bit-mode", "explanation": "32-bit mode (80386).", "llvm": true },
		{ "name": "3dnow", "explanation": "Enable 3DNow! instructions.", "llvm": true },
		{ "name": "3dnowa", "explanation": "Enable 3DNow! Athlon instructions.", "llvm": true },
		{ "name": "64bit", "explanation": "Support 64-bit instructions.", "llvm": true },
		{ "name": "64bit-mode", "explanation": "64-bit mode (x86_64).", "llvm": true },
		{
			"name": "allow-light-256-bit",
			"explanation": "Enable generation of 256-bit load/stores even if we prefer 128-bit.",
			"llvm": true
		},
		{
			"name": "avx10.1-256",
			"explanation": "Support AVX10.1 up to 256-bit instruction.",
			"llvm": true
		},
		{
			"name": "avx10.1-512",
			"explanation": "Support AVX10.1 up to 512-bit instruction.",
			"llvm": true
		},
		{
			"name": "avx512er",
			"explanation": "Enable AVX-512 Exponential and Reciprocal Instructions.",
			"llvm": true
		},
		{ "name": "avx512pf", "explanation": "Enable AVX-512 PreFetch Instructions.", "llvm": true },
		{
			"name": "branchfusion",
			"explanation": "CMP/TEST can be fused with conditional branches.",
			"llvm": true
		},
		{ "name": "ccmp", "explanation": "Support conditional cmp & test instructions.", "llvm": true },
		{ "name": "cf", "explanation": "Support conditional faulting.", "llvm": true },
		{ "name": "cldemote", "explanation": "Enable Cache Line Demote.", "llvm": true },
		{ "name": "clflushopt", "explanation": "Flush A Cache Line Optimized.", "llvm": true },
		{ "name": "clwb", "explanation": "Cache Line Write Back.", "llvm": true },
		{ "name": "clzero", "explanation": "Enable Cache Line Zero.", "llvm": true },
		{ "name": "cmov", "explanation": "Enable conditional move instructions.", "llvm": true },
		{ "name": "cmpccxadd", "explanation": "Support CMPCCXADD instructions.", "llvm": true },
		{
			"name": "crc32",
			"explanation": "Enable SSE 4.2 CRC32 instruction (used when SSE4.2 is supported but function is GPR only).",
			"llvm": true
		},
		{ "name": "cx8", "explanation": "Support CMPXCHG8B instructions.", "llvm": true },
		{ "name": "egpr", "explanation": "Support extended general purpose register.", "llvm": true },
		{ "name": "enqcmd", "explanation": "Has ENQCMD instructions.", "llvm": true },
		{ "name": "evex512", "explanation": "Support ZMM and 64-bit mask instructions.", "llvm": true },
		{
			"name": "false-deps-getmant",
			"explanation": "VGETMANTSS/SD/SH and VGETMANDPS/PD(memory version) has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-lzcnt-tzcnt",
			"explanation": "LZCNT/TZCNT have a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-mulc",
			"explanation": "VF[C]MULCPH/SH has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-mullq",
			"explanation": "VPMULLQ has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-perm",
			"explanation": "VPERMD/Q/PS/PD has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-popcnt",
			"explanation": "POPCNT has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-range",
			"explanation": "VRANGEPD/PS/SD/SS has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "fast-11bytenop",
			"explanation": "Target can quickly decode up to 11 byte NOPs.",
			"llvm": true
		},
		{
			"name": "fast-15bytenop",
			"explanation": "Target can quickly decode up to 15 byte NOPs.",
			"llvm": true
		},
		{
			"name": "fast-7bytenop",
			"explanation": "Target can quickly decode up to 7 byte NOPs.",
			"llvm": true
		},
		{
			"name": "fast-bextr",
			"explanation": "Indicates that the BEXTR instruction is implemented as a single uop with good throughput.",
			"llvm": true
		},
		{
			"name": "fast-gather",
			"explanation": "Indicates if gather is reasonably fast (this is true for Skylake client and all AVX-512 CPUs).",
			"llvm": true
		},
		{
			"name": "fast-hops",
			"explanation": "Prefer horizontal vector math instructions (haddp, phsub, etc.) over normal vector instructions with shuffles.",
			"llvm": true
		},
		{
			"name": "fast-lzcnt",
			"explanation": "LZCNT instructions are as fast as most simple integer ops.",
			"llvm": true
		},
		{
			"name": "fast-movbe",
			"explanation": "Prefer a movbe over a single-use load + bswap / single-use bswap + store.",
			"llvm": true
		},
		{
			"name": "fast-scalar-fsqrt",
			"explanation": "Scalar SQRT is fast (disable Newton-Raphson).",
			"llvm": true
		},
		{
			"name": "fast-scalar-shift-masks",
			"explanation": "Prefer a left/right scalar logical shift pair over a shift+and pair.",
			"llvm": true
		},
		{
			"name": "fast-shld-rotate",
			"explanation": "SHLD can be used as a faster rotate.",
			"llvm": true
		},
		{
			"name": "fast-variable-crosslane-shuffle",
			"explanation": "Cross-lane shuffles with variable masks are fast.",
			"llvm": true
		},
		{
			"name": "fast-variable-perlane-shuffle",
			"explanation": "Per-lane shuffles with variable masks are fast.",
			"llvm": true
		},
		{
			"name": "fast-vector-fsqrt",
			"explanation": "Vector SQRT is fast (disable Newton-Raphson).",
			"llvm": true
		},
		{
			"name": "fast-vector-shift-masks",
			"explanation": "Prefer a left/right vector logical shift pair over a shift+and pair.",
			"llvm": true
		},
		{
			"name": "faster-shift-than-shuffle",
			"explanation": "Shifts are faster (or as fast) as shuffle.",
			"llvm": true
		},
		{ "name": "fma4", "explanation": "Enable four-operand fused multiple-add.", "llvm": true },
		{ "name": "fsgsbase", "explanation": "Support FS/GS Base instructions.", "llvm": true },
		{ "name": "fsrm", "explanation": "REP MOVSB of short lengths is faster.", "llvm": true },
		{
			"name": "harden-sls-ijmp",
			"explanation": "Harden against straight line speculation across indirect JMP instructions..",
			"llvm": true
		},
		{
			"name": "harden-sls-ret",
			"explanation": "Harden against straight line speculation across RET instructions..",
			"llvm": true
		},
		{ "name": "hreset", "explanation": "Has hreset instruction.", "llvm": true },
		{
			"name": "idivl-to-divb",
			"explanation": "Use 8-bit divide for positive values less than 256.",
			"llvm": true
		},
		{
			"name": "idivq-to-divl",
			"explanation": "Use 32-bit divide for positive values less than 2^32.",
			"llvm": true
		},
		{ "name": "invpcid", "explanation": "Invalidate Process-Context Identifier.", "llvm": true },
		{ "name": "kl", "explanation": "Support Key Locker kl Instructions.", "llvm": true },
		{
			"name": "lea-sp",
			"explanation": "Use LEA for adjusting the stack pointer (this is an optimization for Intel Atom processors).",
			"llvm": true
		},
		{
			"name": "lea-uses-ag",
			"explanation": "LEA instruction needs inputs at AG stage.",
			"llvm": true
		},
		{
			"name": "lvi-cfi",
			"explanation": "Prevent indirect calls/branches from using a memory operand, and precede all indirect calls/branches from a register with an LFENCE instruction to serialize control flow. Also decompose RET instructions into a POP+LFENCE+JMP sequence..",
			"llvm": true
		},
		{
			"name": "lvi-load-hardening",
			"explanation": "Insert LFENCE instructions to prevent data speculatively injected into loads from being used maliciously..",
			"llvm": true
		},
		{ "name": "lwp", "explanation": "Enable LWP instructions.", "llvm": true },
		{
			"name": "macrofusion",
			"explanation": "Various instructions can be fused with conditional branches.",
			"llvm": true
		},
		{ "name": "mmx", "explanation": "Enable MMX instructions.", "llvm": true },
		{
			"name": "movdir64b",
			"explanation": "Support movdir64b instruction (direct store 64 bytes).",
			"llvm": true
		},
		{
			"name": "movdiri",
			"explanation": "Support movdiri instruction (direct store integer).",
			"llvm": true
		},
		{
			"name": "mwaitx",
			"explanation": "Enable MONITORX/MWAITX timer functionality.",
			"llvm": true
		},
		{ "name": "ndd", "explanation": "Support non-destructive destination.", "llvm": true },
		{
			"name": "no-bypass-delay",
			"explanation": "Has no bypass delay when using the 'wrong' domain.",
			"llvm": true
		},
		{
			"name": "no-bypass-delay-blend",
			"explanation": "Has no bypass delay when using the 'wrong' blend type.",
			"llvm": true
		},
		{
			"name": "no-bypass-delay-mov",
			"explanation": "Has no bypass delay when using the 'wrong' mov type.",
			"llvm": true
		},
		{
			"name": "no-bypass-delay-shuffle",
			"explanation": "Has no bypass delay when using the 'wrong' shuffle type.",
			"llvm": true
		},
		{
			"name": "nopl",
			"explanation": "Enable NOPL instruction (generally pentium pro+).",
			"llvm": true
		},
		{
			"name": "pad-short-functions",
			"explanation": "Pad short functions (to prevent a stall when returning too early).",
			"llvm": true
		},
		{ "name": "pconfig", "explanation": "platform configuration instruction.", "llvm": true },
		{ "name": "pku", "explanation": "Enable protection keys.", "llvm": true },
		{ "name": "ppx", "explanation": "Support Push-Pop Acceleration.", "llvm": true },
		{ "name": "prefer-128-bit", "explanation": "Prefer 128-bit AVX instructions.", "llvm": true },
		{ "name": "prefer-256-bit", "explanation": "Prefer 256-bit AVX instructions.", "llvm": true },
		{
			"name": "prefer-mask-registers",
			"explanation": "Prefer AVX512 mask registers over PTEST/MOVMSK.",
			"llvm": true
		},
		{
			"name": "prefer-movmsk-over-vtest",
			"explanation": "Prefer movmsk over vtest instruction.",
			"llvm": true
		},
		{ "name": "prefer-no-gather", "explanation": "Prefer no gather instructions.", "llvm": true },
		{ "name": "prefer-no-scatter", "explanation": "Prefer no scatter instructions.", "llvm": true },
		{
			"name": "prefetchi",
			"explanation": "Prefetch instruction with T0 or T1 Hint.",
			"llvm": true
		},
		{
			"name": "prefetchwt1",
			"explanation": "Prefetch with Intent to Write and T1 Hint.",
			"llvm": true
		},
		{ "name": "ptwrite", "explanation": "Support ptwrite instruction.", "llvm": true },
		{ "name": "push2pop2", "explanation": "Support PUSH2/POP2 instructions.", "llvm": true },
		{ "name": "raoint", "explanation": "Support RAO-INT instructions.", "llvm": true },
		{ "name": "rdpid", "explanation": "Support RDPID instructions.", "llvm": true },
		{ "name": "rdpru", "explanation": "Support RDPRU instructions.", "llvm": true },
		{
			"name": "retpoline",
			"explanation": "Remove speculation of indirect branches from the generated code, either by avoiding them entirely or lowering them with a speculation blocking construct.",
			"llvm": true
		},
		{
			"name": "retpoline-external-thunk",
			"explanation": "When lowering an indirect call or branch using a `retpoline`, rely on the specified user provided thunk rather than emitting one ourselves. Only has effect when combined with some other retpoline feature.",
			"llvm": true
		},
		{
			"name": "retpoline-indirect-branches",
			"explanation": "Remove speculation of indirect branches from the generated code.",
			"llvm": true
		},
		{
			"name": "retpoline-indirect-calls",
			"explanation": "Remove speculation of indirect calls from the generated code.",
			"llvm": true
		},
		{
			"name": "sbb-dep-breaking",
			"explanation": "SBB with same register has no source dependency.",
			"llvm": true
		},
		{ "name": "serialize", "explanation": "Has serialize instruction.", "llvm": true },
		{
			"name": "seses",
			"explanation": "Prevent speculative execution side channel timing attacks by inserting a speculation barrier before memory reads, memory writes, and conditional branches. Implies LVI Control Flow integrity..",
			"llvm": true
		},
		{ "name": "sgx", "explanation": "Enable Software Guard Extensions.", "llvm": true },
		{ "name": "sha512", "explanation": "Support SHA512 instructions.", "llvm": true },
		{ "name": "shstk", "explanation": "Support CET Shadow-Stack instructions.", "llvm": true },
		{
			"name": "slow-3ops-lea",
			"explanation": "LEA instruction with 3 ops or certain registers is slow.",
			"llvm": true
		},
		{
			"name": "slow-incdec",
			"explanation": "INC and DEC instructions are slower than ADD and SUB.",
			"llvm": true
		},
		{
			"name": "slow-lea",
			"explanation": "LEA instruction with certain arguments is slow.",
			"llvm": true
		},
		{ "name": "slow-pmaddwd", "explanation": "PMADDWD is slower than PMULLD.", "llvm": true },
		{
			"name": "slow-pmulld",
			"explanation": "PMULLD instruction is slow (compared to PMULLW/PMULHW and PMULUDQ).",
			"llvm": true
		},
		{ "name": "slow-shld", "explanation": "SHLD instruction is slow.", "llvm": true },
		{
			"name": "slow-two-mem-ops",
			"explanation": "Two memory operand instructions are slow.",
			"llvm": true
		},
		{
			"name": "slow-unaligned-mem-16",
			"explanation": "Slow unaligned 16-byte memory access.",
			"llvm": true
		},
		{
			"name": "slow-unaligned-mem-32",
			"explanation": "Slow unaligned 32-byte memory access.",
			"llvm": true
		},
		{ "name": "sm3", "explanation": "Support SM3 instructions.", "llvm": true },
		{ "name": "sm4", "explanation": "Support SM4 instructions.", "llvm": true },
		{ "name": "soft-float", "explanation": "Use software floating point features.", "llvm": true },
		{
			"name": "sse-unaligned-mem",
			"explanation": "Allow unaligned memory operands with SSE instructions (this may require setting a configuration bit in the processor).",
			"llvm": true
		},
		{
			"name": "tagged-globals",
			"explanation": "Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits..",
			"llvm": true
		},
		{ "name": "tsxldtrk", "explanation": "Support TSXLDTRK instructions.", "llvm": true },
		{
			"name": "tuning-fast-imm-vector-shift",
			"explanation": "Vector shifts are fast (2/cycle) as opposed to slow (1/cycle).",
			"llvm": true
		},
		{ "name": "uintr", "explanation": "Has UINTR Instructions.", "llvm": true },
		{
			"name": "use-glm-div-sqrt-costs",
			"explanation": "Use Goldmont specific floating point div/sqrt costs.",
			"llvm": true
		},
		{
			"name": "use-slm-arith-costs",
			"explanation": "Use Silvermont specific arithmetic costs.",
			"llvm": true
		},
		{ "name": "usermsr", "explanation": "Support USERMSR instructions.", "llvm": true },
		{ "name": "vzeroupper", "explanation": "Should insert vzeroupper instructions.", "llvm": true },
		{ "name": "waitpkg", "explanation": "Wait and pause enhancements.", "llvm": true },
		{ "name": "wbnoinvd", "explanation": "Write Back No Invalidate.", "llvm": true },
		{ "name": "widekl", "explanation": "Support Key Locker wide Instructions.", "llvm": true },
		{ "name": "x87", "explanation": "Enable X87 float instructions.", "llvm": true }
	],
	"mips64r6": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "fp64", "explanation": "Support 64-bit FP registers.", "llvm": false },
		{ "name": "msa", "explanation": "Mips MSA ASE.", "llvm": false },
		{ "name": "virt", "explanation": "Mips Virtualization ASE.", "llvm": false },
		{ "name": "abs2008", "explanation": "Disable IEEE 754-2008 abs.fmt mode.", "llvm": true },
		{ "name": "cnmips", "explanation": "Octeon cnMIPS Support.", "llvm": true },
		{ "name": "cnmipsp", "explanation": "Octeon+ cnMIPS Support.", "llvm": true },
		{ "name": "crc", "explanation": "Mips R6 CRC ASE.", "llvm": true },
		{ "name": "dsp", "explanation": "Mips DSP ASE.", "llvm": true },
		{ "name": "dspr2", "explanation": "Mips DSP-R2 ASE.", "llvm": true },
		{ "name": "dspr3", "explanation": "Mips DSP-R3 ASE.", "llvm": true },
		{ "name": "eva", "explanation": "Mips EVA ASE.", "llvm": true },
		{ "name": "fpxx", "explanation": "Support for FPXX.", "llvm": true },
		{ "name": "ginv", "explanation": "Mips Global Invalidate ASE.", "llvm": true },
		{ "name": "gp64", "explanation": "General Purpose Registers are 64-bit wide.", "llvm": true },
		{ "name": "long-calls", "explanation": "Disable use of the jal instruction.", "llvm": true },
		{ "name": "micromips", "explanation": "microMips mode.", "llvm": true },
		{ "name": "mips1", "explanation": "Mips I ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips16", "explanation": "Mips16 mode.", "llvm": true },
		{ "name": "mips2", "explanation": "Mips II ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips3", "explanation": "MIPS III ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips32", "explanation": "Mips32 ISA Support.", "llvm": true },
		{ "name": "mips32r2", "explanation": "Mips32r2 ISA Support.", "llvm": true },
		{ "name": "mips32r3", "explanation": "Mips32r3 ISA Support.", "llvm": true },
		{ "name": "mips32r5", "explanation": "Mips32r5 ISA Support.", "llvm": true },
		{ "name": "mips32r6", "explanation": "Mips32r6 ISA Support [experimental].", "llvm": true },
		{
			"name": "mips3_32",
			"explanation": "Subset of MIPS-III that is also in MIPS32 [highly experimental].",
			"llvm": true
		},
		{
			"name": "mips3_32r2",
			"explanation": "Subset of MIPS-III that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips3d", "explanation": "Mips 3D ASE.", "llvm": true },
		{ "name": "mips4", "explanation": "MIPS IV ISA Support.", "llvm": true },
		{
			"name": "mips4_32",
			"explanation": "Subset of MIPS-IV that is also in MIPS32 [highly experimental].",
			"llvm": true
		},
		{
			"name": "mips4_32r2",
			"explanation": "Subset of MIPS-IV that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips5", "explanation": "MIPS V ISA Support [highly experimental].", "llvm": true },
		{
			"name": "mips5_32r2",
			"explanation": "Subset of MIPS-V that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips64", "explanation": "Mips64 ISA Support.", "llvm": true },
		{ "name": "mips64r2", "explanation": "Mips64r2 ISA Support.", "llvm": true },
		{ "name": "mips64r3", "explanation": "Mips64r3 ISA Support.", "llvm": true },
		{ "name": "mips64r5", "explanation": "Mips64r5 ISA Support.", "llvm": true },
		{ "name": "mips64r6", "explanation": "Mips64r6 ISA Support [experimental].", "llvm": true },
		{ "name": "mt", "explanation": "Mips MT ASE.", "llvm": true },
		{ "name": "nan2008", "explanation": "IEEE 754-2008 NaN encoding.", "llvm": true },
		{
			"name": "noabicalls",
			"explanation": "Disable SVR4-style position-independent code.",
			"llvm": true
		},
		{
			"name": "nomadd4",
			"explanation": "Disable 4-operand madd.fmt and related instructions.",
			"llvm": true
		},
		{
			"name": "nooddspreg",
			"explanation": "Disable odd numbered single-precision registers.",
			"llvm": true
		},
		{ "name": "p5600", "explanation": "The P5600 Processor.", "llvm": true },
		{ "name": "ptr64", "explanation": "Pointers are 64-bit wide.", "llvm": true },
		{
			"name": "single-float",
			"explanation": "Only supports single precision float.",
			"llvm": true
		},
		{
			"name": "soft-float",
			"explanation": "Does not support floating point instructions.",
			"llvm": true
		},
		{ "name": "sym32", "explanation": "Symbols are 32 bit on Mips64.", "llvm": true },
		{
			"name": "use-indirect-jump-hazard",
			"explanation": "Use indirect jump guards to prevent certain speculation based attacks.",
			"llvm": true
		},
		{
			"name": "use-tcc-in-div",
			"explanation": "Force the assembler to use trapping.",
			"llvm": true
		},
		{ "name": "vfpu", "explanation": "Enable vector FPU instructions.", "llvm": true },
		{ "name": "xgot", "explanation": "Assume 32-bit GOT.", "llvm": true }
	],
	"sparc64": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "deprecated-v8",
			"explanation": "Enable deprecated V8 instructions in V9 mode.",
			"llvm": true
		},
		{
			"name": "detectroundchange",
			"explanation": "LEON3 erratum detection: Detects any rounding mode change request: use only the round-to-nearest rounding mode.",
			"llvm": true
		},
		{
			"name": "fixallfdivsqrt",
			"explanation": "LEON erratum fix: Fix FDIVS/FDIVD/FSQRTS/FSQRTD instructions with NOPs and floating-point store.",
			"llvm": true
		},
		{
			"name": "hard-quad-float",
			"explanation": "Enable quad-word floating point instructions.",
			"llvm": true
		},
		{
			"name": "hasleoncasa",
			"explanation": "Enable CASA instruction for LEON3 and LEON4 processors.",
			"llvm": true
		},
		{
			"name": "hasumacsmac",
			"explanation": "Enable UMAC and SMAC for LEON3 and LEON4 processors.",
			"llvm": true
		},
		{
			"name": "insertnopload",
			"explanation": "LEON3 erratum fix: Insert a NOP instruction after every single-cycle load instruction when the next instruction is another load/store instruction.",
			"llvm": true
		},
		{ "name": "leon", "explanation": "Enable LEON extensions.", "llvm": true },
		{
			"name": "leoncyclecounter",
			"explanation": "Use the Leon cycle counter register.",
			"llvm": true
		},
		{ "name": "leonpwrpsr", "explanation": "Enable the PWRPSR instruction.", "llvm": true },
		{ "name": "no-fmuls", "explanation": "Disable the fmuls instruction..", "llvm": true },
		{ "name": "no-fsmuld", "explanation": "Disable the fsmuld instruction..", "llvm": true },
		{ "name": "popc", "explanation": "Use the popc (population count) instruction.", "llvm": true },
		{
			"name": "reserve-g1",
			"explanation": "Reserve G1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g2",
			"explanation": "Reserve G2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g3",
			"explanation": "Reserve G3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g4",
			"explanation": "Reserve G4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g5",
			"explanation": "Reserve G5, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g6",
			"explanation": "Reserve G6, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g7",
			"explanation": "Reserve G7, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i0",
			"explanation": "Reserve I0, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i1",
			"explanation": "Reserve I1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i2",
			"explanation": "Reserve I2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i3",
			"explanation": "Reserve I3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i4",
			"explanation": "Reserve I4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i5",
			"explanation": "Reserve I5, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l0",
			"explanation": "Reserve L0, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l1",
			"explanation": "Reserve L1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l2",
			"explanation": "Reserve L2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l3",
			"explanation": "Reserve L3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l4",
			"explanation": "Reserve L4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l5",
			"explanation": "Reserve L5, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l6",
			"explanation": "Reserve L6, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l7",
			"explanation": "Reserve L7, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o0",
			"explanation": "Reserve O0, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o1",
			"explanation": "Reserve O1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o2",
			"explanation": "Reserve O2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o3",
			"explanation": "Reserve O3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o4",
			"explanation": "Reserve O4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o5",
			"explanation": "Reserve O5, making it unavailable as a GPR.",
			"llvm": true
		},
		{ "name": "slow-rdpc", "explanation": "rd %pc, %XX is slow.", "llvm": true },
		{
			"name": "soft-float",
			"explanation": "Use software emulation for floating point.",
			"llvm": true
		},
		{
			"name": "soft-mul-div",
			"explanation": "Use software emulation for integer multiply and divide.",
			"llvm": true
		},
		{ "name": "v9", "explanation": "Enable SPARC-V9 instructions.", "llvm": true },
		{
			"name": "vis",
			"explanation": "Enable UltraSPARC Visual Instruction Set extensions.",
			"llvm": true
		},
		{ "name": "vis2", "explanation": "Enable Visual Instruction Set extensions II.", "llvm": true },
		{ "name": "vis3", "explanation": "Enable Visual Instruction Set extensions III.", "llvm": true }
	],
	"powerpc64": [
		{ "name": "altivec", "explanation": "Enable Altivec instructions.", "llvm": false },
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "power10-vector",
			"explanation": "Enable POWER10 vector instructions.",
			"llvm": false
		},
		{
			"name": "power8-altivec",
			"explanation": "Enable POWER8 Altivec instructions.",
			"llvm": false
		},
		{ "name": "power8-vector", "explanation": "Enable POWER8 vector instructions.", "llvm": false },
		{
			"name": "power9-altivec",
			"explanation": "Enable POWER9 Altivec instructions.",
			"llvm": false
		},
		{ "name": "power9-vector", "explanation": "Enable POWER9 vector instructions.", "llvm": false },
		{ "name": "vsx", "explanation": "Enable VSX instructions.", "llvm": false },
		{ "name": "64bit", "explanation": "Enable 64-bit instructions.", "llvm": true },
		{
			"name": "64bitregs",
			"explanation": "Enable 64-bit registers usage for ppc32 [beta].",
			"llvm": true
		},
		{ "name": "aix", "explanation": "AIX OS.", "llvm": true },
		{
			"name": "aix-small-local-exec-tls",
			"explanation": "Produce a TOC-free local-exec TLS sequence for this function for 64-bit AIX.",
			"llvm": true
		},
		{
			"name": "allow-unaligned-fp-access",
			"explanation": "CPU does not trap on unaligned FP access.",
			"llvm": true
		},
		{ "name": "booke", "explanation": "Enable Book E instructions.", "llvm": true },
		{ "name": "bpermd", "explanation": "Enable the bpermd instruction.", "llvm": true },
		{ "name": "cmpb", "explanation": "Enable the cmpb instruction.", "llvm": true },
		{ "name": "crbits", "explanation": "Use condition-register bits individually.", "llvm": true },
		{ "name": "crypto", "explanation": "Enable POWER8 Crypto instructions.", "llvm": true },
		{
			"name": "direct-move",
			"explanation": "Enable Power8 direct move instructions.",
			"llvm": true
		},
		{ "name": "e500", "explanation": "Enable E500/E500mc instructions.", "llvm": true },
		{
			"name": "efpu2",
			"explanation": "Enable Embedded Floating-Point APU 2 instructions.",
			"llvm": true
		},
		{ "name": "extdiv", "explanation": "Enable extended divide instructions.", "llvm": true },
		{ "name": "fast-MFLR", "explanation": "MFLR is a fast instruction.", "llvm": true },
		{ "name": "fcpsgn", "explanation": "Enable the fcpsgn instruction.", "llvm": true },
		{
			"name": "float128",
			"explanation": "Enable the __float128 data type for IEEE-754R Binary128..",
			"llvm": true
		},
		{
			"name": "fpcvt",
			"explanation": "Enable fc[ft]* (unsigned and single-precision) and lfiwzx instructions.",
			"llvm": true
		},
		{ "name": "fprnd", "explanation": "Enable the fri[mnpz] instructions.", "llvm": true },
		{ "name": "fpu", "explanation": "Enable classic FPU instructions.", "llvm": true },
		{ "name": "fre", "explanation": "Enable the fre instruction.", "llvm": true },
		{ "name": "fres", "explanation": "Enable the fres instruction.", "llvm": true },
		{ "name": "frsqrte", "explanation": "Enable the frsqrte instruction.", "llvm": true },
		{ "name": "frsqrtes", "explanation": "Enable the frsqrtes instruction.", "llvm": true },
		{ "name": "fsqrt", "explanation": "Enable the fsqrt instruction.", "llvm": true },
		{
			"name": "fuse-add-logical",
			"explanation": "Target supports Add with Logical Operations fusion.",
			"llvm": true
		},
		{ "name": "fuse-addi-load", "explanation": "Power8 Addi-Load fusion.", "llvm": true },
		{ "name": "fuse-addis-load", "explanation": "Power8 Addis-Load fusion.", "llvm": true },
		{
			"name": "fuse-arith-add",
			"explanation": "Target supports Arithmetic Operations with Add fusion.",
			"llvm": true
		},
		{
			"name": "fuse-back2back",
			"explanation": "Target supports general back to back fusion.",
			"llvm": true
		},
		{
			"name": "fuse-cmp",
			"explanation": "Target supports Comparison Operations fusion.",
			"llvm": true
		},
		{
			"name": "fuse-logical",
			"explanation": "Target supports Logical Operations fusion.",
			"llvm": true
		},
		{
			"name": "fuse-logical-add",
			"explanation": "Target supports Logical with Add Operations fusion.",
			"llvm": true
		},
		{ "name": "fuse-sha3", "explanation": "Target supports SHA3 assist fusion.", "llvm": true },
		{ "name": "fuse-store", "explanation": "Target supports store clustering.", "llvm": true },
		{
			"name": "fuse-wideimm",
			"explanation": "Target supports Wide-Immediate fusion.",
			"llvm": true
		},
		{
			"name": "fuse-zeromove",
			"explanation": "Target supports move to SPR with branch fusion.",
			"llvm": true
		},
		{ "name": "fusion", "explanation": "Target supports instruction fusion.", "llvm": true },
		{ "name": "hard-float", "explanation": "Enable floating-point instructions.", "llvm": true },
		{
			"name": "htm",
			"explanation": "Enable Hardware Transactional Memory instructions.",
			"llvm": true
		},
		{ "name": "icbt", "explanation": "Enable icbt instruction.", "llvm": true },
		{
			"name": "invariant-function-descriptors",
			"explanation": "Assume function descriptors are invariant.",
			"llvm": true
		},
		{
			"name": "isa-future-instructions",
			"explanation": "Enable instructions for Future ISA..",
			"llvm": true
		},
		{
			"name": "isa-v206-instructions",
			"explanation": "Enable instructions in ISA 2.06..",
			"llvm": true
		},
		{
			"name": "isa-v207-instructions",
			"explanation": "Enable instructions in ISA 2.07..",
			"llvm": true
		},
		{
			"name": "isa-v30-instructions",
			"explanation": "Enable instructions in ISA 3.0..",
			"llvm": true
		},
		{
			"name": "isa-v31-instructions",
			"explanation": "Enable instructions in ISA 3.1..",
			"llvm": true
		},
		{ "name": "isel", "explanation": "Enable the isel instruction.", "llvm": true },
		{ "name": "ldbrx", "explanation": "Enable the ldbrx instruction.", "llvm": true },
		{ "name": "lfiwax", "explanation": "Enable the lfiwax instruction.", "llvm": true },
		{ "name": "longcall", "explanation": "Always use indirect calls.", "llvm": true },
		{ "name": "mfocrf", "explanation": "Enable the MFOCRF instruction.", "llvm": true },
		{ "name": "mma", "explanation": "Enable MMA instructions.", "llvm": true },
		{
			"name": "modern-aix-as",
			"explanation": "AIX system assembler is modern enough to support new mnes.",
			"llvm": true
		},
		{
			"name": "msync",
			"explanation": "Has only the msync instruction instead of sync.",
			"llvm": true
		},
		{
			"name": "paired-vector-memops",
			"explanation": "32Byte load and store instructions.",
			"llvm": true
		},
		{ "name": "partword-atomics", "explanation": "Enable l[bh]arx and st[bh]cx..", "llvm": true },
		{ "name": "pcrelative-memops", "explanation": "Enable PC relative Memory Ops.", "llvm": true },
		{ "name": "popcntd", "explanation": "Enable the popcnt[dw] instructions.", "llvm": true },
		{
			"name": "ppc-postra-sched",
			"explanation": "Use PowerPC post-RA scheduling strategy.",
			"llvm": true
		},
		{
			"name": "ppc-prera-sched",
			"explanation": "Use PowerPC pre-RA scheduling strategy.",
			"llvm": true
		},
		{ "name": "ppc4xx", "explanation": "Enable PPC 4xx instructions.", "llvm": true },
		{ "name": "ppc6xx", "explanation": "Enable PPC 6xx instructions.", "llvm": true },
		{
			"name": "predictable-select-expensive",
			"explanation": "Prefer likely predicted branches over selects.",
			"llvm": true
		},
		{ "name": "prefix-instrs", "explanation": "Enable prefixed instructions.", "llvm": true },
		{ "name": "privileged", "explanation": "Add privileged instructions.", "llvm": true },
		{ "name": "quadword-atomics", "explanation": "Enable lqarx and stqcx..", "llvm": true },
		{
			"name": "recipprec",
			"explanation": "Assume higher precision reciprocal estimates.",
			"llvm": true
		},
		{ "name": "rop-protect", "explanation": "Add ROP protect.", "llvm": true },
		{ "name": "secure-plt", "explanation": "Enable secure plt mode.", "llvm": true },
		{ "name": "slow-popcntd", "explanation": "Has slow popcnt[dw] instructions.", "llvm": true },
		{ "name": "spe", "explanation": "Enable SPE instructions.", "llvm": true },
		{ "name": "stfiwx", "explanation": "Enable the stfiwx instruction.", "llvm": true },
		{
			"name": "two-const-nr",
			"explanation": "Requires two constant Newton-Raphson computation.",
			"llvm": true
		},
		{ "name": "vectors-use-two-units", "explanation": "Vectors use two units.", "llvm": true }
	],
	"mips": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "fp64", "explanation": "Support 64-bit FP registers.", "llvm": false },
		{ "name": "msa", "explanation": "Mips MSA ASE.", "llvm": false },
		{ "name": "virt", "explanation": "Mips Virtualization ASE.", "llvm": false },
		{ "name": "abs2008", "explanation": "Disable IEEE 754-2008 abs.fmt mode.", "llvm": true },
		{ "name": "cnmips", "explanation": "Octeon cnMIPS Support.", "llvm": true },
		{ "name": "cnmipsp", "explanation": "Octeon+ cnMIPS Support.", "llvm": true },
		{ "name": "crc", "explanation": "Mips R6 CRC ASE.", "llvm": true },
		{ "name": "dsp", "explanation": "Mips DSP ASE.", "llvm": true },
		{ "name": "dspr2", "explanation": "Mips DSP-R2 ASE.", "llvm": true },
		{ "name": "dspr3", "explanation": "Mips DSP-R3 ASE.", "llvm": true },
		{ "name": "eva", "explanation": "Mips EVA ASE.", "llvm": true },
		{ "name": "fpxx", "explanation": "Support for FPXX.", "llvm": true },
		{ "name": "ginv", "explanation": "Mips Global Invalidate ASE.", "llvm": true },
		{ "name": "gp64", "explanation": "General Purpose Registers are 64-bit wide.", "llvm": true },
		{ "name": "long-calls", "explanation": "Disable use of the jal instruction.", "llvm": true },
		{ "name": "micromips", "explanation": "microMips mode.", "llvm": true },
		{ "name": "mips1", "explanation": "Mips I ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips16", "explanation": "Mips16 mode.", "llvm": true },
		{ "name": "mips2", "explanation": "Mips II ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips3", "explanation": "MIPS III ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips32", "explanation": "Mips32 ISA Support.", "llvm": true },
		{ "name": "mips32r2", "explanation": "Mips32r2 ISA Support.", "llvm": true },
		{ "name": "mips32r3", "explanation": "Mips32r3 ISA Support.", "llvm": true },
		{ "name": "mips32r5", "explanation": "Mips32r5 ISA Support.", "llvm": true },
		{ "name": "mips32r6", "explanation": "Mips32r6 ISA Support [experimental].", "llvm": true },
		{
			"name": "mips3_32",
			"explanation": "Subset of MIPS-III that is also in MIPS32 [highly experimental].",
			"llvm": true
		},
		{
			"name": "mips3_32r2",
			"explanation": "Subset of MIPS-III that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips3d", "explanation": "Mips 3D ASE.", "llvm": true },
		{ "name": "mips4", "explanation": "MIPS IV ISA Support.", "llvm": true },
		{
			"name": "mips4_32",
			"explanation": "Subset of MIPS-IV that is also in MIPS32 [highly experimental].",
			"llvm": true
		},
		{
			"name": "mips4_32r2",
			"explanation": "Subset of MIPS-IV that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips5", "explanation": "MIPS V ISA Support [highly experimental].", "llvm": true },
		{
			"name": "mips5_32r2",
			"explanation": "Subset of MIPS-V that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips64", "explanation": "Mips64 ISA Support.", "llvm": true },
		{ "name": "mips64r2", "explanation": "Mips64r2 ISA Support.", "llvm": true },
		{ "name": "mips64r3", "explanation": "Mips64r3 ISA Support.", "llvm": true },
		{ "name": "mips64r5", "explanation": "Mips64r5 ISA Support.", "llvm": true },
		{ "name": "mips64r6", "explanation": "Mips64r6 ISA Support [experimental].", "llvm": true },
		{ "name": "mt", "explanation": "Mips MT ASE.", "llvm": true },
		{ "name": "nan2008", "explanation": "IEEE 754-2008 NaN encoding.", "llvm": true },
		{
			"name": "noabicalls",
			"explanation": "Disable SVR4-style position-independent code.",
			"llvm": true
		},
		{
			"name": "nomadd4",
			"explanation": "Disable 4-operand madd.fmt and related instructions.",
			"llvm": true
		},
		{
			"name": "nooddspreg",
			"explanation": "Disable odd numbered single-precision registers.",
			"llvm": true
		},
		{ "name": "p5600", "explanation": "The P5600 Processor.", "llvm": true },
		{ "name": "ptr64", "explanation": "Pointers are 64-bit wide.", "llvm": true },
		{
			"name": "single-float",
			"explanation": "Only supports single precision float.",
			"llvm": true
		},
		{
			"name": "soft-float",
			"explanation": "Does not support floating point instructions.",
			"llvm": true
		},
		{ "name": "sym32", "explanation": "Symbols are 32 bit on Mips64.", "llvm": true },
		{
			"name": "use-indirect-jump-hazard",
			"explanation": "Use indirect jump guards to prevent certain speculation based attacks.",
			"llvm": true
		},
		{
			"name": "use-tcc-in-div",
			"explanation": "Force the assembler to use trapping.",
			"llvm": true
		},
		{ "name": "vfpu", "explanation": "Enable vector FPU instructions.", "llvm": true },
		{ "name": "xgot", "explanation": "Assume 32-bit GOT.", "llvm": true }
	],
	"hexagon": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "hvx", "explanation": "Hexagon HVX instructions.", "llvm": false },
		{ "name": "hvx-length128b", "explanation": "Hexagon HVX 128B instructions.", "llvm": false },
		{ "name": "audio", "explanation": "Hexagon Audio extension instructions.", "llvm": true },
		{ "name": "cabac", "explanation": "Emit the CABAC instruction.", "llvm": true },
		{ "name": "compound", "explanation": "Use compound instructions.", "llvm": true },
		{ "name": "duplex", "explanation": "Enable generation of duplex instruction.", "llvm": true },
		{
			"name": "hvx-ieee-fp",
			"explanation": "Hexagon HVX IEEE floating point instructions.",
			"llvm": true
		},
		{ "name": "hvx-length64b", "explanation": "Hexagon HVX 64B instructions.", "llvm": true },
		{
			"name": "hvx-qfloat",
			"explanation": "Hexagon HVX QFloating point instructions.",
			"llvm": true
		},
		{ "name": "hvxv60", "explanation": "Hexagon HVX instructions.", "llvm": true },
		{ "name": "hvxv62", "explanation": "Hexagon HVX instructions.", "llvm": true },
		{ "name": "hvxv65", "explanation": "Hexagon HVX instructions.", "llvm": true },
		{ "name": "hvxv66", "explanation": "Hexagon HVX instructions.", "llvm": true },
		{ "name": "hvxv67", "explanation": "Hexagon HVX instructions.", "llvm": true },
		{ "name": "hvxv68", "explanation": "Hexagon HVX instructions.", "llvm": true },
		{ "name": "hvxv69", "explanation": "Hexagon HVX instructions.", "llvm": true },
		{ "name": "hvxv71", "explanation": "Hexagon HVX instructions.", "llvm": true },
		{ "name": "hvxv73", "explanation": "Hexagon HVX instructions.", "llvm": true },
		{ "name": "long-calls", "explanation": "Use constant-extended calls.", "llvm": true },
		{ "name": "mem_noshuf", "explanation": "Supports mem_noshuf feature.", "llvm": true },
		{ "name": "memops", "explanation": "Use memop instructions.", "llvm": true },
		{
			"name": "noreturn-stack-elim",
			"explanation": "Eliminate stack allocation in a noreturn function when possible.",
			"llvm": true
		},
		{ "name": "nvj", "explanation": "Support for new-value jumps.", "llvm": true },
		{ "name": "nvs", "explanation": "Support for new-value stores.", "llvm": true },
		{ "name": "packets", "explanation": "Support for instruction packets.", "llvm": true },
		{ "name": "prev65", "explanation": "Support features deprecated in v65.", "llvm": true },
		{ "name": "reserved-r19", "explanation": "Reserve register R19.", "llvm": true },
		{
			"name": "small-data",
			"explanation": "Allow GP-relative addressing of global variables.",
			"llvm": true
		},
		{ "name": "tinycore", "explanation": "Hexagon Tiny Core.", "llvm": true },
		{ "name": "unsafe-fp", "explanation": "Use unsafe FP math.", "llvm": true },
		{ "name": "v5", "explanation": "Enable Hexagon V5 architecture.", "llvm": true },
		{ "name": "v55", "explanation": "Enable Hexagon V55 architecture.", "llvm": true },
		{ "name": "v60", "explanation": "Enable Hexagon V60 architecture.", "llvm": true },
		{ "name": "v62", "explanation": "Enable Hexagon V62 architecture.", "llvm": true },
		{ "name": "v65", "explanation": "Enable Hexagon V65 architecture.", "llvm": true },
		{ "name": "v66", "explanation": "Enable Hexagon V66 architecture.", "llvm": true },
		{ "name": "v67", "explanation": "Enable Hexagon V67 architecture.", "llvm": true },
		{ "name": "v68", "explanation": "Enable Hexagon V68 architecture.", "llvm": true },
		{ "name": "v69", "explanation": "Enable Hexagon V69 architecture.", "llvm": true },
		{ "name": "v71", "explanation": "Enable Hexagon V71 architecture.", "llvm": true },
		{ "name": "v73", "explanation": "Enable Hexagon V73 architecture.", "llvm": true },
		{ "name": "zreg", "explanation": "Hexagon ZReg extension instructions.", "llvm": true }
	],
	"m68k": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "isa-68000", "explanation": "Is M68000 ISA supported.", "llvm": true },
		{ "name": "isa-68010", "explanation": "Is M68010 ISA supported.", "llvm": true },
		{ "name": "isa-68020", "explanation": "Is M68020 ISA supported.", "llvm": true },
		{ "name": "isa-68030", "explanation": "Is M68030 ISA supported.", "llvm": true },
		{ "name": "isa-68040", "explanation": "Is M68040 ISA supported.", "llvm": true },
		{ "name": "isa-68060", "explanation": "Is M68060 ISA supported.", "llvm": true },
		{ "name": "isa-68881", "explanation": "Is M68881 (FPU) ISA supported.", "llvm": true },
		{ "name": "isa-68882", "explanation": "Is M68882 (FPU) ISA supported.", "llvm": true },
		{ "name": "reserve-a0", "explanation": "Reserve A0 register.", "llvm": true },
		{ "name": "reserve-a1", "explanation": "Reserve A1 register.", "llvm": true },
		{ "name": "reserve-a2", "explanation": "Reserve A2 register.", "llvm": true },
		{ "name": "reserve-a3", "explanation": "Reserve A3 register.", "llvm": true },
		{ "name": "reserve-a4", "explanation": "Reserve A4 register.", "llvm": true },
		{ "name": "reserve-a5", "explanation": "Reserve A5 register.", "llvm": true },
		{ "name": "reserve-a6", "explanation": "Reserve A6 register.", "llvm": true },
		{ "name": "reserve-d0", "explanation": "Reserve D0 register.", "llvm": true },
		{ "name": "reserve-d1", "explanation": "Reserve D1 register.", "llvm": true },
		{ "name": "reserve-d2", "explanation": "Reserve D2 register.", "llvm": true },
		{ "name": "reserve-d3", "explanation": "Reserve D3 register.", "llvm": true },
		{ "name": "reserve-d4", "explanation": "Reserve D4 register.", "llvm": true },
		{ "name": "reserve-d5", "explanation": "Reserve D5 register.", "llvm": true },
		{ "name": "reserve-d6", "explanation": "Reserve D6 register.", "llvm": true },
		{ "name": "reserve-d7", "explanation": "Reserve D7 register.", "llvm": true }
	],
	"mips64": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "fp64", "explanation": "Support 64-bit FP registers.", "llvm": false },
		{ "name": "msa", "explanation": "Mips MSA ASE.", "llvm": false },
		{ "name": "virt", "explanation": "Mips Virtualization ASE.", "llvm": false },
		{ "name": "abs2008", "explanation": "Disable IEEE 754-2008 abs.fmt mode.", "llvm": true },
		{ "name": "cnmips", "explanation": "Octeon cnMIPS Support.", "llvm": true },
		{ "name": "cnmipsp", "explanation": "Octeon+ cnMIPS Support.", "llvm": true },
		{ "name": "crc", "explanation": "Mips R6 CRC ASE.", "llvm": true },
		{ "name": "dsp", "explanation": "Mips DSP ASE.", "llvm": true },
		{ "name": "dspr2", "explanation": "Mips DSP-R2 ASE.", "llvm": true },
		{ "name": "dspr3", "explanation": "Mips DSP-R3 ASE.", "llvm": true },
		{ "name": "eva", "explanation": "Mips EVA ASE.", "llvm": true },
		{ "name": "fpxx", "explanation": "Support for FPXX.", "llvm": true },
		{ "name": "ginv", "explanation": "Mips Global Invalidate ASE.", "llvm": true },
		{ "name": "gp64", "explanation": "General Purpose Registers are 64-bit wide.", "llvm": true },
		{ "name": "long-calls", "explanation": "Disable use of the jal instruction.", "llvm": true },
		{ "name": "micromips", "explanation": "microMips mode.", "llvm": true },
		{ "name": "mips1", "explanation": "Mips I ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips16", "explanation": "Mips16 mode.", "llvm": true },
		{ "name": "mips2", "explanation": "Mips II ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips3", "explanation": "MIPS III ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips32", "explanation": "Mips32 ISA Support.", "llvm": true },
		{ "name": "mips32r2", "explanation": "Mips32r2 ISA Support.", "llvm": true },
		{ "name": "mips32r3", "explanation": "Mips32r3 ISA Support.", "llvm": true },
		{ "name": "mips32r5", "explanation": "Mips32r5 ISA Support.", "llvm": true },
		{ "name": "mips32r6", "explanation": "Mips32r6 ISA Support [experimental].", "llvm": true },
		{
			"name": "mips3_32",
			"explanation": "Subset of MIPS-III that is also in MIPS32 [highly experimental].",
			"llvm": true
		},
		{
			"name": "mips3_32r2",
			"explanation": "Subset of MIPS-III that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips3d", "explanation": "Mips 3D ASE.", "llvm": true },
		{ "name": "mips4", "explanation": "MIPS IV ISA Support.", "llvm": true },
		{
			"name": "mips4_32",
			"explanation": "Subset of MIPS-IV that is also in MIPS32 [highly experimental].",
			"llvm": true
		},
		{
			"name": "mips4_32r2",
			"explanation": "Subset of MIPS-IV that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips5", "explanation": "MIPS V ISA Support [highly experimental].", "llvm": true },
		{
			"name": "mips5_32r2",
			"explanation": "Subset of MIPS-V that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips64", "explanation": "Mips64 ISA Support.", "llvm": true },
		{ "name": "mips64r2", "explanation": "Mips64r2 ISA Support.", "llvm": true },
		{ "name": "mips64r3", "explanation": "Mips64r3 ISA Support.", "llvm": true },
		{ "name": "mips64r5", "explanation": "Mips64r5 ISA Support.", "llvm": true },
		{ "name": "mips64r6", "explanation": "Mips64r6 ISA Support [experimental].", "llvm": true },
		{ "name": "mt", "explanation": "Mips MT ASE.", "llvm": true },
		{ "name": "nan2008", "explanation": "IEEE 754-2008 NaN encoding.", "llvm": true },
		{
			"name": "noabicalls",
			"explanation": "Disable SVR4-style position-independent code.",
			"llvm": true
		},
		{
			"name": "nomadd4",
			"explanation": "Disable 4-operand madd.fmt and related instructions.",
			"llvm": true
		},
		{
			"name": "nooddspreg",
			"explanation": "Disable odd numbered single-precision registers.",
			"llvm": true
		},
		{ "name": "p5600", "explanation": "The P5600 Processor.", "llvm": true },
		{ "name": "ptr64", "explanation": "Pointers are 64-bit wide.", "llvm": true },
		{
			"name": "single-float",
			"explanation": "Only supports single precision float.",
			"llvm": true
		},
		{
			"name": "soft-float",
			"explanation": "Does not support floating point instructions.",
			"llvm": true
		},
		{ "name": "sym32", "explanation": "Symbols are 32 bit on Mips64.", "llvm": true },
		{
			"name": "use-indirect-jump-hazard",
			"explanation": "Use indirect jump guards to prevent certain speculation based attacks.",
			"llvm": true
		},
		{
			"name": "use-tcc-in-div",
			"explanation": "Force the assembler to use trapping.",
			"llvm": true
		},
		{ "name": "vfpu", "explanation": "Enable vector FPU instructions.", "llvm": true },
		{ "name": "xgot", "explanation": "Assume 32-bit GOT.", "llvm": true }
	],
	"msp430": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "ext", "explanation": "Enable MSP430-X extensions.", "llvm": true },
		{ "name": "hwmult16", "explanation": "Enable 16-bit hardware multiplier.", "llvm": true },
		{ "name": "hwmult32", "explanation": "Enable 32-bit hardware multiplier.", "llvm": true },
		{ "name": "hwmultf5", "explanation": "Enable F5 series hardware multiplier.", "llvm": true }
	],
	"avr": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "addsubiw",
			"explanation": "Enable 16-bit register-immediate addition and subtraction instructions.",
			"llvm": true
		},
		{ "name": "avr0", "explanation": "The device is a part of the avr0 family.", "llvm": true },
		{ "name": "avr1", "explanation": "The device is a part of the avr1 family.", "llvm": true },
		{ "name": "avr2", "explanation": "The device is a part of the avr2 family.", "llvm": true },
		{ "name": "avr25", "explanation": "The device is a part of the avr25 family.", "llvm": true },
		{ "name": "avr3", "explanation": "The device is a part of the avr3 family.", "llvm": true },
		{ "name": "avr31", "explanation": "The device is a part of the avr31 family.", "llvm": true },
		{ "name": "avr35", "explanation": "The device is a part of the avr35 family.", "llvm": true },
		{ "name": "avr4", "explanation": "The device is a part of the avr4 family.", "llvm": true },
		{ "name": "avr5", "explanation": "The device is a part of the avr5 family.", "llvm": true },
		{ "name": "avr51", "explanation": "The device is a part of the avr51 family.", "llvm": true },
		{ "name": "avr6", "explanation": "The device is a part of the avr6 family.", "llvm": true },
		{
			"name": "avrtiny",
			"explanation": "The device is a part of the avrtiny family.",
			"llvm": true
		},
		{
			"name": "break",
			"explanation": "The device supports the `BREAK` debugging instruction.",
			"llvm": true
		},
		{
			"name": "des",
			"explanation": "The device supports the `DES k` encryption instruction.",
			"llvm": true
		},
		{
			"name": "eijmpcall",
			"explanation": "The device supports the `EIJMP`/`EICALL` instructions.",
			"llvm": true
		},
		{ "name": "elpm", "explanation": "The device supports the ELPM instruction.", "llvm": true },
		{
			"name": "elpmx",
			"explanation": "The device supports the `ELPM Rd, Z[+]` instructions.",
			"llvm": true
		},
		{
			"name": "ijmpcall",
			"explanation": "The device supports `IJMP`/`ICALL`instructions.",
			"llvm": true
		},
		{
			"name": "jmpcall",
			"explanation": "The device supports the `JMP` and `CALL` instructions.",
			"llvm": true
		},
		{
			"name": "lowbytefirst",
			"explanation": "Do the low byte first when writing a 16-bit port or storing a 16-bit word.",
			"llvm": true
		},
		{ "name": "lpm", "explanation": "The device supports the `LPM` instruction.", "llvm": true },
		{
			"name": "lpmx",
			"explanation": "The device supports the `LPM Rd, Z[+]` instruction.",
			"llvm": true
		},
		{
			"name": "memmappedregs",
			"explanation": "The device has CPU registers mapped in data address space.",
			"llvm": true
		},
		{
			"name": "movw",
			"explanation": "The device supports the 16-bit MOVW instruction.",
			"llvm": true
		},
		{
			"name": "mul",
			"explanation": "The device supports the multiplication instructions.",
			"llvm": true
		},
		{
			"name": "rmw",
			"explanation": "The device supports the read-write-modify instructions: XCH, LAS, LAC, LAT.",
			"llvm": true
		},
		{ "name": "smallstack", "explanation": "The device has an 8-bit stack pointer.", "llvm": true },
		{ "name": "special", "explanation": "Enable use of the entire instruction set", "llvm": true },
		{ "name": "spm", "explanation": "The device supports the `SPM` instruction.", "llvm": true },
		{
			"name": "spmx",
			"explanation": "The device supports the `SPM Z+` instruction.",
			"llvm": true
		},
		{ "name": "sram", "explanation": "The device has random access memory.", "llvm": true },
		{
			"name": "tinyencoding",
			"explanation": "The device has Tiny core specific instruction encodings.",
			"llvm": true
		},
		{ "name": "xmega", "explanation": "The device is a part of the xmega family.", "llvm": true },
		{ "name": "xmega3", "explanation": "The device is a part of the xmega3 family.", "llvm": true },
		{ "name": "xmegau", "explanation": "The device is a part of the xmegau family.", "llvm": true }
	],
	"mips32r6": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "fp64", "explanation": "Support 64-bit FP registers.", "llvm": false },
		{ "name": "msa", "explanation": "Mips MSA ASE.", "llvm": false },
		{ "name": "virt", "explanation": "Mips Virtualization ASE.", "llvm": false },
		{ "name": "abs2008", "explanation": "Disable IEEE 754-2008 abs.fmt mode.", "llvm": true },
		{ "name": "cnmips", "explanation": "Octeon cnMIPS Support.", "llvm": true },
		{ "name": "cnmipsp", "explanation": "Octeon+ cnMIPS Support.", "llvm": true },
		{ "name": "crc", "explanation": "Mips R6 CRC ASE.", "llvm": true },
		{ "name": "dsp", "explanation": "Mips DSP ASE.", "llvm": true },
		{ "name": "dspr2", "explanation": "Mips DSP-R2 ASE.", "llvm": true },
		{ "name": "dspr3", "explanation": "Mips DSP-R3 ASE.", "llvm": true },
		{ "name": "eva", "explanation": "Mips EVA ASE.", "llvm": true },
		{ "name": "fpxx", "explanation": "Support for FPXX.", "llvm": true },
		{ "name": "ginv", "explanation": "Mips Global Invalidate ASE.", "llvm": true },
		{ "name": "gp64", "explanation": "General Purpose Registers are 64-bit wide.", "llvm": true },
		{ "name": "long-calls", "explanation": "Disable use of the jal instruction.", "llvm": true },
		{ "name": "micromips", "explanation": "microMips mode.", "llvm": true },
		{ "name": "mips1", "explanation": "Mips I ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips16", "explanation": "Mips16 mode.", "llvm": true },
		{ "name": "mips2", "explanation": "Mips II ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips3", "explanation": "MIPS III ISA Support [highly experimental].", "llvm": true },
		{ "name": "mips32", "explanation": "Mips32 ISA Support.", "llvm": true },
		{ "name": "mips32r2", "explanation": "Mips32r2 ISA Support.", "llvm": true },
		{ "name": "mips32r3", "explanation": "Mips32r3 ISA Support.", "llvm": true },
		{ "name": "mips32r5", "explanation": "Mips32r5 ISA Support.", "llvm": true },
		{ "name": "mips32r6", "explanation": "Mips32r6 ISA Support [experimental].", "llvm": true },
		{
			"name": "mips3_32",
			"explanation": "Subset of MIPS-III that is also in MIPS32 [highly experimental].",
			"llvm": true
		},
		{
			"name": "mips3_32r2",
			"explanation": "Subset of MIPS-III that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips3d", "explanation": "Mips 3D ASE.", "llvm": true },
		{ "name": "mips4", "explanation": "MIPS IV ISA Support.", "llvm": true },
		{
			"name": "mips4_32",
			"explanation": "Subset of MIPS-IV that is also in MIPS32 [highly experimental].",
			"llvm": true
		},
		{
			"name": "mips4_32r2",
			"explanation": "Subset of MIPS-IV that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips5", "explanation": "MIPS V ISA Support [highly experimental].", "llvm": true },
		{
			"name": "mips5_32r2",
			"explanation": "Subset of MIPS-V that is also in MIPS32r2 [highly experimental].",
			"llvm": true
		},
		{ "name": "mips64", "explanation": "Mips64 ISA Support.", "llvm": true },
		{ "name": "mips64r2", "explanation": "Mips64r2 ISA Support.", "llvm": true },
		{ "name": "mips64r3", "explanation": "Mips64r3 ISA Support.", "llvm": true },
		{ "name": "mips64r5", "explanation": "Mips64r5 ISA Support.", "llvm": true },
		{ "name": "mips64r6", "explanation": "Mips64r6 ISA Support [experimental].", "llvm": true },
		{ "name": "mt", "explanation": "Mips MT ASE.", "llvm": true },
		{ "name": "nan2008", "explanation": "IEEE 754-2008 NaN encoding.", "llvm": true },
		{
			"name": "noabicalls",
			"explanation": "Disable SVR4-style position-independent code.",
			"llvm": true
		},
		{
			"name": "nomadd4",
			"explanation": "Disable 4-operand madd.fmt and related instructions.",
			"llvm": true
		},
		{
			"name": "nooddspreg",
			"explanation": "Disable odd numbered single-precision registers.",
			"llvm": true
		},
		{ "name": "p5600", "explanation": "The P5600 Processor.", "llvm": true },
		{ "name": "ptr64", "explanation": "Pointers are 64-bit wide.", "llvm": true },
		{
			"name": "single-float",
			"explanation": "Only supports single precision float.",
			"llvm": true
		},
		{
			"name": "soft-float",
			"explanation": "Does not support floating point instructions.",
			"llvm": true
		},
		{ "name": "sym32", "explanation": "Symbols are 32 bit on Mips64.", "llvm": true },
		{
			"name": "use-indirect-jump-hazard",
			"explanation": "Use indirect jump guards to prevent certain speculation based attacks.",
			"llvm": true
		},
		{
			"name": "use-tcc-in-div",
			"explanation": "Force the assembler to use trapping.",
			"llvm": true
		},
		{ "name": "vfpu", "explanation": "Enable vector FPU instructions.", "llvm": true },
		{ "name": "xgot", "explanation": "Assume 32-bit GOT.", "llvm": true }
	],
	"loongarch64": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "d", "explanation": "'D' (Double-Precision Floating-Point).", "llvm": false },
		{ "name": "f", "explanation": "'F' (Single-Precision Floating-Point).", "llvm": false },
		{
			"name": "frecipe",
			"explanation": "Support frecipe.{s/d} and frsqrte.{s/d} instructions..",
			"llvm": false
		},
		{ "name": "lasx", "explanation": "'LASX' (Loongson Advanced SIMD Extension).", "llvm": false },
		{
			"name": "lbt",
			"explanation": "'LBT' (Loongson Binary Translation Extension).",
			"llvm": false
		},
		{ "name": "lsx", "explanation": "'LSX' (Loongson SIMD Extension).", "llvm": false },
		{ "name": "lvz", "explanation": "'LVZ' (Loongson Virtualization Extension).", "llvm": false },
		{ "name": "relax", "explanation": "Enable Linker relaxation.", "llvm": false },
		{ "name": "ual", "explanation": "Allow memory accesses to be unaligned.", "llvm": false },
		{
			"name": "32bit",
			"explanation": "LA32 Basic Integer and Privilege Instruction Set.",
			"llvm": true
		},
		{
			"name": "64bit",
			"explanation": "LA64 Basic Integer and Privilege Instruction Set.",
			"llvm": true
		},
		{ "name": "auto-vec", "explanation": "Experimental auto vectorization.", "llvm": true },
		{ "name": "la-global-with-abs", "explanation": "Expand la.global as la.abs.", "llvm": true },
		{
			"name": "la-global-with-pcrel",
			"explanation": "Expand la.global as la.pcrel.",
			"llvm": true
		},
		{ "name": "la-local-with-abs", "explanation": "Expand la.local as la.abs.", "llvm": true }
	],
	"aarch64": [
		{ "name": "aes", "explanation": "Enable AES support (FEAT_AES, FEAT_PMULL).", "llvm": false },
		{ "name": "bf16", "explanation": "Enable BFloat16 Extension (FEAT_BF16).", "llvm": false },
		{
			"name": "bti",
			"explanation": "Enable Branch Target Identification (FEAT_BTI).",
			"llvm": false
		},
		{
			"name": "crc",
			"explanation": "Enable ARMv8 CRC-32 checksum instructions (FEAT_CRC32).",
			"llvm": false
		},
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "dit",
			"explanation": "Enable v8.4-A Data Independent Timing instructions (FEAT_DIT).",
			"llvm": false
		},
		{
			"name": "dotprod",
			"explanation": "Enable dot product support (FEAT_DotProd).",
			"llvm": false
		},
		{
			"name": "dpb",
			"explanation": "Enable v8.2 data Cache Clean to Point of Persistence (FEAT_DPB).",
			"llvm": false
		},
		{
			"name": "dpb2",
			"explanation": "Enable v8.5 Cache Clean to Point of Deep Persistence (FEAT_DPB2).",
			"llvm": false
		},
		{
			"name": "f32mm",
			"explanation": "Enable Matrix Multiply FP32 Extension (FEAT_F32MM).",
			"llvm": false
		},
		{
			"name": "f64mm",
			"explanation": "Enable Matrix Multiply FP64 Extension (FEAT_F64MM).",
			"llvm": false
		},
		{
			"name": "fcma",
			"explanation": "Enable v8.3-A Floating-point complex number support (FEAT_FCMA).",
			"llvm": false
		},
		{ "name": "fhm", "explanation": "Enable FP16 FML instructions (FEAT_FHM).", "llvm": false },
		{
			"name": "flagm",
			"explanation": "Enable v8.4-A Flag Manipulation Instructions (FEAT_FlagM).",
			"llvm": false
		},
		{ "name": "fp16", "explanation": "Full FP16 (FEAT_FP16).", "llvm": false },
		{
			"name": "frintts",
			"explanation": "Enable FRInt[32|64][Z|X] instructions that round a floating-point number to an integer (in FP format) forcing it to fit into a 32- or 64-bit int (FEAT_FRINTTS).",
			"llvm": false
		},
		{
			"name": "i8mm",
			"explanation": "Enable Matrix Multiply Int8 Extension (FEAT_I8MM).",
			"llvm": false
		},
		{
			"name": "jsconv",
			"explanation": "Enable v8.3-A JavaScript FP conversion instructions (FEAT_JSCVT).",
			"llvm": false
		},
		{
			"name": "lor",
			"explanation": "Enables ARM v8.1 Limited Ordering Regions extension (FEAT_LOR).",
			"llvm": false
		},
		{
			"name": "lse",
			"explanation": "Enable ARMv8.1 Large System Extension (LSE) atomic instructions (FEAT_LSE).",
			"llvm": false
		},
		{
			"name": "mte",
			"explanation": "Enable Memory Tagging Extension (FEAT_MTE, FEAT_MTE2).",
			"llvm": false
		},
		{
			"name": "neon",
			"explanation": "Enable Advanced SIMD instructions (FEAT_AdvSIMD).",
			"llvm": false
		},
		{
			"name": "paca",
			"explanation": "Enable v8.3-A Pointer Authentication extension (FEAT_PAuth).",
			"llvm": false
		},
		{
			"name": "pacg",
			"explanation": "Enable v8.3-A Pointer Authentication extension (FEAT_PAuth).",
			"llvm": false
		},
		{
			"name": "pan",
			"explanation": "Enables ARM v8.1 Privileged Access-Never extension (FEAT_PAN).",
			"llvm": false
		},
		{
			"name": "pmuv3",
			"explanation": "Enable Code Generation for ARMv8 PMUv3 Performance Monitors extension (FEAT_PMUv3).",
			"llvm": false
		},
		{
			"name": "rand",
			"explanation": "Enable Random Number generation instructions (FEAT_RNG).",
			"llvm": false
		},
		{
			"name": "ras",
			"explanation": "Enable ARMv8 Reliability, Availability and Serviceability Extensions (FEAT_RAS, FEAT_RASv1p1).",
			"llvm": false
		},
		{
			"name": "rcpc",
			"explanation": "Enable support for RCPC extension (FEAT_LRCPC).",
			"llvm": false
		},
		{
			"name": "rcpc2",
			"explanation": "Enable v8.4-A RCPC instructions with Immediate Offsets (FEAT_LRCPC2).",
			"llvm": false
		},
		{
			"name": "rdm",
			"explanation": "Enable ARMv8.1 Rounding Double Multiply Add/Subtract instructions (FEAT_RDM).",
			"llvm": false
		},
		{ "name": "sb", "explanation": "Enable v8.5 Speculation Barrier (FEAT_SB).", "llvm": false },
		{
			"name": "sha2",
			"explanation": "Enable SHA1 and SHA256 support (FEAT_SHA1, FEAT_SHA256).",
			"llvm": false
		},
		{
			"name": "sha3",
			"explanation": "Enable SHA512 and SHA3 support (FEAT_SHA3, FEAT_SHA512).",
			"llvm": false
		},
		{
			"name": "sm4",
			"explanation": "Enable SM3 and SM4 support (FEAT_SM4, FEAT_SM3).",
			"llvm": false
		},
		{
			"name": "spe",
			"explanation": "Enable Statistical Profiling extension (FEAT_SPE).",
			"llvm": false
		},
		{
			"name": "ssbs",
			"explanation": "Enable Speculative Store Bypass Safe bit (FEAT_SSBS, FEAT_SSBS2).",
			"llvm": false
		},
		{
			"name": "sve",
			"explanation": "Enable Scalable Vector Extension (SVE) instructions (FEAT_SVE).",
			"llvm": false
		},
		{
			"name": "sve2",
			"explanation": "Enable Scalable Vector Extension 2 (SVE2) instructions (FEAT_SVE2).",
			"llvm": false
		},
		{
			"name": "sve2-aes",
			"explanation": "Enable AES SVE2 instructions (FEAT_SVE_AES, FEAT_SVE_PMULL128).",
			"llvm": false
		},
		{
			"name": "sve2-bitperm",
			"explanation": "Enable bit permutation SVE2 instructions (FEAT_SVE_BitPerm).",
			"llvm": false
		},
		{
			"name": "sve2-sha3",
			"explanation": "Enable SHA3 SVE2 instructions (FEAT_SVE_SHA3).",
			"llvm": false
		},
		{
			"name": "sve2-sm4",
			"explanation": "Enable SM4 SVE2 instructions (FEAT_SVE_SM4).",
			"llvm": false
		},
		{
			"name": "tme",
			"explanation": "Enable Transactional Memory Extension (FEAT_TME).",
			"llvm": false
		},
		{ "name": "v8.1a", "explanation": "Support ARM v8.1a instructions.", "llvm": false },
		{ "name": "v8.2a", "explanation": "Support ARM v8.2a instructions.", "llvm": false },
		{ "name": "v8.3a", "explanation": "Support ARM v8.3a instructions.", "llvm": false },
		{ "name": "v8.4a", "explanation": "Support ARM v8.4a instructions.", "llvm": false },
		{ "name": "v8.5a", "explanation": "Support ARM v8.5a instructions.", "llvm": false },
		{ "name": "v8.6a", "explanation": "Support ARM v8.6a instructions.", "llvm": false },
		{ "name": "v8.7a", "explanation": "Support ARM v8.7a instructions.", "llvm": false },
		{
			"name": "vh",
			"explanation": "Enables ARM v8.1 Virtual Host extension (FEAT_VHE).",
			"llvm": false
		},
		{ "name": "CONTEXTIDREL2", "explanation": "Enable RW operand CONTEXTIDR_EL2.", "llvm": true },
		{ "name": "a35", "explanation": "Cortex-A35 ARM processors.", "llvm": true },
		{ "name": "a510", "explanation": "Cortex-A510 ARM processors.", "llvm": true },
		{ "name": "a520", "explanation": "Cortex-A520 ARM processors.", "llvm": true },
		{ "name": "a53", "explanation": "Cortex-A53 ARM processors.", "llvm": true },
		{ "name": "a55", "explanation": "Cortex-A55 ARM processors.", "llvm": true },
		{ "name": "a57", "explanation": "Cortex-A57 ARM processors.", "llvm": true },
		{ "name": "a64fx", "explanation": "Fujitsu A64FX processors.", "llvm": true },
		{ "name": "a65", "explanation": "Cortex-A65 ARM processors.", "llvm": true },
		{ "name": "a710", "explanation": "Cortex-A710 ARM processors.", "llvm": true },
		{ "name": "a715", "explanation": "Cortex-A715 ARM processors.", "llvm": true },
		{ "name": "a72", "explanation": "Cortex-A72 ARM processors.", "llvm": true },
		{ "name": "a720", "explanation": "Cortex-A720 ARM processors.", "llvm": true },
		{ "name": "a73", "explanation": "Cortex-A73 ARM processors.", "llvm": true },
		{ "name": "a75", "explanation": "Cortex-A75 ARM processors.", "llvm": true },
		{ "name": "a76", "explanation": "Cortex-A76 ARM processors.", "llvm": true },
		{ "name": "a77", "explanation": "Cortex-A77 ARM processors.", "llvm": true },
		{ "name": "a78", "explanation": "Cortex-A78 ARM processors.", "llvm": true },
		{ "name": "a78c", "explanation": "Cortex-A78C ARM processors.", "llvm": true },
		{
			"name": "addr-lsl-fast",
			"explanation": "Address operands with logical shift of up to 3 places are cheap.",
			"llvm": true
		},
		{
			"name": "aggressive-fma",
			"explanation": "Enable Aggressive FMA for floating-point..",
			"llvm": true
		},
		{ "name": "all", "explanation": "Enable all instructions.", "llvm": true },
		{
			"name": "alternate-sextload-cvt-f32-pattern",
			"explanation": "Use alternative pattern for sextload convert to f32.",
			"llvm": true
		},
		{
			"name": "altnzcv",
			"explanation": "Enable alternative NZCV format for floating point comparisons (FEAT_FlagM2).",
			"llvm": true
		},
		{
			"name": "alu-lsl-fast",
			"explanation": "Add/Sub operations with lsl shift <= 4 are cheap.",
			"llvm": true
		},
		{
			"name": "am",
			"explanation": "Enable v8.4-A Activity Monitors extension (FEAT_AMUv1).",
			"llvm": true
		},
		{ "name": "ampere1", "explanation": "Ampere Computing Ampere-1 processors.", "llvm": true },
		{ "name": "ampere1a", "explanation": "Ampere Computing Ampere-1A processors.", "llvm": true },
		{ "name": "ampere1b", "explanation": "Ampere Computing Ampere-1B processors.", "llvm": true },
		{
			"name": "amvs",
			"explanation": "Enable v8.6-A Activity Monitors Virtualization support (FEAT_AMUv1p1).",
			"llvm": true
		},
		{ "name": "apple-a10", "explanation": "Apple A10.", "llvm": true },
		{ "name": "apple-a11", "explanation": "Apple A11.", "llvm": true },
		{ "name": "apple-a12", "explanation": "Apple A12.", "llvm": true },
		{ "name": "apple-a13", "explanation": "Apple A13.", "llvm": true },
		{ "name": "apple-a14", "explanation": "Apple A14.", "llvm": true },
		{ "name": "apple-a15", "explanation": "Apple A15.", "llvm": true },
		{ "name": "apple-a16", "explanation": "Apple A16.", "llvm": true },
		{ "name": "apple-a17", "explanation": "Apple A17.", "llvm": true },
		{
			"name": "apple-a7",
			"explanation": "Apple A7 (the CPU formerly known as Cyclone).",
			"llvm": true
		},
		{
			"name": "apple-a7-sysreg",
			"explanation": "Apple A7 (the CPU formerly known as Cyclone).",
			"llvm": true
		},
		{
			"name": "arith-bcc-fusion",
			"explanation": "CPU fuses arithmetic+bcc operations.",
			"llvm": true
		},
		{
			"name": "arith-cbz-fusion",
			"explanation": "CPU fuses arithmetic + cbz/cbnz operations.",
			"llvm": true
		},
		{
			"name": "ascend-store-address",
			"explanation": "Schedule vector stores by ascending address.",
			"llvm": true
		},
		{
			"name": "b16b16",
			"explanation": "Enable SVE2.1 or SME2.1 non-widening BFloat16 to BFloat16 instructions (FEAT_B16B16).",
			"llvm": true
		},
		{
			"name": "balance-fp-ops",
			"explanation": "balance mix of odd and even D-registers for fp multiply(-accumulate) ops.",
			"llvm": true
		},
		{
			"name": "brbe",
			"explanation": "Enable Branch Record Buffer Extension (FEAT_BRBE).",
			"llvm": true
		},
		{ "name": "call-saved-x10", "explanation": "Make X10 callee saved..", "llvm": true },
		{ "name": "call-saved-x11", "explanation": "Make X11 callee saved..", "llvm": true },
		{ "name": "call-saved-x12", "explanation": "Make X12 callee saved..", "llvm": true },
		{ "name": "call-saved-x13", "explanation": "Make X13 callee saved..", "llvm": true },
		{ "name": "call-saved-x14", "explanation": "Make X14 callee saved..", "llvm": true },
		{ "name": "call-saved-x15", "explanation": "Make X15 callee saved..", "llvm": true },
		{ "name": "call-saved-x18", "explanation": "Make X18 callee saved..", "llvm": true },
		{ "name": "call-saved-x8", "explanation": "Make X8 callee saved..", "llvm": true },
		{ "name": "call-saved-x9", "explanation": "Make X9 callee saved..", "llvm": true },
		{ "name": "carmel", "explanation": "Nvidia Carmel processors.", "llvm": true },
		{
			"name": "ccidx",
			"explanation": "Enable v8.3-A Extend of the CCSIDR number of sets (FEAT_CCIDX).",
			"llvm": true
		},
		{
			"name": "chk",
			"explanation": "Enable Armv8.0-A Check Feature Status Extension (FEAT_CHK).",
			"llvm": true
		},
		{
			"name": "clrbhb",
			"explanation": "Enable Clear BHB instruction (FEAT_CLRBHB).",
			"llvm": true
		},
		{ "name": "cmp-bcc-fusion", "explanation": "CPU fuses cmp+bcc operations.", "llvm": true },
		{ "name": "cortex-r82", "explanation": "Cortex-R82 ARM processors.", "llvm": true },
		{ "name": "cortex-x1", "explanation": "Cortex-X1 ARM processors.", "llvm": true },
		{ "name": "cortex-x2", "explanation": "Cortex-X2 ARM processors.", "llvm": true },
		{ "name": "cortex-x3", "explanation": "Cortex-X3 ARM processors.", "llvm": true },
		{ "name": "cortex-x4", "explanation": "Cortex-X4 ARM processors.", "llvm": true },
		{
			"name": "cpa",
			"explanation": "Enable Armv9.5-A Checked Pointer Arithmetic (FEAT_CPA).",
			"llvm": true
		},
		{ "name": "crypto", "explanation": "Enable cryptographic instructions.", "llvm": true },
		{
			"name": "cssc",
			"explanation": "Enable Common Short Sequence Compression (CSSC) instructions (FEAT_CSSC).",
			"llvm": true
		},
		{
			"name": "d128",
			"explanation": "Enable Armv9.4-A 128-bit Page Table Descriptors, System Registers and Instructions (FEAT_D128, FEAT_LVA3, FEAT_SYSREG128, FEAT_SYSINSTR128).",
			"llvm": true
		},
		{
			"name": "disable-latency-sched-heuristic",
			"explanation": "Disable latency scheduling heuristic.",
			"llvm": true
		},
		{ "name": "disable-ldp", "explanation": "Do not emit ldp.", "llvm": true },
		{ "name": "disable-stp", "explanation": "Do not emit stp.", "llvm": true },
		{
			"name": "ecv",
			"explanation": "Enable enhanced counter virtualization extension (FEAT_ECV).",
			"llvm": true
		},
		{
			"name": "el2vmsa",
			"explanation": "Enable Exception Level 2 Virtual Memory System Architecture.",
			"llvm": true
		},
		{ "name": "el3", "explanation": "Enable Exception Level 3.", "llvm": true },
		{
			"name": "enable-select-opt",
			"explanation": "Enable the select optimize pass for select loop heuristics.",
			"llvm": true
		},
		{ "name": "ete", "explanation": "Enable Embedded Trace Extension (FEAT_ETE).", "llvm": true },
		{
			"name": "exynos-cheap-as-move",
			"explanation": "Use Exynos specific handling of cheap instructions.",
			"llvm": true
		},
		{ "name": "exynosm3", "explanation": "Samsung Exynos-M3 processors.", "llvm": true },
		{ "name": "exynosm4", "explanation": "Samsung Exynos-M4 processors.", "llvm": true },
		{ "name": "falkor", "explanation": "Qualcomm Falkor processors.", "llvm": true },
		{
			"name": "faminmax",
			"explanation": "Enable FAMIN and FAMAX instructions (FEAT_FAMINMAX).",
			"llvm": true
		},
		{
			"name": "fgt",
			"explanation": "Enable fine grained virtualization traps extension (FEAT_FGT).",
			"llvm": true
		},
		{
			"name": "fix-cortex-a53-835769",
			"explanation": "Mitigate Cortex-A53 Erratum 835769.",
			"llvm": true
		},
		{ "name": "fmv", "explanation": "Enable Function Multi Versioning support..", "llvm": true },
		{
			"name": "force-32bit-jump-tables",
			"explanation": "Force jump table entries to be 32-bits wide except at MinSize.",
			"llvm": true
		},
		{ "name": "fp-armv8", "explanation": "Enable ARMv8 FP (FEAT_FP).", "llvm": true },
		{ "name": "fp8", "explanation": "Enable FP8 instructions (FEAT_FP8).", "llvm": true },
		{
			"name": "fp8dot2",
			"explanation": "Enable fp8 2-way dot instructions (FEAT_FP8DOT2).",
			"llvm": true
		},
		{
			"name": "fp8dot4",
			"explanation": "Enable fp8 4-way dot instructions (FEAT_FP8DOT4).",
			"llvm": true
		},
		{
			"name": "fp8fma",
			"explanation": "Enable fp8 multiply-add instructions (FEAT_FP8FMA).",
			"llvm": true
		},
		{ "name": "fpmr", "explanation": "Enable FPMR Register (FEAT_FPMR).", "llvm": true },
		{
			"name": "fuse-address",
			"explanation": "CPU fuses address generation and memory operations.",
			"llvm": true
		},
		{
			"name": "fuse-addsub-2reg-const1",
			"explanation": "CPU fuses (a + b + 1) and (a",
			"llvm": true
		},
		{ "name": "fuse-adrp-add", "explanation": "CPU fuses adrp+add operations.", "llvm": true },
		{ "name": "fuse-aes", "explanation": "CPU fuses AES crypto operations.", "llvm": true },
		{
			"name": "fuse-arith-logic",
			"explanation": "CPU fuses arithmetic and logic operations.",
			"llvm": true
		},
		{
			"name": "fuse-crypto-eor",
			"explanation": "CPU fuses AES/PMULL and EOR operations.",
			"llvm": true
		},
		{
			"name": "fuse-csel",
			"explanation": "CPU fuses conditional select operations.",
			"llvm": true
		},
		{
			"name": "fuse-literals",
			"explanation": "CPU fuses literal generation operations.",
			"llvm": true
		},
		{
			"name": "gcs",
			"explanation": "Enable Armv9.4-A Guarded Call Stack Extension.",
			"llvm": true
		},
		{
			"name": "harden-sls-blr",
			"explanation": "Harden against straight line speculation across BLR instructions.",
			"llvm": true
		},
		{
			"name": "harden-sls-nocomdat",
			"explanation": "Generate thunk code for SLS mitigation in the normal text section.",
			"llvm": true
		},
		{
			"name": "harden-sls-retbr",
			"explanation": "Harden against straight line speculation across RET and BR instructions.",
			"llvm": true
		},
		{
			"name": "hbc",
			"explanation": "Enable Armv8.8-A Hinted Conditional Branches Extension (FEAT_HBC).",
			"llvm": true
		},
		{
			"name": "hcx",
			"explanation": "Enable Armv8.7-A HCRX_EL2 system register (FEAT_HCX).",
			"llvm": true
		},
		{
			"name": "ite",
			"explanation": "Enable Armv9.4-A Instrumentation Extension FEAT_ITE.",
			"llvm": true
		},
		{ "name": "kryo", "explanation": "Qualcomm Kryo processors.", "llvm": true },
		{
			"name": "ldp-aligned-only",
			"explanation": "In order to emit ldp, first check if the load will be aligned to 2 * element_size.",
			"llvm": true
		},
		{
			"name": "ls64",
			"explanation": "Enable Armv8.7-A LD64B/ST64B Accelerator Extension (FEAT_LS64, FEAT_LS64_V, FEAT_LS64_ACCDATA).",
			"llvm": true
		},
		{
			"name": "lse128",
			"explanation": "Enable Armv9.4-A 128-bit Atomic Instructions (FEAT_LSE128).",
			"llvm": true
		},
		{
			"name": "lse2",
			"explanation": "Enable ARMv8.4 Large System Extension 2 (LSE2) atomicity rules (FEAT_LSE2).",
			"llvm": true
		},
		{ "name": "lut", "explanation": "Enable Lookup Table instructions (FEAT_LUT).", "llvm": true },
		{ "name": "mec", "explanation": "Enable Memory Encryption Contexts Extension.", "llvm": true },
		{
			"name": "mops",
			"explanation": "Enable Armv8.8-A memcpy and memset acceleration instructions (FEAT_MOPS).",
			"llvm": true
		},
		{
			"name": "mpam",
			"explanation": "Enable v8.4-A Memory system Partitioning and Monitoring extension (FEAT_MPAM).",
			"llvm": true
		},
		{ "name": "neoverse512tvb", "explanation": "Neoverse 512-TVB ARM processors.", "llvm": true },
		{ "name": "neoversee1", "explanation": "Neoverse E1 ARM processors.", "llvm": true },
		{ "name": "neoversen1", "explanation": "Neoverse N1 ARM processors.", "llvm": true },
		{ "name": "neoversen2", "explanation": "Neoverse N2 ARM processors.", "llvm": true },
		{ "name": "neoversev1", "explanation": "Neoverse V1 ARM processors.", "llvm": true },
		{ "name": "neoversev2", "explanation": "Neoverse V2 ARM processors.", "llvm": true },
		{
			"name": "nmi",
			"explanation": "Enable Armv8.8-A Non-maskable Interrupts (FEAT_NMI, FEAT_GICv3_NMI).",
			"llvm": true
		},
		{
			"name": "no-bti-at-return-twice",
			"explanation": "Don't place a BTI instruction after a return-twice.",
			"llvm": true
		},
		{
			"name": "no-neg-immediates",
			"explanation": "Convert immediates and instructions to their negated or complemented equivalent when the immediate does not fit in the encoding..",
			"llvm": true
		},
		{
			"name": "no-sve-fp-ld1r",
			"explanation": "Avoid using LD1RX instructions for FP.",
			"llvm": true
		},
		{
			"name": "no-zcz-fp",
			"explanation": "Has no zero-cycle zeroing instructions for FP registers.",
			"llvm": true
		},
		{
			"name": "nv",
			"explanation": "Enable v8.4-A Nested Virtualization Enchancement (FEAT_NV, FEAT_NV2).",
			"llvm": true
		},
		{
			"name": "outline-atomics",
			"explanation": "Enable out of line atomics to support LSE instructions.",
			"llvm": true
		},
		{
			"name": "pan-rwv",
			"explanation": "Enable v8.2 PAN s1e1R and s1e1W Variants (FEAT_PAN2).",
			"llvm": true
		},
		{
			"name": "pauth-lr",
			"explanation": "Enable Armv9.5-A PAC enhancements (FEAT_PAuth_LR).",
			"llvm": true
		},
		{
			"name": "predictable-select-expensive",
			"explanation": "Prefer likely predicted branches over selects.",
			"llvm": true
		},
		{
			"name": "predres",
			"explanation": "Enable v8.5a execution and data prediction invalidation instructions (FEAT_SPECRES).",
			"llvm": true
		},
		{
			"name": "prfm-slc-target",
			"explanation": "Enable SLC target for PRFM instruction.",
			"llvm": true
		},
		{
			"name": "rasv2",
			"explanation": "Enable ARMv8.9-A Reliability, Availability and Serviceability Extensions (FEAT_RASv2).",
			"llvm": true
		},
		{
			"name": "rcpc3",
			"explanation": "Enable Armv8.9-A RCPC instructions for A64 and Advanced SIMD and floating-point instruction set (FEAT_LRCPC3).",
			"llvm": true
		},
		{
			"name": "reserve-x1",
			"explanation": "Reserve X1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x10",
			"explanation": "Reserve X10, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x11",
			"explanation": "Reserve X11, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x12",
			"explanation": "Reserve X12, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x13",
			"explanation": "Reserve X13, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x14",
			"explanation": "Reserve X14, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x15",
			"explanation": "Reserve X15, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x18",
			"explanation": "Reserve X18, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x2",
			"explanation": "Reserve X2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x20",
			"explanation": "Reserve X20, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x21",
			"explanation": "Reserve X21, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x22",
			"explanation": "Reserve X22, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x23",
			"explanation": "Reserve X23, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x24",
			"explanation": "Reserve X24, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x25",
			"explanation": "Reserve X25, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x26",
			"explanation": "Reserve X26, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x27",
			"explanation": "Reserve X27, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x28",
			"explanation": "Reserve X28, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x3",
			"explanation": "Reserve X3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x30",
			"explanation": "Reserve X30, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x4",
			"explanation": "Reserve X4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x5",
			"explanation": "Reserve X5, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x6",
			"explanation": "Reserve X6, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x7",
			"explanation": "Reserve X7, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x9",
			"explanation": "Reserve X9, making it unavailable as a GPR.",
			"llvm": true
		},
		{ "name": "rme", "explanation": "Enable Realm Management Extension (FEAT_RME).", "llvm": true },
		{ "name": "saphira", "explanation": "Qualcomm Saphira processors.", "llvm": true },
		{
			"name": "sel2",
			"explanation": "Enable v8.4-A Secure Exception Level 2 extension (FEAT_SEL2).",
			"llvm": true
		},
		{
			"name": "slow-misaligned-128store",
			"explanation": "Misaligned 128 bit stores are slow.",
			"llvm": true
		},
		{
			"name": "slow-paired-128",
			"explanation": "Paired 128 bit loads and stores are slow.",
			"llvm": true
		},
		{
			"name": "slow-strqro-store",
			"explanation": "STR of Q register with register offset is slow.",
			"llvm": true
		},
		{
			"name": "sme",
			"explanation": "Enable Scalable Matrix Extension (SME) (FEAT_SME).",
			"llvm": true
		},
		{
			"name": "sme-f16f16",
			"explanation": "Enable SME2.1 non-widening Float16 instructions (FEAT_SME_F16F16).",
			"llvm": true
		},
		{
			"name": "sme-f64f64",
			"explanation": "Enable Scalable Matrix Extension (SME) F64F64 instructions (FEAT_SME_F64F64).",
			"llvm": true
		},
		{
			"name": "sme-f8f16",
			"explanation": "Enable Scalable Matrix Extension (SME) F8F16 instructions(FEAT_SME_F8F16).",
			"llvm": true
		},
		{
			"name": "sme-f8f32",
			"explanation": "Enable Scalable Matrix Extension (SME) F8F32 instructions (FEAT_SME_F8F32).",
			"llvm": true
		},
		{
			"name": "sme-fa64",
			"explanation": "Enable the full A64 instruction set in streaming SVE mode (FEAT_SME_FA64).",
			"llvm": true
		},
		{
			"name": "sme-i16i64",
			"explanation": "Enable Scalable Matrix Extension (SME) I16I64 instructions (FEAT_SME_I16I64).",
			"llvm": true
		},
		{
			"name": "sme-lutv2",
			"explanation": "Enable Scalable Matrix Extension (SME) LUTv2 instructions (FEAT_SME_LUTv2).",
			"llvm": true
		},
		{
			"name": "sme2",
			"explanation": "Enable Scalable Matrix Extension 2 (SME2) instructions.",
			"llvm": true
		},
		{
			"name": "sme2p1",
			"explanation": "Enable Scalable Matrix Extension 2.1 (FEAT_SME2p1) instructions.",
			"llvm": true
		},
		{
			"name": "spe-eef",
			"explanation": "Enable extra register in the Statistical Profiling Extension (FEAT_SPEv1p2).",
			"llvm": true
		},
		{
			"name": "specres2",
			"explanation": "Enable Speculation Restriction Instruction (FEAT_SPECRES2).",
			"llvm": true
		},
		{
			"name": "specrestrict",
			"explanation": "Enable architectural speculation restriction (FEAT_CSV2_2).",
			"llvm": true
		},
		{
			"name": "ssve-fp8dot2",
			"explanation": "Enable SVE2 fp8 2-way dot product instructions (FEAT_SSVE_FP8DOT2).",
			"llvm": true
		},
		{
			"name": "ssve-fp8dot4",
			"explanation": "Enable SVE2 fp8 4-way dot product instructions (FEAT_SSVE_FP8DOT4).",
			"llvm": true
		},
		{
			"name": "ssve-fp8fma",
			"explanation": "Enable SVE2 fp8 multiply-add instructions (FEAT_SSVE_FP8FMA).",
			"llvm": true
		},
		{
			"name": "store-pair-suppress",
			"explanation": "Enable Store Pair Suppression heuristics.",
			"llvm": true
		},
		{
			"name": "stp-aligned-only",
			"explanation": "In order to emit stp, first check if the store will be aligned to 2 * element_size.",
			"llvm": true
		},
		{
			"name": "strict-align",
			"explanation": "Disallow all unaligned memory access.",
			"llvm": true
		},
		{
			"name": "sve2p1",
			"explanation": "Enable Scalable Vector Extension 2.1 instructions.",
			"llvm": true
		},
		{
			"name": "tagged-globals",
			"explanation": "Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits.",
			"llvm": true
		},
		{
			"name": "the",
			"explanation": "Enable Armv8.9-A Translation Hardening Extension (FEAT_THE).",
			"llvm": true
		},
		{ "name": "thunderx", "explanation": "Cavium ThunderX processors.", "llvm": true },
		{ "name": "thunderx2t99", "explanation": "Cavium ThunderX2 processors.", "llvm": true },
		{ "name": "thunderx3t110", "explanation": "Marvell ThunderX3 processors.", "llvm": true },
		{ "name": "thunderxt81", "explanation": "Cavium ThunderX processors.", "llvm": true },
		{ "name": "thunderxt83", "explanation": "Cavium ThunderX processors.", "llvm": true },
		{ "name": "thunderxt88", "explanation": "Cavium ThunderX processors.", "llvm": true },
		{
			"name": "tlb-rmi",
			"explanation": "Enable v8.4-A TLB Range and Maintenance Instructions (FEAT_TLBIOS, FEAT_TLBIRANGE).",
			"llvm": true
		},
		{
			"name": "tlbiw",
			"explanation": "Enable ARMv9.5-A TLBI VMALL for Dirty State (FEAT_TLBIW).",
			"llvm": true
		},
		{
			"name": "tpidr-el1",
			"explanation": "Permit use of TPIDR_EL1 for the TLS base.",
			"llvm": true
		},
		{
			"name": "tpidr-el2",
			"explanation": "Permit use of TPIDR_EL2 for the TLS base.",
			"llvm": true
		},
		{
			"name": "tpidr-el3",
			"explanation": "Permit use of TPIDR_EL3 for the TLS base.",
			"llvm": true
		},
		{
			"name": "tpidrro-el0",
			"explanation": "Permit use of TPIDRRO_EL0 for the TLS base.",
			"llvm": true
		},
		{
			"name": "tracev8.4",
			"explanation": "Enable v8.4-A Trace extension (FEAT_TRF).",
			"llvm": true
		},
		{ "name": "trbe", "explanation": "Enable Trace Buffer Extension (FEAT_TRBE).", "llvm": true },
		{ "name": "tsv110", "explanation": "HiSilicon TS-V110 processors.", "llvm": true },
		{ "name": "uaops", "explanation": "Enable v8.2 UAO PState (FEAT_UAO).", "llvm": true },
		{
			"name": "use-experimental-zeroing-pseudos",
			"explanation": "Hint to the compiler that the MOVPRFX instruction is merged with destructive operations.",
			"llvm": true
		},
		{
			"name": "use-postra-scheduler",
			"explanation": "Schedule again after register allocation.",
			"llvm": true
		},
		{
			"name": "use-reciprocal-square-root",
			"explanation": "Use the reciprocal square root approximation.",
			"llvm": true
		},
		{ "name": "use-scalar-inc-vl", "explanation": "Prefer inc/dec over add+cnt.", "llvm": true },
		{ "name": "v8.8a", "explanation": "Support ARM v8.8a instructions.", "llvm": true },
		{ "name": "v8.9a", "explanation": "Support ARM v8.9a instructions.", "llvm": true },
		{ "name": "v8a", "explanation": "Support ARM v8.0a instructions.", "llvm": true },
		{ "name": "v8r", "explanation": "Support ARM v8r instructions.", "llvm": true },
		{ "name": "v9.1a", "explanation": "Support ARM v9.1a instructions.", "llvm": true },
		{ "name": "v9.2a", "explanation": "Support ARM v9.2a instructions.", "llvm": true },
		{ "name": "v9.3a", "explanation": "Support ARM v9.3a instructions.", "llvm": true },
		{ "name": "v9.4a", "explanation": "Support ARM v9.4a instructions.", "llvm": true },
		{ "name": "v9.5a", "explanation": "Support ARM v9.5a instructions.", "llvm": true },
		{ "name": "v9a", "explanation": "Support ARM v9a instructions.", "llvm": true },
		{
			"name": "wfxt",
			"explanation": "Enable Armv8.7-A WFET and WFIT instruction (FEAT_WFxT).",
			"llvm": true
		},
		{
			"name": "xs",
			"explanation": "Enable Armv8.7-A limited-TLB-maintenance instruction (FEAT_XS).",
			"llvm": true
		},
		{ "name": "zcm", "explanation": "Has zero-cycle register moves.", "llvm": true },
		{ "name": "zcz", "explanation": "Has zero-cycle zeroing instructions.", "llvm": true },
		{
			"name": "zcz-fp-workaround",
			"explanation": "The zero-cycle floating-point zeroing instruction has a bug.",
			"llvm": true
		},
		{
			"name": "zcz-gp",
			"explanation": "Has zero-cycle zeroing instructions for generic registers.",
			"llvm": true
		}
	],
	"arm64ec": [
		{ "name": "aes", "explanation": "Enable AES support (FEAT_AES, FEAT_PMULL).", "llvm": false },
		{ "name": "bf16", "explanation": "Enable BFloat16 Extension (FEAT_BF16).", "llvm": false },
		{
			"name": "bti",
			"explanation": "Enable Branch Target Identification (FEAT_BTI).",
			"llvm": false
		},
		{
			"name": "crc",
			"explanation": "Enable ARMv8 CRC-32 checksum instructions (FEAT_CRC32).",
			"llvm": false
		},
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "dit",
			"explanation": "Enable v8.4-A Data Independent Timing instructions (FEAT_DIT).",
			"llvm": false
		},
		{
			"name": "dotprod",
			"explanation": "Enable dot product support (FEAT_DotProd).",
			"llvm": false
		},
		{
			"name": "dpb",
			"explanation": "Enable v8.2 data Cache Clean to Point of Persistence (FEAT_DPB).",
			"llvm": false
		},
		{
			"name": "dpb2",
			"explanation": "Enable v8.5 Cache Clean to Point of Deep Persistence (FEAT_DPB2).",
			"llvm": false
		},
		{
			"name": "f32mm",
			"explanation": "Enable Matrix Multiply FP32 Extension (FEAT_F32MM).",
			"llvm": false
		},
		{
			"name": "f64mm",
			"explanation": "Enable Matrix Multiply FP64 Extension (FEAT_F64MM).",
			"llvm": false
		},
		{
			"name": "fcma",
			"explanation": "Enable v8.3-A Floating-point complex number support (FEAT_FCMA).",
			"llvm": false
		},
		{ "name": "fhm", "explanation": "Enable FP16 FML instructions (FEAT_FHM).", "llvm": false },
		{
			"name": "flagm",
			"explanation": "Enable v8.4-A Flag Manipulation Instructions (FEAT_FlagM).",
			"llvm": false
		},
		{ "name": "fp16", "explanation": "Full FP16 (FEAT_FP16).", "llvm": false },
		{
			"name": "frintts",
			"explanation": "Enable FRInt[32|64][Z|X] instructions that round a floating-point number to an integer (in FP format) forcing it to fit into a 32- or 64-bit int (FEAT_FRINTTS).",
			"llvm": false
		},
		{
			"name": "i8mm",
			"explanation": "Enable Matrix Multiply Int8 Extension (FEAT_I8MM).",
			"llvm": false
		},
		{
			"name": "jsconv",
			"explanation": "Enable v8.3-A JavaScript FP conversion instructions (FEAT_JSCVT).",
			"llvm": false
		},
		{
			"name": "lor",
			"explanation": "Enables ARM v8.1 Limited Ordering Regions extension (FEAT_LOR).",
			"llvm": false
		},
		{
			"name": "lse",
			"explanation": "Enable ARMv8.1 Large System Extension (LSE) atomic instructions (FEAT_LSE).",
			"llvm": false
		},
		{
			"name": "mte",
			"explanation": "Enable Memory Tagging Extension (FEAT_MTE, FEAT_MTE2).",
			"llvm": false
		},
		{
			"name": "neon",
			"explanation": "Enable Advanced SIMD instructions (FEAT_AdvSIMD).",
			"llvm": false
		},
		{
			"name": "paca",
			"explanation": "Enable v8.3-A Pointer Authentication extension (FEAT_PAuth).",
			"llvm": false
		},
		{
			"name": "pacg",
			"explanation": "Enable v8.3-A Pointer Authentication extension (FEAT_PAuth).",
			"llvm": false
		},
		{
			"name": "pan",
			"explanation": "Enables ARM v8.1 Privileged Access-Never extension (FEAT_PAN).",
			"llvm": false
		},
		{
			"name": "pmuv3",
			"explanation": "Enable Code Generation for ARMv8 PMUv3 Performance Monitors extension (FEAT_PMUv3).",
			"llvm": false
		},
		{
			"name": "rand",
			"explanation": "Enable Random Number generation instructions (FEAT_RNG).",
			"llvm": false
		},
		{
			"name": "ras",
			"explanation": "Enable ARMv8 Reliability, Availability and Serviceability Extensions (FEAT_RAS, FEAT_RASv1p1).",
			"llvm": false
		},
		{
			"name": "rcpc",
			"explanation": "Enable support for RCPC extension (FEAT_LRCPC).",
			"llvm": false
		},
		{
			"name": "rcpc2",
			"explanation": "Enable v8.4-A RCPC instructions with Immediate Offsets (FEAT_LRCPC2).",
			"llvm": false
		},
		{
			"name": "rdm",
			"explanation": "Enable ARMv8.1 Rounding Double Multiply Add/Subtract instructions (FEAT_RDM).",
			"llvm": false
		},
		{ "name": "sb", "explanation": "Enable v8.5 Speculation Barrier (FEAT_SB).", "llvm": false },
		{
			"name": "sha2",
			"explanation": "Enable SHA1 and SHA256 support (FEAT_SHA1, FEAT_SHA256).",
			"llvm": false
		},
		{
			"name": "sha3",
			"explanation": "Enable SHA512 and SHA3 support (FEAT_SHA3, FEAT_SHA512).",
			"llvm": false
		},
		{
			"name": "sm4",
			"explanation": "Enable SM3 and SM4 support (FEAT_SM4, FEAT_SM3).",
			"llvm": false
		},
		{
			"name": "spe",
			"explanation": "Enable Statistical Profiling extension (FEAT_SPE).",
			"llvm": false
		},
		{
			"name": "ssbs",
			"explanation": "Enable Speculative Store Bypass Safe bit (FEAT_SSBS, FEAT_SSBS2).",
			"llvm": false
		},
		{
			"name": "sve",
			"explanation": "Enable Scalable Vector Extension (SVE) instructions (FEAT_SVE).",
			"llvm": false
		},
		{
			"name": "sve2",
			"explanation": "Enable Scalable Vector Extension 2 (SVE2) instructions (FEAT_SVE2).",
			"llvm": false
		},
		{
			"name": "sve2-aes",
			"explanation": "Enable AES SVE2 instructions (FEAT_SVE_AES, FEAT_SVE_PMULL128).",
			"llvm": false
		},
		{
			"name": "sve2-bitperm",
			"explanation": "Enable bit permutation SVE2 instructions (FEAT_SVE_BitPerm).",
			"llvm": false
		},
		{
			"name": "sve2-sha3",
			"explanation": "Enable SHA3 SVE2 instructions (FEAT_SVE_SHA3).",
			"llvm": false
		},
		{
			"name": "sve2-sm4",
			"explanation": "Enable SM4 SVE2 instructions (FEAT_SVE_SM4).",
			"llvm": false
		},
		{
			"name": "tme",
			"explanation": "Enable Transactional Memory Extension (FEAT_TME).",
			"llvm": false
		},
		{ "name": "v8.1a", "explanation": "Support ARM v8.1a instructions.", "llvm": false },
		{ "name": "v8.2a", "explanation": "Support ARM v8.2a instructions.", "llvm": false },
		{ "name": "v8.3a", "explanation": "Support ARM v8.3a instructions.", "llvm": false },
		{ "name": "v8.4a", "explanation": "Support ARM v8.4a instructions.", "llvm": false },
		{ "name": "v8.5a", "explanation": "Support ARM v8.5a instructions.", "llvm": false },
		{ "name": "v8.6a", "explanation": "Support ARM v8.6a instructions.", "llvm": false },
		{ "name": "v8.7a", "explanation": "Support ARM v8.7a instructions.", "llvm": false },
		{
			"name": "vh",
			"explanation": "Enables ARM v8.1 Virtual Host extension (FEAT_VHE).",
			"llvm": false
		},
		{ "name": "CONTEXTIDREL2", "explanation": "Enable RW operand CONTEXTIDR_EL2.", "llvm": true },
		{ "name": "a35", "explanation": "Cortex-A35 ARM processors.", "llvm": true },
		{ "name": "a510", "explanation": "Cortex-A510 ARM processors.", "llvm": true },
		{ "name": "a520", "explanation": "Cortex-A520 ARM processors.", "llvm": true },
		{ "name": "a53", "explanation": "Cortex-A53 ARM processors.", "llvm": true },
		{ "name": "a55", "explanation": "Cortex-A55 ARM processors.", "llvm": true },
		{ "name": "a57", "explanation": "Cortex-A57 ARM processors.", "llvm": true },
		{ "name": "a64fx", "explanation": "Fujitsu A64FX processors.", "llvm": true },
		{ "name": "a65", "explanation": "Cortex-A65 ARM processors.", "llvm": true },
		{ "name": "a710", "explanation": "Cortex-A710 ARM processors.", "llvm": true },
		{ "name": "a715", "explanation": "Cortex-A715 ARM processors.", "llvm": true },
		{ "name": "a72", "explanation": "Cortex-A72 ARM processors.", "llvm": true },
		{ "name": "a720", "explanation": "Cortex-A720 ARM processors.", "llvm": true },
		{ "name": "a73", "explanation": "Cortex-A73 ARM processors.", "llvm": true },
		{ "name": "a75", "explanation": "Cortex-A75 ARM processors.", "llvm": true },
		{ "name": "a76", "explanation": "Cortex-A76 ARM processors.", "llvm": true },
		{ "name": "a77", "explanation": "Cortex-A77 ARM processors.", "llvm": true },
		{ "name": "a78", "explanation": "Cortex-A78 ARM processors.", "llvm": true },
		{ "name": "a78c", "explanation": "Cortex-A78C ARM processors.", "llvm": true },
		{
			"name": "addr-lsl-fast",
			"explanation": "Address operands with logical shift of up to 3 places are cheap.",
			"llvm": true
		},
		{
			"name": "aggressive-fma",
			"explanation": "Enable Aggressive FMA for floating-point..",
			"llvm": true
		},
		{ "name": "all", "explanation": "Enable all instructions.", "llvm": true },
		{
			"name": "alternate-sextload-cvt-f32-pattern",
			"explanation": "Use alternative pattern for sextload convert to f32.",
			"llvm": true
		},
		{
			"name": "altnzcv",
			"explanation": "Enable alternative NZCV format for floating point comparisons (FEAT_FlagM2).",
			"llvm": true
		},
		{
			"name": "alu-lsl-fast",
			"explanation": "Add/Sub operations with lsl shift <= 4 are cheap.",
			"llvm": true
		},
		{
			"name": "am",
			"explanation": "Enable v8.4-A Activity Monitors extension (FEAT_AMUv1).",
			"llvm": true
		},
		{ "name": "ampere1", "explanation": "Ampere Computing Ampere-1 processors.", "llvm": true },
		{ "name": "ampere1a", "explanation": "Ampere Computing Ampere-1A processors.", "llvm": true },
		{ "name": "ampere1b", "explanation": "Ampere Computing Ampere-1B processors.", "llvm": true },
		{
			"name": "amvs",
			"explanation": "Enable v8.6-A Activity Monitors Virtualization support (FEAT_AMUv1p1).",
			"llvm": true
		},
		{ "name": "apple-a10", "explanation": "Apple A10.", "llvm": true },
		{ "name": "apple-a11", "explanation": "Apple A11.", "llvm": true },
		{ "name": "apple-a12", "explanation": "Apple A12.", "llvm": true },
		{ "name": "apple-a13", "explanation": "Apple A13.", "llvm": true },
		{ "name": "apple-a14", "explanation": "Apple A14.", "llvm": true },
		{ "name": "apple-a15", "explanation": "Apple A15.", "llvm": true },
		{ "name": "apple-a16", "explanation": "Apple A16.", "llvm": true },
		{ "name": "apple-a17", "explanation": "Apple A17.", "llvm": true },
		{
			"name": "apple-a7",
			"explanation": "Apple A7 (the CPU formerly known as Cyclone).",
			"llvm": true
		},
		{
			"name": "apple-a7-sysreg",
			"explanation": "Apple A7 (the CPU formerly known as Cyclone).",
			"llvm": true
		},
		{
			"name": "arith-bcc-fusion",
			"explanation": "CPU fuses arithmetic+bcc operations.",
			"llvm": true
		},
		{
			"name": "arith-cbz-fusion",
			"explanation": "CPU fuses arithmetic + cbz/cbnz operations.",
			"llvm": true
		},
		{
			"name": "ascend-store-address",
			"explanation": "Schedule vector stores by ascending address.",
			"llvm": true
		},
		{
			"name": "b16b16",
			"explanation": "Enable SVE2.1 or SME2.1 non-widening BFloat16 to BFloat16 instructions (FEAT_B16B16).",
			"llvm": true
		},
		{
			"name": "balance-fp-ops",
			"explanation": "balance mix of odd and even D-registers for fp multiply(-accumulate) ops.",
			"llvm": true
		},
		{
			"name": "brbe",
			"explanation": "Enable Branch Record Buffer Extension (FEAT_BRBE).",
			"llvm": true
		},
		{ "name": "call-saved-x10", "explanation": "Make X10 callee saved..", "llvm": true },
		{ "name": "call-saved-x11", "explanation": "Make X11 callee saved..", "llvm": true },
		{ "name": "call-saved-x12", "explanation": "Make X12 callee saved..", "llvm": true },
		{ "name": "call-saved-x13", "explanation": "Make X13 callee saved..", "llvm": true },
		{ "name": "call-saved-x14", "explanation": "Make X14 callee saved..", "llvm": true },
		{ "name": "call-saved-x15", "explanation": "Make X15 callee saved..", "llvm": true },
		{ "name": "call-saved-x18", "explanation": "Make X18 callee saved..", "llvm": true },
		{ "name": "call-saved-x8", "explanation": "Make X8 callee saved..", "llvm": true },
		{ "name": "call-saved-x9", "explanation": "Make X9 callee saved..", "llvm": true },
		{ "name": "carmel", "explanation": "Nvidia Carmel processors.", "llvm": true },
		{
			"name": "ccidx",
			"explanation": "Enable v8.3-A Extend of the CCSIDR number of sets (FEAT_CCIDX).",
			"llvm": true
		},
		{
			"name": "chk",
			"explanation": "Enable Armv8.0-A Check Feature Status Extension (FEAT_CHK).",
			"llvm": true
		},
		{
			"name": "clrbhb",
			"explanation": "Enable Clear BHB instruction (FEAT_CLRBHB).",
			"llvm": true
		},
		{ "name": "cmp-bcc-fusion", "explanation": "CPU fuses cmp+bcc operations.", "llvm": true },
		{ "name": "cortex-r82", "explanation": "Cortex-R82 ARM processors.", "llvm": true },
		{ "name": "cortex-x1", "explanation": "Cortex-X1 ARM processors.", "llvm": true },
		{ "name": "cortex-x2", "explanation": "Cortex-X2 ARM processors.", "llvm": true },
		{ "name": "cortex-x3", "explanation": "Cortex-X3 ARM processors.", "llvm": true },
		{ "name": "cortex-x4", "explanation": "Cortex-X4 ARM processors.", "llvm": true },
		{
			"name": "cpa",
			"explanation": "Enable Armv9.5-A Checked Pointer Arithmetic (FEAT_CPA).",
			"llvm": true
		},
		{ "name": "crypto", "explanation": "Enable cryptographic instructions.", "llvm": true },
		{
			"name": "cssc",
			"explanation": "Enable Common Short Sequence Compression (CSSC) instructions (FEAT_CSSC).",
			"llvm": true
		},
		{
			"name": "d128",
			"explanation": "Enable Armv9.4-A 128-bit Page Table Descriptors, System Registers and Instructions (FEAT_D128, FEAT_LVA3, FEAT_SYSREG128, FEAT_SYSINSTR128).",
			"llvm": true
		},
		{
			"name": "disable-latency-sched-heuristic",
			"explanation": "Disable latency scheduling heuristic.",
			"llvm": true
		},
		{ "name": "disable-ldp", "explanation": "Do not emit ldp.", "llvm": true },
		{ "name": "disable-stp", "explanation": "Do not emit stp.", "llvm": true },
		{
			"name": "ecv",
			"explanation": "Enable enhanced counter virtualization extension (FEAT_ECV).",
			"llvm": true
		},
		{
			"name": "el2vmsa",
			"explanation": "Enable Exception Level 2 Virtual Memory System Architecture.",
			"llvm": true
		},
		{ "name": "el3", "explanation": "Enable Exception Level 3.", "llvm": true },
		{
			"name": "enable-select-opt",
			"explanation": "Enable the select optimize pass for select loop heuristics.",
			"llvm": true
		},
		{ "name": "ete", "explanation": "Enable Embedded Trace Extension (FEAT_ETE).", "llvm": true },
		{
			"name": "exynos-cheap-as-move",
			"explanation": "Use Exynos specific handling of cheap instructions.",
			"llvm": true
		},
		{ "name": "exynosm3", "explanation": "Samsung Exynos-M3 processors.", "llvm": true },
		{ "name": "exynosm4", "explanation": "Samsung Exynos-M4 processors.", "llvm": true },
		{ "name": "falkor", "explanation": "Qualcomm Falkor processors.", "llvm": true },
		{
			"name": "faminmax",
			"explanation": "Enable FAMIN and FAMAX instructions (FEAT_FAMINMAX).",
			"llvm": true
		},
		{
			"name": "fgt",
			"explanation": "Enable fine grained virtualization traps extension (FEAT_FGT).",
			"llvm": true
		},
		{
			"name": "fix-cortex-a53-835769",
			"explanation": "Mitigate Cortex-A53 Erratum 835769.",
			"llvm": true
		},
		{ "name": "fmv", "explanation": "Enable Function Multi Versioning support..", "llvm": true },
		{
			"name": "force-32bit-jump-tables",
			"explanation": "Force jump table entries to be 32-bits wide except at MinSize.",
			"llvm": true
		},
		{ "name": "fp-armv8", "explanation": "Enable ARMv8 FP (FEAT_FP).", "llvm": true },
		{ "name": "fp8", "explanation": "Enable FP8 instructions (FEAT_FP8).", "llvm": true },
		{
			"name": "fp8dot2",
			"explanation": "Enable fp8 2-way dot instructions (FEAT_FP8DOT2).",
			"llvm": true
		},
		{
			"name": "fp8dot4",
			"explanation": "Enable fp8 4-way dot instructions (FEAT_FP8DOT4).",
			"llvm": true
		},
		{
			"name": "fp8fma",
			"explanation": "Enable fp8 multiply-add instructions (FEAT_FP8FMA).",
			"llvm": true
		},
		{ "name": "fpmr", "explanation": "Enable FPMR Register (FEAT_FPMR).", "llvm": true },
		{
			"name": "fuse-address",
			"explanation": "CPU fuses address generation and memory operations.",
			"llvm": true
		},
		{
			"name": "fuse-addsub-2reg-const1",
			"explanation": "CPU fuses (a + b + 1) and (a",
			"llvm": true
		},
		{ "name": "fuse-adrp-add", "explanation": "CPU fuses adrp+add operations.", "llvm": true },
		{ "name": "fuse-aes", "explanation": "CPU fuses AES crypto operations.", "llvm": true },
		{
			"name": "fuse-arith-logic",
			"explanation": "CPU fuses arithmetic and logic operations.",
			"llvm": true
		},
		{
			"name": "fuse-crypto-eor",
			"explanation": "CPU fuses AES/PMULL and EOR operations.",
			"llvm": true
		},
		{
			"name": "fuse-csel",
			"explanation": "CPU fuses conditional select operations.",
			"llvm": true
		},
		{
			"name": "fuse-literals",
			"explanation": "CPU fuses literal generation operations.",
			"llvm": true
		},
		{
			"name": "gcs",
			"explanation": "Enable Armv9.4-A Guarded Call Stack Extension.",
			"llvm": true
		},
		{
			"name": "harden-sls-blr",
			"explanation": "Harden against straight line speculation across BLR instructions.",
			"llvm": true
		},
		{
			"name": "harden-sls-nocomdat",
			"explanation": "Generate thunk code for SLS mitigation in the normal text section.",
			"llvm": true
		},
		{
			"name": "harden-sls-retbr",
			"explanation": "Harden against straight line speculation across RET and BR instructions.",
			"llvm": true
		},
		{
			"name": "hbc",
			"explanation": "Enable Armv8.8-A Hinted Conditional Branches Extension (FEAT_HBC).",
			"llvm": true
		},
		{
			"name": "hcx",
			"explanation": "Enable Armv8.7-A HCRX_EL2 system register (FEAT_HCX).",
			"llvm": true
		},
		{
			"name": "ite",
			"explanation": "Enable Armv9.4-A Instrumentation Extension FEAT_ITE.",
			"llvm": true
		},
		{ "name": "kryo", "explanation": "Qualcomm Kryo processors.", "llvm": true },
		{
			"name": "ldp-aligned-only",
			"explanation": "In order to emit ldp, first check if the load will be aligned to 2 * element_size.",
			"llvm": true
		},
		{
			"name": "ls64",
			"explanation": "Enable Armv8.7-A LD64B/ST64B Accelerator Extension (FEAT_LS64, FEAT_LS64_V, FEAT_LS64_ACCDATA).",
			"llvm": true
		},
		{
			"name": "lse128",
			"explanation": "Enable Armv9.4-A 128-bit Atomic Instructions (FEAT_LSE128).",
			"llvm": true
		},
		{
			"name": "lse2",
			"explanation": "Enable ARMv8.4 Large System Extension 2 (LSE2) atomicity rules (FEAT_LSE2).",
			"llvm": true
		},
		{ "name": "lut", "explanation": "Enable Lookup Table instructions (FEAT_LUT).", "llvm": true },
		{ "name": "mec", "explanation": "Enable Memory Encryption Contexts Extension.", "llvm": true },
		{
			"name": "mops",
			"explanation": "Enable Armv8.8-A memcpy and memset acceleration instructions (FEAT_MOPS).",
			"llvm": true
		},
		{
			"name": "mpam",
			"explanation": "Enable v8.4-A Memory system Partitioning and Monitoring extension (FEAT_MPAM).",
			"llvm": true
		},
		{ "name": "neoverse512tvb", "explanation": "Neoverse 512-TVB ARM processors.", "llvm": true },
		{ "name": "neoversee1", "explanation": "Neoverse E1 ARM processors.", "llvm": true },
		{ "name": "neoversen1", "explanation": "Neoverse N1 ARM processors.", "llvm": true },
		{ "name": "neoversen2", "explanation": "Neoverse N2 ARM processors.", "llvm": true },
		{ "name": "neoversev1", "explanation": "Neoverse V1 ARM processors.", "llvm": true },
		{ "name": "neoversev2", "explanation": "Neoverse V2 ARM processors.", "llvm": true },
		{
			"name": "nmi",
			"explanation": "Enable Armv8.8-A Non-maskable Interrupts (FEAT_NMI, FEAT_GICv3_NMI).",
			"llvm": true
		},
		{
			"name": "no-bti-at-return-twice",
			"explanation": "Don't place a BTI instruction after a return-twice.",
			"llvm": true
		},
		{
			"name": "no-neg-immediates",
			"explanation": "Convert immediates and instructions to their negated or complemented equivalent when the immediate does not fit in the encoding..",
			"llvm": true
		},
		{
			"name": "no-sve-fp-ld1r",
			"explanation": "Avoid using LD1RX instructions for FP.",
			"llvm": true
		},
		{
			"name": "no-zcz-fp",
			"explanation": "Has no zero-cycle zeroing instructions for FP registers.",
			"llvm": true
		},
		{
			"name": "nv",
			"explanation": "Enable v8.4-A Nested Virtualization Enchancement (FEAT_NV, FEAT_NV2).",
			"llvm": true
		},
		{
			"name": "outline-atomics",
			"explanation": "Enable out of line atomics to support LSE instructions.",
			"llvm": true
		},
		{
			"name": "pan-rwv",
			"explanation": "Enable v8.2 PAN s1e1R and s1e1W Variants (FEAT_PAN2).",
			"llvm": true
		},
		{
			"name": "pauth-lr",
			"explanation": "Enable Armv9.5-A PAC enhancements (FEAT_PAuth_LR).",
			"llvm": true
		},
		{
			"name": "predictable-select-expensive",
			"explanation": "Prefer likely predicted branches over selects.",
			"llvm": true
		},
		{
			"name": "predres",
			"explanation": "Enable v8.5a execution and data prediction invalidation instructions (FEAT_SPECRES).",
			"llvm": true
		},
		{
			"name": "prfm-slc-target",
			"explanation": "Enable SLC target for PRFM instruction.",
			"llvm": true
		},
		{
			"name": "rasv2",
			"explanation": "Enable ARMv8.9-A Reliability, Availability and Serviceability Extensions (FEAT_RASv2).",
			"llvm": true
		},
		{
			"name": "rcpc3",
			"explanation": "Enable Armv8.9-A RCPC instructions for A64 and Advanced SIMD and floating-point instruction set (FEAT_LRCPC3).",
			"llvm": true
		},
		{
			"name": "reserve-x1",
			"explanation": "Reserve X1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x10",
			"explanation": "Reserve X10, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x11",
			"explanation": "Reserve X11, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x12",
			"explanation": "Reserve X12, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x13",
			"explanation": "Reserve X13, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x14",
			"explanation": "Reserve X14, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x15",
			"explanation": "Reserve X15, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x18",
			"explanation": "Reserve X18, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x2",
			"explanation": "Reserve X2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x20",
			"explanation": "Reserve X20, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x21",
			"explanation": "Reserve X21, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x22",
			"explanation": "Reserve X22, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x23",
			"explanation": "Reserve X23, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x24",
			"explanation": "Reserve X24, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x25",
			"explanation": "Reserve X25, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x26",
			"explanation": "Reserve X26, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x27",
			"explanation": "Reserve X27, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x28",
			"explanation": "Reserve X28, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x3",
			"explanation": "Reserve X3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x30",
			"explanation": "Reserve X30, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x4",
			"explanation": "Reserve X4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x5",
			"explanation": "Reserve X5, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x6",
			"explanation": "Reserve X6, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x7",
			"explanation": "Reserve X7, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-x9",
			"explanation": "Reserve X9, making it unavailable as a GPR.",
			"llvm": true
		},
		{ "name": "rme", "explanation": "Enable Realm Management Extension (FEAT_RME).", "llvm": true },
		{ "name": "saphira", "explanation": "Qualcomm Saphira processors.", "llvm": true },
		{
			"name": "sel2",
			"explanation": "Enable v8.4-A Secure Exception Level 2 extension (FEAT_SEL2).",
			"llvm": true
		},
		{
			"name": "slow-misaligned-128store",
			"explanation": "Misaligned 128 bit stores are slow.",
			"llvm": true
		},
		{
			"name": "slow-paired-128",
			"explanation": "Paired 128 bit loads and stores are slow.",
			"llvm": true
		},
		{
			"name": "slow-strqro-store",
			"explanation": "STR of Q register with register offset is slow.",
			"llvm": true
		},
		{
			"name": "sme",
			"explanation": "Enable Scalable Matrix Extension (SME) (FEAT_SME).",
			"llvm": true
		},
		{
			"name": "sme-f16f16",
			"explanation": "Enable SME2.1 non-widening Float16 instructions (FEAT_SME_F16F16).",
			"llvm": true
		},
		{
			"name": "sme-f64f64",
			"explanation": "Enable Scalable Matrix Extension (SME) F64F64 instructions (FEAT_SME_F64F64).",
			"llvm": true
		},
		{
			"name": "sme-f8f16",
			"explanation": "Enable Scalable Matrix Extension (SME) F8F16 instructions(FEAT_SME_F8F16).",
			"llvm": true
		},
		{
			"name": "sme-f8f32",
			"explanation": "Enable Scalable Matrix Extension (SME) F8F32 instructions (FEAT_SME_F8F32).",
			"llvm": true
		},
		{
			"name": "sme-fa64",
			"explanation": "Enable the full A64 instruction set in streaming SVE mode (FEAT_SME_FA64).",
			"llvm": true
		},
		{
			"name": "sme-i16i64",
			"explanation": "Enable Scalable Matrix Extension (SME) I16I64 instructions (FEAT_SME_I16I64).",
			"llvm": true
		},
		{
			"name": "sme-lutv2",
			"explanation": "Enable Scalable Matrix Extension (SME) LUTv2 instructions (FEAT_SME_LUTv2).",
			"llvm": true
		},
		{
			"name": "sme2",
			"explanation": "Enable Scalable Matrix Extension 2 (SME2) instructions.",
			"llvm": true
		},
		{
			"name": "sme2p1",
			"explanation": "Enable Scalable Matrix Extension 2.1 (FEAT_SME2p1) instructions.",
			"llvm": true
		},
		{
			"name": "spe-eef",
			"explanation": "Enable extra register in the Statistical Profiling Extension (FEAT_SPEv1p2).",
			"llvm": true
		},
		{
			"name": "specres2",
			"explanation": "Enable Speculation Restriction Instruction (FEAT_SPECRES2).",
			"llvm": true
		},
		{
			"name": "specrestrict",
			"explanation": "Enable architectural speculation restriction (FEAT_CSV2_2).",
			"llvm": true
		},
		{
			"name": "ssve-fp8dot2",
			"explanation": "Enable SVE2 fp8 2-way dot product instructions (FEAT_SSVE_FP8DOT2).",
			"llvm": true
		},
		{
			"name": "ssve-fp8dot4",
			"explanation": "Enable SVE2 fp8 4-way dot product instructions (FEAT_SSVE_FP8DOT4).",
			"llvm": true
		},
		{
			"name": "ssve-fp8fma",
			"explanation": "Enable SVE2 fp8 multiply-add instructions (FEAT_SSVE_FP8FMA).",
			"llvm": true
		},
		{
			"name": "store-pair-suppress",
			"explanation": "Enable Store Pair Suppression heuristics.",
			"llvm": true
		},
		{
			"name": "stp-aligned-only",
			"explanation": "In order to emit stp, first check if the store will be aligned to 2 * element_size.",
			"llvm": true
		},
		{
			"name": "strict-align",
			"explanation": "Disallow all unaligned memory access.",
			"llvm": true
		},
		{
			"name": "sve2p1",
			"explanation": "Enable Scalable Vector Extension 2.1 instructions.",
			"llvm": true
		},
		{
			"name": "tagged-globals",
			"explanation": "Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits.",
			"llvm": true
		},
		{
			"name": "the",
			"explanation": "Enable Armv8.9-A Translation Hardening Extension (FEAT_THE).",
			"llvm": true
		},
		{ "name": "thunderx", "explanation": "Cavium ThunderX processors.", "llvm": true },
		{ "name": "thunderx2t99", "explanation": "Cavium ThunderX2 processors.", "llvm": true },
		{ "name": "thunderx3t110", "explanation": "Marvell ThunderX3 processors.", "llvm": true },
		{ "name": "thunderxt81", "explanation": "Cavium ThunderX processors.", "llvm": true },
		{ "name": "thunderxt83", "explanation": "Cavium ThunderX processors.", "llvm": true },
		{ "name": "thunderxt88", "explanation": "Cavium ThunderX processors.", "llvm": true },
		{
			"name": "tlb-rmi",
			"explanation": "Enable v8.4-A TLB Range and Maintenance Instructions (FEAT_TLBIOS, FEAT_TLBIRANGE).",
			"llvm": true
		},
		{
			"name": "tlbiw",
			"explanation": "Enable ARMv9.5-A TLBI VMALL for Dirty State (FEAT_TLBIW).",
			"llvm": true
		},
		{
			"name": "tpidr-el1",
			"explanation": "Permit use of TPIDR_EL1 for the TLS base.",
			"llvm": true
		},
		{
			"name": "tpidr-el2",
			"explanation": "Permit use of TPIDR_EL2 for the TLS base.",
			"llvm": true
		},
		{
			"name": "tpidr-el3",
			"explanation": "Permit use of TPIDR_EL3 for the TLS base.",
			"llvm": true
		},
		{
			"name": "tpidrro-el0",
			"explanation": "Permit use of TPIDRRO_EL0 for the TLS base.",
			"llvm": true
		},
		{
			"name": "tracev8.4",
			"explanation": "Enable v8.4-A Trace extension (FEAT_TRF).",
			"llvm": true
		},
		{ "name": "trbe", "explanation": "Enable Trace Buffer Extension (FEAT_TRBE).", "llvm": true },
		{ "name": "tsv110", "explanation": "HiSilicon TS-V110 processors.", "llvm": true },
		{ "name": "uaops", "explanation": "Enable v8.2 UAO PState (FEAT_UAO).", "llvm": true },
		{
			"name": "use-experimental-zeroing-pseudos",
			"explanation": "Hint to the compiler that the MOVPRFX instruction is merged with destructive operations.",
			"llvm": true
		},
		{
			"name": "use-postra-scheduler",
			"explanation": "Schedule again after register allocation.",
			"llvm": true
		},
		{
			"name": "use-reciprocal-square-root",
			"explanation": "Use the reciprocal square root approximation.",
			"llvm": true
		},
		{ "name": "use-scalar-inc-vl", "explanation": "Prefer inc/dec over add+cnt.", "llvm": true },
		{ "name": "v8.8a", "explanation": "Support ARM v8.8a instructions.", "llvm": true },
		{ "name": "v8.9a", "explanation": "Support ARM v8.9a instructions.", "llvm": true },
		{ "name": "v8a", "explanation": "Support ARM v8.0a instructions.", "llvm": true },
		{ "name": "v8r", "explanation": "Support ARM v8r instructions.", "llvm": true },
		{ "name": "v9.1a", "explanation": "Support ARM v9.1a instructions.", "llvm": true },
		{ "name": "v9.2a", "explanation": "Support ARM v9.2a instructions.", "llvm": true },
		{ "name": "v9.3a", "explanation": "Support ARM v9.3a instructions.", "llvm": true },
		{ "name": "v9.4a", "explanation": "Support ARM v9.4a instructions.", "llvm": true },
		{ "name": "v9.5a", "explanation": "Support ARM v9.5a instructions.", "llvm": true },
		{ "name": "v9a", "explanation": "Support ARM v9a instructions.", "llvm": true },
		{
			"name": "wfxt",
			"explanation": "Enable Armv8.7-A WFET and WFIT instruction (FEAT_WFxT).",
			"llvm": true
		},
		{
			"name": "xs",
			"explanation": "Enable Armv8.7-A limited-TLB-maintenance instruction (FEAT_XS).",
			"llvm": true
		},
		{ "name": "zcm", "explanation": "Has zero-cycle register moves.", "llvm": true },
		{ "name": "zcz", "explanation": "Has zero-cycle zeroing instructions.", "llvm": true },
		{
			"name": "zcz-fp-workaround",
			"explanation": "The zero-cycle floating-point zeroing instruction has a bug.",
			"llvm": true
		},
		{
			"name": "zcz-gp",
			"explanation": "Has zero-cycle zeroing instructions for generic registers.",
			"llvm": true
		}
	],
	"nvptx64": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "ptx32", "explanation": "Use PTX version 32.", "llvm": true },
		{ "name": "ptx40", "explanation": "Use PTX version 40.", "llvm": true },
		{ "name": "ptx41", "explanation": "Use PTX version 41.", "llvm": true },
		{ "name": "ptx42", "explanation": "Use PTX version 42.", "llvm": true },
		{ "name": "ptx43", "explanation": "Use PTX version 43.", "llvm": true },
		{ "name": "ptx50", "explanation": "Use PTX version 50.", "llvm": true },
		{ "name": "ptx60", "explanation": "Use PTX version 60.", "llvm": true },
		{ "name": "ptx61", "explanation": "Use PTX version 61.", "llvm": true },
		{ "name": "ptx63", "explanation": "Use PTX version 63.", "llvm": true },
		{ "name": "ptx64", "explanation": "Use PTX version 64.", "llvm": true },
		{ "name": "ptx65", "explanation": "Use PTX version 65.", "llvm": true },
		{ "name": "ptx70", "explanation": "Use PTX version 70.", "llvm": true },
		{ "name": "ptx71", "explanation": "Use PTX version 71.", "llvm": true },
		{ "name": "ptx72", "explanation": "Use PTX version 72.", "llvm": true },
		{ "name": "ptx73", "explanation": "Use PTX version 73.", "llvm": true },
		{ "name": "ptx74", "explanation": "Use PTX version 74.", "llvm": true },
		{ "name": "ptx75", "explanation": "Use PTX version 75.", "llvm": true },
		{ "name": "ptx76", "explanation": "Use PTX version 76.", "llvm": true },
		{ "name": "ptx77", "explanation": "Use PTX version 77.", "llvm": true },
		{ "name": "ptx78", "explanation": "Use PTX version 78.", "llvm": true },
		{ "name": "ptx80", "explanation": "Use PTX version 80.", "llvm": true },
		{ "name": "ptx81", "explanation": "Use PTX version 81.", "llvm": true },
		{ "name": "ptx82", "explanation": "Use PTX version 82.", "llvm": true },
		{ "name": "ptx83", "explanation": "Use PTX version 83.", "llvm": true },
		{ "name": "sm_20", "explanation": "Target SM 20.", "llvm": true },
		{ "name": "sm_21", "explanation": "Target SM 21.", "llvm": true },
		{ "name": "sm_30", "explanation": "Target SM 30.", "llvm": true },
		{ "name": "sm_32", "explanation": "Target SM 32.", "llvm": true },
		{ "name": "sm_35", "explanation": "Target SM 35.", "llvm": true },
		{ "name": "sm_37", "explanation": "Target SM 37.", "llvm": true },
		{ "name": "sm_50", "explanation": "Target SM 50.", "llvm": true },
		{ "name": "sm_52", "explanation": "Target SM 52.", "llvm": true },
		{ "name": "sm_53", "explanation": "Target SM 53.", "llvm": true },
		{ "name": "sm_60", "explanation": "Target SM 60.", "llvm": true },
		{ "name": "sm_61", "explanation": "Target SM 61.", "llvm": true },
		{ "name": "sm_62", "explanation": "Target SM 62.", "llvm": true },
		{ "name": "sm_70", "explanation": "Target SM 70.", "llvm": true },
		{ "name": "sm_72", "explanation": "Target SM 72.", "llvm": true },
		{ "name": "sm_75", "explanation": "Target SM 75.", "llvm": true },
		{ "name": "sm_80", "explanation": "Target SM 80.", "llvm": true },
		{ "name": "sm_86", "explanation": "Target SM 86.", "llvm": true },
		{ "name": "sm_87", "explanation": "Target SM 87.", "llvm": true },
		{ "name": "sm_89", "explanation": "Target SM 89.", "llvm": true },
		{ "name": "sm_90", "explanation": "Target SM 90.", "llvm": true },
		{ "name": "sm_90a", "explanation": "Target SM 90a.", "llvm": true }
	],
	"riscv32": [
		{ "name": "a", "explanation": "'A' (Atomic Instructions).", "llvm": false },
		{ "name": "c", "explanation": "'C' (Compressed Instructions).", "llvm": false },
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "d", "explanation": "'D' (Double-Precision Floating-Point).", "llvm": false },
		{
			"name": "e",
			"explanation": "Implements RV{32,64}E (provides 16 rather than 32 GPRs).",
			"llvm": false
		},
		{ "name": "f", "explanation": "'F' (Single-Precision Floating-Point).", "llvm": false },
		{ "name": "m", "explanation": "'M' (Integer Multiplication and Division).", "llvm": false },
		{ "name": "relax", "explanation": "Enable Linker relaxation..", "llvm": false },
		{
			"name": "unaligned-scalar-mem",
			"explanation": "Has reasonably performant unaligned loads and stores (both scalar and vector).",
			"llvm": false
		},
		{
			"name": "v",
			"explanation": "'V' (Vector Extension for Application Processors).",
			"llvm": false
		},
		{ "name": "zba", "explanation": "'Zba' (Address Generation Instructions).", "llvm": false },
		{ "name": "zbb", "explanation": "'Zbb' (Basic Bit-Manipulation).", "llvm": false },
		{ "name": "zbc", "explanation": "'Zbc' (Carry-Less Multiplication).", "llvm": false },
		{
			"name": "zbkb",
			"explanation": "'Zbkb' (Bitmanip instructions for Cryptography).",
			"llvm": false
		},
		{
			"name": "zbkc",
			"explanation": "'Zbkc' (Carry-less multiply instructions for Cryptography).",
			"llvm": false
		},
		{ "name": "zbkx", "explanation": "'Zbkx' (Crossbar permutation instructions).", "llvm": false },
		{ "name": "zbs", "explanation": "'Zbs' (Single-Bit Instructions).", "llvm": false },
		{ "name": "zdinx", "explanation": "'Zdinx' (Double in Integer).", "llvm": false },
		{ "name": "zfh", "explanation": "'Zfh' (Half-Precision Floating-Point).", "llvm": false },
		{
			"name": "zfhmin",
			"explanation": "'Zfhmin' (Half-Precision Floating-Point Minimal).",
			"llvm": false
		},
		{ "name": "zfinx", "explanation": "'Zfinx' (Float in Integer).", "llvm": false },
		{ "name": "zhinx", "explanation": "'Zhinx' (Half Float in Integer).", "llvm": false },
		{
			"name": "zhinxmin",
			"explanation": "'Zhinxmin' (Half Float in Integer Minimal).",
			"llvm": false
		},
		{
			"name": "zk",
			"explanation": "'Zk' (Standard scalar cryptography extension).",
			"llvm": false
		},
		{ "name": "zkn", "explanation": "'Zkn' (NIST Algorithm Suite).", "llvm": false },
		{ "name": "zknd", "explanation": "'Zknd' (NIST Suite: AES Decryption).", "llvm": false },
		{ "name": "zkne", "explanation": "'Zkne' (NIST Suite: AES Encryption).", "llvm": false },
		{
			"name": "zknh",
			"explanation": "'Zknh' (NIST Suite: Hash Function Instructions).",
			"llvm": false
		},
		{ "name": "zkr", "explanation": "'Zkr' (Entropy Source Extension).", "llvm": false },
		{ "name": "zks", "explanation": "'Zks' (ShangMi Algorithm Suite).", "llvm": false },
		{
			"name": "zksed",
			"explanation": "'Zksed' (ShangMi Suite: SM4 Block Cipher Instructions).",
			"llvm": false
		},
		{
			"name": "zksh",
			"explanation": "'Zksh' (ShangMi Suite: SM3 Hash Function Instructions).",
			"llvm": false
		},
		{ "name": "zkt", "explanation": "'Zkt' (Data Independent Execution Latency).", "llvm": false },
		{ "name": "32bit", "explanation": "Implements RV32.", "llvm": true },
		{ "name": "64bit", "explanation": "Implements RV64.", "llvm": true },
		{ "name": "auipc-addi-fusion", "explanation": "Enable AUIPC+ADDI macrofusion.", "llvm": true },
		{ "name": "conditional-cmv-fusion", "explanation": "Enable branch+c.mv fusion.", "llvm": true },
		{
			"name": "dlen-factor-2",
			"explanation": "Vector unit DLEN(data path width) is half of VLEN.",
			"llvm": true
		},
		{ "name": "experimental", "explanation": "Experimental intrinsics.", "llvm": true },
		{
			"name": "experimental-zacas",
			"explanation": "'Zacas' (Atomic Compare-And-Swap Instructions).",
			"llvm": true
		},
		{
			"name": "experimental-zcmop",
			"explanation": "'Zcmop' (Compressed May-Be-Operations).",
			"llvm": true
		},
		{
			"name": "experimental-zfbfmin",
			"explanation": "'Zfbfmin' (Scalar BF16 Converts).",
			"llvm": true
		},
		{ "name": "experimental-zicfilp", "explanation": "'Zicfilp' (Landing pad).", "llvm": true },
		{ "name": "experimental-zicfiss", "explanation": "'Zicfiss' (Shadow stack).", "llvm": true },
		{ "name": "experimental-zimop", "explanation": "'Zimop' (May-Be-Operations).", "llvm": true },
		{ "name": "experimental-ztso", "explanation": "'Ztso' (Memory Model", "llvm": true },
		{
			"name": "experimental-zvfbfmin",
			"explanation": "'Zvbfmin' (Vector BF16 Converts).",
			"llvm": true
		},
		{
			"name": "experimental-zvfbfwma",
			"explanation": "'Zvfbfwma' (Vector BF16 widening mul-add).",
			"llvm": true
		},
		{
			"name": "forced-atomics",
			"explanation": "Assume that lock-free native-width atomics are available.",
			"llvm": true
		},
		{ "name": "h", "explanation": "'H' (Hypervisor).", "llvm": true },
		{ "name": "i", "explanation": "'I' (Base Integer Instruction Set).", "llvm": true },
		{ "name": "ld-add-fusion", "explanation": "Enable LD+ADD macrofusion.", "llvm": true },
		{ "name": "lui-addi-fusion", "explanation": "Enable LUI+ADDI macro fusion.", "llvm": true },
		{
			"name": "no-default-unroll",
			"explanation": "Disable default unroll preference..",
			"llvm": true
		},
		{
			"name": "no-optimized-zero-stride-load",
			"explanation": "Hasn't optimized (perform fewer memory operations)zero-stride vector load.",
			"llvm": true
		},
		{ "name": "no-rvc-hints", "explanation": "Disable RVC Hint Instructions..", "llvm": true },
		{ "name": "reserve-x1", "explanation": "Reserve X1.", "llvm": true },
		{ "name": "reserve-x10", "explanation": "Reserve X10.", "llvm": true },
		{ "name": "reserve-x11", "explanation": "Reserve X11.", "llvm": true },
		{ "name": "reserve-x12", "explanation": "Reserve X12.", "llvm": true },
		{ "name": "reserve-x13", "explanation": "Reserve X13.", "llvm": true },
		{ "name": "reserve-x14", "explanation": "Reserve X14.", "llvm": true },
		{ "name": "reserve-x15", "explanation": "Reserve X15.", "llvm": true },
		{ "name": "reserve-x16", "explanation": "Reserve X16.", "llvm": true },
		{ "name": "reserve-x17", "explanation": "Reserve X17.", "llvm": true },
		{ "name": "reserve-x18", "explanation": "Reserve X18.", "llvm": true },
		{ "name": "reserve-x19", "explanation": "Reserve X19.", "llvm": true },
		{ "name": "reserve-x2", "explanation": "Reserve X2.", "llvm": true },
		{ "name": "reserve-x20", "explanation": "Reserve X20.", "llvm": true },
		{ "name": "reserve-x21", "explanation": "Reserve X21.", "llvm": true },
		{ "name": "reserve-x22", "explanation": "Reserve X22.", "llvm": true },
		{ "name": "reserve-x23", "explanation": "Reserve X23.", "llvm": true },
		{ "name": "reserve-x24", "explanation": "Reserve X24.", "llvm": true },
		{ "name": "reserve-x25", "explanation": "Reserve X25.", "llvm": true },
		{ "name": "reserve-x26", "explanation": "Reserve X26.", "llvm": true },
		{ "name": "reserve-x27", "explanation": "Reserve X27.", "llvm": true },
		{ "name": "reserve-x28", "explanation": "Reserve X28.", "llvm": true },
		{ "name": "reserve-x29", "explanation": "Reserve X29.", "llvm": true },
		{ "name": "reserve-x3", "explanation": "Reserve X3.", "llvm": true },
		{ "name": "reserve-x30", "explanation": "Reserve X30.", "llvm": true },
		{ "name": "reserve-x31", "explanation": "Reserve X31.", "llvm": true },
		{ "name": "reserve-x4", "explanation": "Reserve X4.", "llvm": true },
		{ "name": "reserve-x5", "explanation": "Reserve X5.", "llvm": true },
		{ "name": "reserve-x6", "explanation": "Reserve X6.", "llvm": true },
		{ "name": "reserve-x7", "explanation": "Reserve X7.", "llvm": true },
		{ "name": "reserve-x8", "explanation": "Reserve X8.", "llvm": true },
		{ "name": "reserve-x9", "explanation": "Reserve X9.", "llvm": true },
		{ "name": "save-restore", "explanation": "Enable save/restore..", "llvm": true },
		{
			"name": "seq-cst-trailing-fence",
			"explanation": "Enable trailing fence for seq-cst store..",
			"llvm": true
		},
		{
			"name": "shifted-zextw-fusion",
			"explanation": "Enable SLLI+SRLI to be fused when computing (shifted) word zero extension.",
			"llvm": true
		},
		{
			"name": "short-forward-branch-opt",
			"explanation": "Enable short forward branch optimization.",
			"llvm": true
		},
		{ "name": "sifive7", "explanation": "SiFive 7-Series processors.", "llvm": true },
		{
			"name": "smaia",
			"explanation": "'Smaia' (Advanced Interrupt Architecture Machine Level).",
			"llvm": true
		},
		{
			"name": "smepmp",
			"explanation": "'Smepmp' (Enhanced Physical Memory Protection).",
			"llvm": true
		},
		{
			"name": "ssaia",
			"explanation": "'Ssaia' (Advanced Interrupt Architecture Supervisor Level).",
			"llvm": true
		},
		{
			"name": "svinval",
			"explanation": "'Svinval' (Fine-Grained Address-Translation Cache Invalidation).",
			"llvm": true
		},
		{ "name": "svnapot", "explanation": "'Svnapot' (NAPOT Translation Contiguity).", "llvm": true },
		{ "name": "svpbmt", "explanation": "'Svpbmt' (Page-Based Memory Types).", "llvm": true },
		{
			"name": "tagged-globals",
			"explanation": "Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits.",
			"llvm": true
		},
		{
			"name": "unaligned-scalar-mem",
			"explanation": "Has reasonably performant unaligned scalar loads and stores.",
			"llvm": true
		},
		{
			"name": "use-postra-scheduler",
			"explanation": "Schedule again after register allocation.",
			"llvm": true
		},
		{ "name": "ventana-veyron", "explanation": "Ventana Veyron-Series processors.", "llvm": true },
		{ "name": "xcvalu", "explanation": "'XCValu' (CORE-V ALU Operations).", "llvm": true },
		{ "name": "xcvbi", "explanation": "'XCVbi' (CORE-V Immediate Branching).", "llvm": true },
		{
			"name": "xcvbitmanip",
			"explanation": "'XCVbitmanip' (CORE-V Bit Manipulation).",
			"llvm": true
		},
		{ "name": "xcvelw", "explanation": "'XCVelw' (CORE-V Event Load Word).", "llvm": true },
		{ "name": "xcvmac", "explanation": "'XCVmac' (CORE-V Multiply-Accumulate).", "llvm": true },
		{
			"name": "xcvmem",
			"explanation": "'XCVmem' (CORE-V Post-incrementing Load & Store).",
			"llvm": true
		},
		{ "name": "xcvsimd", "explanation": "'XCVsimd' (CORE-V SIMD ALU).", "llvm": true },
		{
			"name": "xsfvcp",
			"explanation": "'XSfvcp' (SiFive Custom Vector Coprocessor Interface Instructions).",
			"llvm": true
		},
		{
			"name": "xsfvfnrclipxfqf",
			"explanation": "'XSfvfnrclipxfqf' (SiFive FP32-to-int8 Ranged Clip Instructions).",
			"llvm": true
		},
		{
			"name": "xsfvfwmaccqqq",
			"explanation": "'XSfvfwmaccqqq' (SiFive Matrix Multiply Accumulate Instruction and 4-by-4)).",
			"llvm": true
		},
		{
			"name": "xsfvqmaccdod",
			"explanation": "'XSfvqmaccdod' (SiFive Int8 Matrix Multiplication Instructions (2-by-8 and 8-by-2)).",
			"llvm": true
		},
		{
			"name": "xsfvqmaccqoq",
			"explanation": "'XSfvqmaccqoq' (SiFive Int8 Matrix Multiplication Instructions (4-by-8 and 8-by-4)).",
			"llvm": true
		},
		{
			"name": "xtheadba",
			"explanation": "'xtheadba' (T-Head address calculation instructions).",
			"llvm": true
		},
		{
			"name": "xtheadbb",
			"explanation": "'xtheadbb' (T-Head basic bit-manipulation instructions).",
			"llvm": true
		},
		{
			"name": "xtheadbs",
			"explanation": "'xtheadbs' (T-Head single-bit instructions).",
			"llvm": true
		},
		{
			"name": "xtheadcmo",
			"explanation": "'xtheadcmo' (T-Head cache management instructions).",
			"llvm": true
		},
		{
			"name": "xtheadcondmov",
			"explanation": "'xtheadcondmov' (T-Head conditional move instructions).",
			"llvm": true
		},
		{
			"name": "xtheadfmemidx",
			"explanation": "'xtheadfmemidx' (T-Head FP Indexed Memory Operations).",
			"llvm": true
		},
		{
			"name": "xtheadmac",
			"explanation": "'xtheadmac' (T-Head Multiply-Accumulate Instructions).",
			"llvm": true
		},
		{
			"name": "xtheadmemidx",
			"explanation": "'xtheadmemidx' (T-Head Indexed Memory Operations).",
			"llvm": true
		},
		{
			"name": "xtheadmempair",
			"explanation": "'xtheadmempair' (T-Head two-GPR Memory Operations).",
			"llvm": true
		},
		{
			"name": "xtheadsync",
			"explanation": "'xtheadsync' (T-Head multicore synchronization instructions).",
			"llvm": true
		},
		{
			"name": "xtheadvdot",
			"explanation": "'xtheadvdot' (T-Head Vector Extensions for Dot).",
			"llvm": true
		},
		{
			"name": "xventanacondops",
			"explanation": "'XVentanaCondOps' (Ventana Conditional Ops).",
			"llvm": true
		},
		{
			"name": "za128rs",
			"explanation": "'Za128rs' (Reservation Set Size of at Most 128 Bytes).",
			"llvm": true
		},
		{
			"name": "za64rs",
			"explanation": "'Za64rs' (Reservation Set Size of at Most 64 Bytes).",
			"llvm": true
		},
		{ "name": "zawrs", "explanation": "'Zawrs' (Wait on Reservation Set).", "llvm": true },
		{
			"name": "zca",
			"explanation": "'Zca' (part of the C extension, excluding compressed floating point loads/stores).",
			"llvm": true
		},
		{
			"name": "zcb",
			"explanation": "'Zcb' (Compressed basic bit manipulation instructions).",
			"llvm": true
		},
		{
			"name": "zcd",
			"explanation": "'Zcd' (Compressed Double-Precision Floating-Point Instructions).",
			"llvm": true
		},
		{
			"name": "zce",
			"explanation": "'Zce' (Compressed extensions for microcontrollers).",
			"llvm": true
		},
		{
			"name": "zcf",
			"explanation": "'Zcf' (Compressed Single-Precision Floating-Point Instructions).",
			"llvm": true
		},
		{
			"name": "zcmp",
			"explanation": "'Zcmp' (sequenced instuctions for code-size reduction).",
			"llvm": true
		},
		{
			"name": "zcmt",
			"explanation": "'Zcmt' (table jump instuctions for code-size reduction).",
			"llvm": true
		},
		{
			"name": "zexth-fusion",
			"explanation": "Enable SLLI+SRLI to be fused to zero extension of halfword.",
			"llvm": true
		},
		{
			"name": "zextw-fusion",
			"explanation": "Enable SLLI+SRLI to be fused to zero extension of word.",
			"llvm": true
		},
		{ "name": "zfa", "explanation": "'Zfa' (Additional Floating-Point).", "llvm": true },
		{ "name": "zic64b", "explanation": "'Zic64b' (Cache Block Size Is 64 Bytes).", "llvm": true },
		{
			"name": "zicbom",
			"explanation": "'Zicbom' (Cache-Block Management Instructions).",
			"llvm": true
		},
		{
			"name": "zicbop",
			"explanation": "'Zicbop' (Cache-Block Prefetch Instructions).",
			"llvm": true
		},
		{ "name": "zicboz", "explanation": "'Zicboz' (Cache-Block Zero Instructions).", "llvm": true },
		{
			"name": "ziccamoa",
			"explanation": "'Ziccamoa' (Main Memory Supports All Atomics in A).",
			"llvm": true
		},
		{
			"name": "ziccif",
			"explanation": "'Ziccif' (Main Memory Supports Instruction Fetch with Atomicity Requirement).",
			"llvm": true
		},
		{
			"name": "zicclsm",
			"explanation": "'Zicclsm' (Main Memory Supports Misaligned Loads/Stores).",
			"llvm": true
		},
		{
			"name": "ziccrse",
			"explanation": "'Ziccrse' (Main Memory Supports Forward Progress on LR/SC Sequences).",
			"llvm": true
		},
		{ "name": "zicntr", "explanation": "'Zicntr' (Base Counters and Timers).", "llvm": true },
		{ "name": "zicond", "explanation": "'Zicond' (Integer Conditional Operations).", "llvm": true },
		{ "name": "zicsr", "explanation": "'zicsr' (CSRs).", "llvm": true },
		{ "name": "zifencei", "explanation": "'Zifencei' (fence.i).", "llvm": true },
		{
			"name": "zihintntl",
			"explanation": "'Zihintntl' (Non-Temporal Locality Hints).",
			"llvm": true
		},
		{ "name": "zihintpause", "explanation": "'Zihintpause' (Pause Hint).", "llvm": true },
		{ "name": "zihpm", "explanation": "'Zihpm' (Hardware Performance Counters).", "llvm": true },
		{ "name": "zmmul", "explanation": "'Zmmul' (Integer Multiplication).", "llvm": true },
		{
			"name": "zvbb",
			"explanation": "'Zvbb' (Vector basic bit-manipulation instructions).",
			"llvm": true
		},
		{ "name": "zvbc", "explanation": "'Zvbc' (Vector Carryless Multiplication).", "llvm": true },
		{
			"name": "zve32f",
			"explanation": "'Zve32f' (Vector Extensions for Embedded Processors with maximal 32 EEW and F extension).",
			"llvm": true
		},
		{
			"name": "zve32x",
			"explanation": "'Zve32x' (Vector Extensions for Embedded Processors with maximal 32 EEW).",
			"llvm": true
		},
		{
			"name": "zve64d",
			"explanation": "'Zve64d' (Vector Extensions for Embedded Processors with maximal 64 EEW, F and D extension).",
			"llvm": true
		},
		{
			"name": "zve64f",
			"explanation": "'Zve64f' (Vector Extensions for Embedded Processors with maximal 64 EEW and F extension).",
			"llvm": true
		},
		{
			"name": "zve64x",
			"explanation": "'Zve64x' (Vector Extensions for Embedded Processors with maximal 64 EEW).",
			"llvm": true
		},
		{
			"name": "zvfh",
			"explanation": "'Zvfh' (Vector Half-Precision Floating-Point).",
			"llvm": true
		},
		{
			"name": "zvfhmin",
			"explanation": "'Zvfhmin' (Vector Half-Precision Floating-Point Minimal).",
			"llvm": true
		},
		{
			"name": "zvkb",
			"explanation": "'Zvkb' (Vector Bit-manipulation used in Cryptography).",
			"llvm": true
		},
		{
			"name": "zvkg",
			"explanation": "'Zvkg' (Vector GCM instructions for Cryptography).",
			"llvm": true
		},
		{
			"name": "zvkn",
			"explanation": "'Zvkn' (shorthand for 'Zvkned', 'Zvknhb', 'Zvkb', and 'Zvkt').",
			"llvm": true
		},
		{ "name": "zvknc", "explanation": "'Zvknc' (shorthand for 'Zvknc' and 'Zvbc').", "llvm": true },
		{
			"name": "zvkned",
			"explanation": "'Zvkned' (Vector AES Encryption & Decryption (Single Round)).",
			"llvm": true
		},
		{ "name": "zvkng", "explanation": "'zvkng' (shorthand for 'Zvkn' and 'Zvkg').", "llvm": true },
		{ "name": "zvknha", "explanation": "'Zvknha' (Vector SHA-2 (SHA-256 only)).", "llvm": true },
		{
			"name": "zvknhb",
			"explanation": "'Zvknhb' (Vector SHA-2 (SHA-256 and SHA-512)).",
			"llvm": true
		},
		{
			"name": "zvks",
			"explanation": "'Zvks' (shorthand for 'Zvksed', 'Zvksh', 'Zvkb', and 'Zvkt').",
			"llvm": true
		},
		{ "name": "zvksc", "explanation": "'Zvksc' (shorthand for 'Zvks' and 'Zvbc').", "llvm": true },
		{ "name": "zvksed", "explanation": "'Zvksed' (SM4 Block Cipher Instructions).", "llvm": true },
		{ "name": "zvksg", "explanation": "'Zvksg' (shorthand for 'Zvks' and 'Zvkg').", "llvm": true },
		{ "name": "zvksh", "explanation": "'Zvksh' (SM3 Hash Function Instructions).", "llvm": true },
		{
			"name": "zvkt",
			"explanation": "'Zvkt' (Vector Data-Independent Execution Latency).",
			"llvm": true
		},
		{ "name": "zvl1024b", "explanation": "'Zvl' (Minimum Vector Length) 1024.", "llvm": true },
		{ "name": "zvl128b", "explanation": "'Zvl' (Minimum Vector Length) 128.", "llvm": true },
		{ "name": "zvl16384b", "explanation": "'Zvl' (Minimum Vector Length) 16384.", "llvm": true },
		{ "name": "zvl2048b", "explanation": "'Zvl' (Minimum Vector Length) 2048.", "llvm": true },
		{ "name": "zvl256b", "explanation": "'Zvl' (Minimum Vector Length) 256.", "llvm": true },
		{ "name": "zvl32768b", "explanation": "'Zvl' (Minimum Vector Length) 32768.", "llvm": true },
		{ "name": "zvl32b", "explanation": "'Zvl' (Minimum Vector Length) 32.", "llvm": true },
		{ "name": "zvl4096b", "explanation": "'Zvl' (Minimum Vector Length) 4096.", "llvm": true },
		{ "name": "zvl512b", "explanation": "'Zvl' (Minimum Vector Length) 512.", "llvm": true },
		{ "name": "zvl64b", "explanation": "'Zvl' (Minimum Vector Length) 64.", "llvm": true },
		{ "name": "zvl65536b", "explanation": "'Zvl' (Minimum Vector Length) 65536.", "llvm": true },
		{ "name": "zvl8192b", "explanation": "'Zvl' (Minimum Vector Length) 8192.", "llvm": true }
	],
	"powerpc": [
		{ "name": "altivec", "explanation": "Enable Altivec instructions.", "llvm": false },
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "power10-vector",
			"explanation": "Enable POWER10 vector instructions.",
			"llvm": false
		},
		{
			"name": "power8-altivec",
			"explanation": "Enable POWER8 Altivec instructions.",
			"llvm": false
		},
		{ "name": "power8-vector", "explanation": "Enable POWER8 vector instructions.", "llvm": false },
		{
			"name": "power9-altivec",
			"explanation": "Enable POWER9 Altivec instructions.",
			"llvm": false
		},
		{ "name": "power9-vector", "explanation": "Enable POWER9 vector instructions.", "llvm": false },
		{ "name": "vsx", "explanation": "Enable VSX instructions.", "llvm": false },
		{ "name": "64bit", "explanation": "Enable 64-bit instructions.", "llvm": true },
		{
			"name": "64bitregs",
			"explanation": "Enable 64-bit registers usage for ppc32 [beta].",
			"llvm": true
		},
		{ "name": "aix", "explanation": "AIX OS.", "llvm": true },
		{
			"name": "aix-small-local-exec-tls",
			"explanation": "Produce a TOC-free local-exec TLS sequence for this function for 64-bit AIX.",
			"llvm": true
		},
		{
			"name": "allow-unaligned-fp-access",
			"explanation": "CPU does not trap on unaligned FP access.",
			"llvm": true
		},
		{ "name": "booke", "explanation": "Enable Book E instructions.", "llvm": true },
		{ "name": "bpermd", "explanation": "Enable the bpermd instruction.", "llvm": true },
		{ "name": "cmpb", "explanation": "Enable the cmpb instruction.", "llvm": true },
		{ "name": "crbits", "explanation": "Use condition-register bits individually.", "llvm": true },
		{ "name": "crypto", "explanation": "Enable POWER8 Crypto instructions.", "llvm": true },
		{
			"name": "direct-move",
			"explanation": "Enable Power8 direct move instructions.",
			"llvm": true
		},
		{ "name": "e500", "explanation": "Enable E500/E500mc instructions.", "llvm": true },
		{
			"name": "efpu2",
			"explanation": "Enable Embedded Floating-Point APU 2 instructions.",
			"llvm": true
		},
		{ "name": "extdiv", "explanation": "Enable extended divide instructions.", "llvm": true },
		{ "name": "fast-MFLR", "explanation": "MFLR is a fast instruction.", "llvm": true },
		{ "name": "fcpsgn", "explanation": "Enable the fcpsgn instruction.", "llvm": true },
		{
			"name": "float128",
			"explanation": "Enable the __float128 data type for IEEE-754R Binary128..",
			"llvm": true
		},
		{
			"name": "fpcvt",
			"explanation": "Enable fc[ft]* (unsigned and single-precision) and lfiwzx instructions.",
			"llvm": true
		},
		{ "name": "fprnd", "explanation": "Enable the fri[mnpz] instructions.", "llvm": true },
		{ "name": "fpu", "explanation": "Enable classic FPU instructions.", "llvm": true },
		{ "name": "fre", "explanation": "Enable the fre instruction.", "llvm": true },
		{ "name": "fres", "explanation": "Enable the fres instruction.", "llvm": true },
		{ "name": "frsqrte", "explanation": "Enable the frsqrte instruction.", "llvm": true },
		{ "name": "frsqrtes", "explanation": "Enable the frsqrtes instruction.", "llvm": true },
		{ "name": "fsqrt", "explanation": "Enable the fsqrt instruction.", "llvm": true },
		{
			"name": "fuse-add-logical",
			"explanation": "Target supports Add with Logical Operations fusion.",
			"llvm": true
		},
		{ "name": "fuse-addi-load", "explanation": "Power8 Addi-Load fusion.", "llvm": true },
		{ "name": "fuse-addis-load", "explanation": "Power8 Addis-Load fusion.", "llvm": true },
		{
			"name": "fuse-arith-add",
			"explanation": "Target supports Arithmetic Operations with Add fusion.",
			"llvm": true
		},
		{
			"name": "fuse-back2back",
			"explanation": "Target supports general back to back fusion.",
			"llvm": true
		},
		{
			"name": "fuse-cmp",
			"explanation": "Target supports Comparison Operations fusion.",
			"llvm": true
		},
		{
			"name": "fuse-logical",
			"explanation": "Target supports Logical Operations fusion.",
			"llvm": true
		},
		{
			"name": "fuse-logical-add",
			"explanation": "Target supports Logical with Add Operations fusion.",
			"llvm": true
		},
		{ "name": "fuse-sha3", "explanation": "Target supports SHA3 assist fusion.", "llvm": true },
		{ "name": "fuse-store", "explanation": "Target supports store clustering.", "llvm": true },
		{
			"name": "fuse-wideimm",
			"explanation": "Target supports Wide-Immediate fusion.",
			"llvm": true
		},
		{
			"name": "fuse-zeromove",
			"explanation": "Target supports move to SPR with branch fusion.",
			"llvm": true
		},
		{ "name": "fusion", "explanation": "Target supports instruction fusion.", "llvm": true },
		{ "name": "hard-float", "explanation": "Enable floating-point instructions.", "llvm": true },
		{
			"name": "htm",
			"explanation": "Enable Hardware Transactional Memory instructions.",
			"llvm": true
		},
		{ "name": "icbt", "explanation": "Enable icbt instruction.", "llvm": true },
		{
			"name": "invariant-function-descriptors",
			"explanation": "Assume function descriptors are invariant.",
			"llvm": true
		},
		{
			"name": "isa-future-instructions",
			"explanation": "Enable instructions for Future ISA..",
			"llvm": true
		},
		{
			"name": "isa-v206-instructions",
			"explanation": "Enable instructions in ISA 2.06..",
			"llvm": true
		},
		{
			"name": "isa-v207-instructions",
			"explanation": "Enable instructions in ISA 2.07..",
			"llvm": true
		},
		{
			"name": "isa-v30-instructions",
			"explanation": "Enable instructions in ISA 3.0..",
			"llvm": true
		},
		{
			"name": "isa-v31-instructions",
			"explanation": "Enable instructions in ISA 3.1..",
			"llvm": true
		},
		{ "name": "isel", "explanation": "Enable the isel instruction.", "llvm": true },
		{ "name": "ldbrx", "explanation": "Enable the ldbrx instruction.", "llvm": true },
		{ "name": "lfiwax", "explanation": "Enable the lfiwax instruction.", "llvm": true },
		{ "name": "longcall", "explanation": "Always use indirect calls.", "llvm": true },
		{ "name": "mfocrf", "explanation": "Enable the MFOCRF instruction.", "llvm": true },
		{ "name": "mma", "explanation": "Enable MMA instructions.", "llvm": true },
		{
			"name": "modern-aix-as",
			"explanation": "AIX system assembler is modern enough to support new mnes.",
			"llvm": true
		},
		{
			"name": "msync",
			"explanation": "Has only the msync instruction instead of sync.",
			"llvm": true
		},
		{
			"name": "paired-vector-memops",
			"explanation": "32Byte load and store instructions.",
			"llvm": true
		},
		{ "name": "partword-atomics", "explanation": "Enable l[bh]arx and st[bh]cx..", "llvm": true },
		{ "name": "pcrelative-memops", "explanation": "Enable PC relative Memory Ops.", "llvm": true },
		{ "name": "popcntd", "explanation": "Enable the popcnt[dw] instructions.", "llvm": true },
		{
			"name": "ppc-postra-sched",
			"explanation": "Use PowerPC post-RA scheduling strategy.",
			"llvm": true
		},
		{
			"name": "ppc-prera-sched",
			"explanation": "Use PowerPC pre-RA scheduling strategy.",
			"llvm": true
		},
		{ "name": "ppc4xx", "explanation": "Enable PPC 4xx instructions.", "llvm": true },
		{ "name": "ppc6xx", "explanation": "Enable PPC 6xx instructions.", "llvm": true },
		{
			"name": "predictable-select-expensive",
			"explanation": "Prefer likely predicted branches over selects.",
			"llvm": true
		},
		{ "name": "prefix-instrs", "explanation": "Enable prefixed instructions.", "llvm": true },
		{ "name": "privileged", "explanation": "Add privileged instructions.", "llvm": true },
		{ "name": "quadword-atomics", "explanation": "Enable lqarx and stqcx..", "llvm": true },
		{
			"name": "recipprec",
			"explanation": "Assume higher precision reciprocal estimates.",
			"llvm": true
		},
		{ "name": "rop-protect", "explanation": "Add ROP protect.", "llvm": true },
		{ "name": "secure-plt", "explanation": "Enable secure plt mode.", "llvm": true },
		{ "name": "slow-popcntd", "explanation": "Has slow popcnt[dw] instructions.", "llvm": true },
		{ "name": "spe", "explanation": "Enable SPE instructions.", "llvm": true },
		{ "name": "stfiwx", "explanation": "Enable the stfiwx instruction.", "llvm": true },
		{
			"name": "two-const-nr",
			"explanation": "Requires two constant Newton-Raphson computation.",
			"llvm": true
		},
		{ "name": "vectors-use-two-units", "explanation": "Vectors use two units.", "llvm": true }
	],
	"x86_64": [
		{ "name": "adx", "explanation": "Support ADX instructions.", "llvm": false },
		{ "name": "aes", "explanation": "Enable AES instructions.", "llvm": false },
		{ "name": "amx-bf16", "explanation": "Support AMX-BF16 instructions.", "llvm": false },
		{ "name": "amx-complex", "explanation": "Support AMX-COMPLEX instructions.", "llvm": false },
		{ "name": "amx-fp16", "explanation": "Support AMX amx-fp16 instructions.", "llvm": false },
		{ "name": "amx-int8", "explanation": "Support AMX-INT8 instructions.", "llvm": false },
		{ "name": "amx-tile", "explanation": "Support AMX-TILE instructions.", "llvm": false },
		{ "name": "avx", "explanation": "Enable AVX instructions.", "llvm": false },
		{ "name": "avx2", "explanation": "Enable AVX2 instructions.", "llvm": false },
		{ "name": "avx512bf16", "explanation": "Support bfloat16 floating point.", "llvm": false },
		{ "name": "avx512bitalg", "explanation": "Enable AVX-512 Bit Algorithms.", "llvm": false },
		{
			"name": "avx512bw",
			"explanation": "Enable AVX-512 Byte and Word Instructions.",
			"llvm": false
		},
		{
			"name": "avx512cd",
			"explanation": "Enable AVX-512 Conflict Detection Instructions.",
			"llvm": false
		},
		{
			"name": "avx512dq",
			"explanation": "Enable AVX-512 Doubleword and Quadword Instructions.",
			"llvm": false
		},
		{ "name": "avx512f", "explanation": "Enable AVX-512 instructions.", "llvm": false },
		{ "name": "avx512fp16", "explanation": "Support 16-bit floating point.", "llvm": false },
		{
			"name": "avx512ifma",
			"explanation": "Enable AVX-512 Integer Fused Multiple-Add.",
			"llvm": false
		},
		{
			"name": "avx512vbmi",
			"explanation": "Enable AVX-512 Vector Byte Manipulation Instructions.",
			"llvm": false
		},
		{
			"name": "avx512vbmi2",
			"explanation": "Enable AVX-512 further Vector Byte Manipulation Instructions.",
			"llvm": false
		},
		{
			"name": "avx512vl",
			"explanation": "Enable AVX-512 Vector Length eXtensions.",
			"llvm": false
		},
		{
			"name": "avx512vnni",
			"explanation": "Enable AVX-512 Vector Neural Network Instructions.",
			"llvm": false
		},
		{ "name": "avx512vp2intersect", "explanation": "Enable AVX-512 vp2intersect.", "llvm": false },
		{
			"name": "avx512vpopcntdq",
			"explanation": "Enable AVX-512 Population Count Instructions.",
			"llvm": false
		},
		{ "name": "avxifma", "explanation": "Enable AVX-IFMA.", "llvm": false },
		{
			"name": "avxneconvert",
			"explanation": "Support AVX-NE-CONVERT instructions.",
			"llvm": false
		},
		{ "name": "avxvnni", "explanation": "Support AVX_VNNI encoding.", "llvm": false },
		{ "name": "avxvnniint16", "explanation": "Enable AVX-VNNI-INT16.", "llvm": false },
		{ "name": "avxvnniint8", "explanation": "Enable AVX-VNNI-INT8.", "llvm": false },
		{ "name": "bmi1", "explanation": "Support BMI instructions.", "llvm": false },
		{ "name": "bmi2", "explanation": "Support BMI2 instructions.", "llvm": false },
		{
			"name": "cmpxchg16b",
			"explanation": "64-bit with cmpxchg16b (this is true for most x86-64 chips, but not the first AMD chips).",
			"llvm": false
		},
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "ermsb", "explanation": "REP MOVS/STOS are fast.", "llvm": false },
		{
			"name": "f16c",
			"explanation": "Support 16-bit floating point conversion instructions.",
			"llvm": false
		},
		{ "name": "fma", "explanation": "Enable three-operand fused multiple-add.", "llvm": false },
		{ "name": "fxsr", "explanation": "Support fxsave/fxrestore instructions.", "llvm": false },
		{
			"name": "gfni",
			"explanation": "Enable Galois Field Arithmetic Instructions.",
			"llvm": false
		},
		{
			"name": "lahfsahf",
			"explanation": "Support LAHF and SAHF instructions in 64-bit mode.",
			"llvm": false
		},
		{ "name": "lzcnt", "explanation": "Support LZCNT instruction.", "llvm": false },
		{ "name": "movbe", "explanation": "Support MOVBE instruction.", "llvm": false },
		{
			"name": "pclmulqdq",
			"explanation": "Enable packed carry-less multiplication instructions.",
			"llvm": false
		},
		{ "name": "popcnt", "explanation": "Support POPCNT instruction.", "llvm": false },
		{ "name": "prfchw", "explanation": "Support PRFCHW instructions.", "llvm": false },
		{ "name": "rdrand", "explanation": "Support RDRAND instruction.", "llvm": false },
		{ "name": "rdseed", "explanation": "Support RDSEED instruction.", "llvm": false },
		{ "name": "rtm", "explanation": "Support RTM instructions.", "llvm": false },
		{ "name": "sha", "explanation": "Enable SHA instructions.", "llvm": false },
		{ "name": "sse", "explanation": "Enable SSE instructions.", "llvm": false },
		{ "name": "sse2", "explanation": "Enable SSE2 instructions.", "llvm": false },
		{ "name": "sse3", "explanation": "Enable SSE3 instructions.", "llvm": false },
		{ "name": "sse4.1", "explanation": "Enable SSE 4.1 instructions.", "llvm": false },
		{ "name": "sse4.2", "explanation": "Enable SSE 4.2 instructions.", "llvm": false },
		{ "name": "sse4a", "explanation": "Support SSE 4a instructions.", "llvm": false },
		{ "name": "ssse3", "explanation": "Enable SSSE3 instructions.", "llvm": false },
		{ "name": "tbm", "explanation": "Enable TBM instructions.", "llvm": false },
		{
			"name": "vaes",
			"explanation": "Promote selected AES instructions to AVX512/AVX registers.",
			"llvm": false
		},
		{ "name": "vpclmulqdq", "explanation": "Enable vpclmulqdq instructions.", "llvm": false },
		{ "name": "xop", "explanation": "Enable XOP instructions.", "llvm": false },
		{ "name": "xsave", "explanation": "Support xsave instructions.", "llvm": false },
		{ "name": "xsavec", "explanation": "Support xsavec instructions.", "llvm": false },
		{ "name": "xsaveopt", "explanation": "Support xsaveopt instructions.", "llvm": false },
		{ "name": "xsaves", "explanation": "Support xsaves instructions.", "llvm": false },
		{ "name": "16bit-mode", "explanation": "16-bit mode (i8086).", "llvm": true },
		{ "name": "32bit-mode", "explanation": "32-bit mode (80386).", "llvm": true },
		{ "name": "3dnow", "explanation": "Enable 3DNow! instructions.", "llvm": true },
		{ "name": "3dnowa", "explanation": "Enable 3DNow! Athlon instructions.", "llvm": true },
		{ "name": "64bit", "explanation": "Support 64-bit instructions.", "llvm": true },
		{ "name": "64bit-mode", "explanation": "64-bit mode (x86_64).", "llvm": true },
		{
			"name": "allow-light-256-bit",
			"explanation": "Enable generation of 256-bit load/stores even if we prefer 128-bit.",
			"llvm": true
		},
		{
			"name": "avx10.1-256",
			"explanation": "Support AVX10.1 up to 256-bit instruction.",
			"llvm": true
		},
		{
			"name": "avx10.1-512",
			"explanation": "Support AVX10.1 up to 512-bit instruction.",
			"llvm": true
		},
		{
			"name": "avx512er",
			"explanation": "Enable AVX-512 Exponential and Reciprocal Instructions.",
			"llvm": true
		},
		{ "name": "avx512pf", "explanation": "Enable AVX-512 PreFetch Instructions.", "llvm": true },
		{
			"name": "branchfusion",
			"explanation": "CMP/TEST can be fused with conditional branches.",
			"llvm": true
		},
		{ "name": "ccmp", "explanation": "Support conditional cmp & test instructions.", "llvm": true },
		{ "name": "cf", "explanation": "Support conditional faulting.", "llvm": true },
		{ "name": "cldemote", "explanation": "Enable Cache Line Demote.", "llvm": true },
		{ "name": "clflushopt", "explanation": "Flush A Cache Line Optimized.", "llvm": true },
		{ "name": "clwb", "explanation": "Cache Line Write Back.", "llvm": true },
		{ "name": "clzero", "explanation": "Enable Cache Line Zero.", "llvm": true },
		{ "name": "cmov", "explanation": "Enable conditional move instructions.", "llvm": true },
		{ "name": "cmpccxadd", "explanation": "Support CMPCCXADD instructions.", "llvm": true },
		{
			"name": "crc32",
			"explanation": "Enable SSE 4.2 CRC32 instruction (used when SSE4.2 is supported but function is GPR only).",
			"llvm": true
		},
		{ "name": "cx8", "explanation": "Support CMPXCHG8B instructions.", "llvm": true },
		{ "name": "egpr", "explanation": "Support extended general purpose register.", "llvm": true },
		{ "name": "enqcmd", "explanation": "Has ENQCMD instructions.", "llvm": true },
		{ "name": "evex512", "explanation": "Support ZMM and 64-bit mask instructions.", "llvm": true },
		{
			"name": "false-deps-getmant",
			"explanation": "VGETMANTSS/SD/SH and VGETMANDPS/PD(memory version) has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-lzcnt-tzcnt",
			"explanation": "LZCNT/TZCNT have a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-mulc",
			"explanation": "VF[C]MULCPH/SH has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-mullq",
			"explanation": "VPMULLQ has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-perm",
			"explanation": "VPERMD/Q/PS/PD has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-popcnt",
			"explanation": "POPCNT has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "false-deps-range",
			"explanation": "VRANGEPD/PS/SD/SS has a false dependency on dest register.",
			"llvm": true
		},
		{
			"name": "fast-11bytenop",
			"explanation": "Target can quickly decode up to 11 byte NOPs.",
			"llvm": true
		},
		{
			"name": "fast-15bytenop",
			"explanation": "Target can quickly decode up to 15 byte NOPs.",
			"llvm": true
		},
		{
			"name": "fast-7bytenop",
			"explanation": "Target can quickly decode up to 7 byte NOPs.",
			"llvm": true
		},
		{
			"name": "fast-bextr",
			"explanation": "Indicates that the BEXTR instruction is implemented as a single uop with good throughput.",
			"llvm": true
		},
		{
			"name": "fast-gather",
			"explanation": "Indicates if gather is reasonably fast (this is true for Skylake client and all AVX-512 CPUs).",
			"llvm": true
		},
		{
			"name": "fast-hops",
			"explanation": "Prefer horizontal vector math instructions (haddp, phsub, etc.) over normal vector instructions with shuffles.",
			"llvm": true
		},
		{
			"name": "fast-lzcnt",
			"explanation": "LZCNT instructions are as fast as most simple integer ops.",
			"llvm": true
		},
		{
			"name": "fast-movbe",
			"explanation": "Prefer a movbe over a single-use load + bswap / single-use bswap + store.",
			"llvm": true
		},
		{
			"name": "fast-scalar-fsqrt",
			"explanation": "Scalar SQRT is fast (disable Newton-Raphson).",
			"llvm": true
		},
		{
			"name": "fast-scalar-shift-masks",
			"explanation": "Prefer a left/right scalar logical shift pair over a shift+and pair.",
			"llvm": true
		},
		{
			"name": "fast-shld-rotate",
			"explanation": "SHLD can be used as a faster rotate.",
			"llvm": true
		},
		{
			"name": "fast-variable-crosslane-shuffle",
			"explanation": "Cross-lane shuffles with variable masks are fast.",
			"llvm": true
		},
		{
			"name": "fast-variable-perlane-shuffle",
			"explanation": "Per-lane shuffles with variable masks are fast.",
			"llvm": true
		},
		{
			"name": "fast-vector-fsqrt",
			"explanation": "Vector SQRT is fast (disable Newton-Raphson).",
			"llvm": true
		},
		{
			"name": "fast-vector-shift-masks",
			"explanation": "Prefer a left/right vector logical shift pair over a shift+and pair.",
			"llvm": true
		},
		{
			"name": "faster-shift-than-shuffle",
			"explanation": "Shifts are faster (or as fast) as shuffle.",
			"llvm": true
		},
		{ "name": "fma4", "explanation": "Enable four-operand fused multiple-add.", "llvm": true },
		{ "name": "fsgsbase", "explanation": "Support FS/GS Base instructions.", "llvm": true },
		{ "name": "fsrm", "explanation": "REP MOVSB of short lengths is faster.", "llvm": true },
		{
			"name": "harden-sls-ijmp",
			"explanation": "Harden against straight line speculation across indirect JMP instructions..",
			"llvm": true
		},
		{
			"name": "harden-sls-ret",
			"explanation": "Harden against straight line speculation across RET instructions..",
			"llvm": true
		},
		{ "name": "hreset", "explanation": "Has hreset instruction.", "llvm": true },
		{
			"name": "idivl-to-divb",
			"explanation": "Use 8-bit divide for positive values less than 256.",
			"llvm": true
		},
		{
			"name": "idivq-to-divl",
			"explanation": "Use 32-bit divide for positive values less than 2^32.",
			"llvm": true
		},
		{ "name": "invpcid", "explanation": "Invalidate Process-Context Identifier.", "llvm": true },
		{ "name": "kl", "explanation": "Support Key Locker kl Instructions.", "llvm": true },
		{
			"name": "lea-sp",
			"explanation": "Use LEA for adjusting the stack pointer (this is an optimization for Intel Atom processors).",
			"llvm": true
		},
		{
			"name": "lea-uses-ag",
			"explanation": "LEA instruction needs inputs at AG stage.",
			"llvm": true
		},
		{
			"name": "lvi-cfi",
			"explanation": "Prevent indirect calls/branches from using a memory operand, and precede all indirect calls/branches from a register with an LFENCE instruction to serialize control flow. Also decompose RET instructions into a POP+LFENCE+JMP sequence..",
			"llvm": true
		},
		{
			"name": "lvi-load-hardening",
			"explanation": "Insert LFENCE instructions to prevent data speculatively injected into loads from being used maliciously..",
			"llvm": true
		},
		{ "name": "lwp", "explanation": "Enable LWP instructions.", "llvm": true },
		{
			"name": "macrofusion",
			"explanation": "Various instructions can be fused with conditional branches.",
			"llvm": true
		},
		{ "name": "mmx", "explanation": "Enable MMX instructions.", "llvm": true },
		{
			"name": "movdir64b",
			"explanation": "Support movdir64b instruction (direct store 64 bytes).",
			"llvm": true
		},
		{
			"name": "movdiri",
			"explanation": "Support movdiri instruction (direct store integer).",
			"llvm": true
		},
		{
			"name": "mwaitx",
			"explanation": "Enable MONITORX/MWAITX timer functionality.",
			"llvm": true
		},
		{ "name": "ndd", "explanation": "Support non-destructive destination.", "llvm": true },
		{
			"name": "no-bypass-delay",
			"explanation": "Has no bypass delay when using the 'wrong' domain.",
			"llvm": true
		},
		{
			"name": "no-bypass-delay-blend",
			"explanation": "Has no bypass delay when using the 'wrong' blend type.",
			"llvm": true
		},
		{
			"name": "no-bypass-delay-mov",
			"explanation": "Has no bypass delay when using the 'wrong' mov type.",
			"llvm": true
		},
		{
			"name": "no-bypass-delay-shuffle",
			"explanation": "Has no bypass delay when using the 'wrong' shuffle type.",
			"llvm": true
		},
		{
			"name": "nopl",
			"explanation": "Enable NOPL instruction (generally pentium pro+).",
			"llvm": true
		},
		{
			"name": "pad-short-functions",
			"explanation": "Pad short functions (to prevent a stall when returning too early).",
			"llvm": true
		},
		{ "name": "pconfig", "explanation": "platform configuration instruction.", "llvm": true },
		{ "name": "pku", "explanation": "Enable protection keys.", "llvm": true },
		{ "name": "ppx", "explanation": "Support Push-Pop Acceleration.", "llvm": true },
		{ "name": "prefer-128-bit", "explanation": "Prefer 128-bit AVX instructions.", "llvm": true },
		{ "name": "prefer-256-bit", "explanation": "Prefer 256-bit AVX instructions.", "llvm": true },
		{
			"name": "prefer-mask-registers",
			"explanation": "Prefer AVX512 mask registers over PTEST/MOVMSK.",
			"llvm": true
		},
		{
			"name": "prefer-movmsk-over-vtest",
			"explanation": "Prefer movmsk over vtest instruction.",
			"llvm": true
		},
		{ "name": "prefer-no-gather", "explanation": "Prefer no gather instructions.", "llvm": true },
		{ "name": "prefer-no-scatter", "explanation": "Prefer no scatter instructions.", "llvm": true },
		{
			"name": "prefetchi",
			"explanation": "Prefetch instruction with T0 or T1 Hint.",
			"llvm": true
		},
		{
			"name": "prefetchwt1",
			"explanation": "Prefetch with Intent to Write and T1 Hint.",
			"llvm": true
		},
		{ "name": "ptwrite", "explanation": "Support ptwrite instruction.", "llvm": true },
		{ "name": "push2pop2", "explanation": "Support PUSH2/POP2 instructions.", "llvm": true },
		{ "name": "raoint", "explanation": "Support RAO-INT instructions.", "llvm": true },
		{ "name": "rdpid", "explanation": "Support RDPID instructions.", "llvm": true },
		{ "name": "rdpru", "explanation": "Support RDPRU instructions.", "llvm": true },
		{
			"name": "retpoline",
			"explanation": "Remove speculation of indirect branches from the generated code, either by avoiding them entirely or lowering them with a speculation blocking construct.",
			"llvm": true
		},
		{
			"name": "retpoline-external-thunk",
			"explanation": "When lowering an indirect call or branch using a `retpoline`, rely on the specified user provided thunk rather than emitting one ourselves. Only has effect when combined with some other retpoline feature.",
			"llvm": true
		},
		{
			"name": "retpoline-indirect-branches",
			"explanation": "Remove speculation of indirect branches from the generated code.",
			"llvm": true
		},
		{
			"name": "retpoline-indirect-calls",
			"explanation": "Remove speculation of indirect calls from the generated code.",
			"llvm": true
		},
		{
			"name": "sbb-dep-breaking",
			"explanation": "SBB with same register has no source dependency.",
			"llvm": true
		},
		{ "name": "serialize", "explanation": "Has serialize instruction.", "llvm": true },
		{
			"name": "seses",
			"explanation": "Prevent speculative execution side channel timing attacks by inserting a speculation barrier before memory reads, memory writes, and conditional branches. Implies LVI Control Flow integrity..",
			"llvm": true
		},
		{ "name": "sgx", "explanation": "Enable Software Guard Extensions.", "llvm": true },
		{ "name": "sha512", "explanation": "Support SHA512 instructions.", "llvm": true },
		{ "name": "shstk", "explanation": "Support CET Shadow-Stack instructions.", "llvm": true },
		{
			"name": "slow-3ops-lea",
			"explanation": "LEA instruction with 3 ops or certain registers is slow.",
			"llvm": true
		},
		{
			"name": "slow-incdec",
			"explanation": "INC and DEC instructions are slower than ADD and SUB.",
			"llvm": true
		},
		{
			"name": "slow-lea",
			"explanation": "LEA instruction with certain arguments is slow.",
			"llvm": true
		},
		{ "name": "slow-pmaddwd", "explanation": "PMADDWD is slower than PMULLD.", "llvm": true },
		{
			"name": "slow-pmulld",
			"explanation": "PMULLD instruction is slow (compared to PMULLW/PMULHW and PMULUDQ).",
			"llvm": true
		},
		{ "name": "slow-shld", "explanation": "SHLD instruction is slow.", "llvm": true },
		{
			"name": "slow-two-mem-ops",
			"explanation": "Two memory operand instructions are slow.",
			"llvm": true
		},
		{
			"name": "slow-unaligned-mem-16",
			"explanation": "Slow unaligned 16-byte memory access.",
			"llvm": true
		},
		{
			"name": "slow-unaligned-mem-32",
			"explanation": "Slow unaligned 32-byte memory access.",
			"llvm": true
		},
		{ "name": "sm3", "explanation": "Support SM3 instructions.", "llvm": true },
		{ "name": "sm4", "explanation": "Support SM4 instructions.", "llvm": true },
		{ "name": "soft-float", "explanation": "Use software floating point features.", "llvm": true },
		{
			"name": "sse-unaligned-mem",
			"explanation": "Allow unaligned memory operands with SSE instructions (this may require setting a configuration bit in the processor).",
			"llvm": true
		},
		{
			"name": "tagged-globals",
			"explanation": "Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits..",
			"llvm": true
		},
		{ "name": "tsxldtrk", "explanation": "Support TSXLDTRK instructions.", "llvm": true },
		{
			"name": "tuning-fast-imm-vector-shift",
			"explanation": "Vector shifts are fast (2/cycle) as opposed to slow (1/cycle).",
			"llvm": true
		},
		{ "name": "uintr", "explanation": "Has UINTR Instructions.", "llvm": true },
		{
			"name": "use-glm-div-sqrt-costs",
			"explanation": "Use Goldmont specific floating point div/sqrt costs.",
			"llvm": true
		},
		{
			"name": "use-slm-arith-costs",
			"explanation": "Use Silvermont specific arithmetic costs.",
			"llvm": true
		},
		{ "name": "usermsr", "explanation": "Support USERMSR instructions.", "llvm": true },
		{ "name": "vzeroupper", "explanation": "Should insert vzeroupper instructions.", "llvm": true },
		{ "name": "waitpkg", "explanation": "Wait and pause enhancements.", "llvm": true },
		{ "name": "wbnoinvd", "explanation": "Write Back No Invalidate.", "llvm": true },
		{ "name": "widekl", "explanation": "Support Key Locker wide Instructions.", "llvm": true },
		{ "name": "x87", "explanation": "Enable X87 float instructions.", "llvm": true }
	],
	"wasm32": [
		{ "name": "atomics", "explanation": "Enable Atomics.", "llvm": false },
		{ "name": "bulk-memory", "explanation": "Enable bulk memory operations.", "llvm": false },
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "exception-handling",
			"explanation": "Enable Wasm exception handling.",
			"llvm": false
		},
		{
			"name": "extended-const",
			"explanation": "Enable extended const expressions.",
			"llvm": false
		},
		{
			"name": "multivalue",
			"explanation": "Enable multivalue blocks, instructions, and functions.",
			"llvm": false
		},
		{ "name": "mutable-globals", "explanation": "Enable mutable globals.", "llvm": false },
		{
			"name": "nontrapping-fptoint",
			"explanation": "Enable non-trapping float-to-int conversion operators.",
			"llvm": false
		},
		{ "name": "reference-types", "explanation": "Enable reference types.", "llvm": false },
		{ "name": "relaxed-simd", "explanation": "Enable relaxed-simd instructions.", "llvm": false },
		{ "name": "sign-ext", "explanation": "Enable sign extension operators.", "llvm": false },
		{ "name": "simd128", "explanation": "Enable 128-bit SIMD.", "llvm": false },
		{ "name": "multimemory", "explanation": "Enable multiple memories.", "llvm": true },
		{ "name": "tail-call", "explanation": "Enable tail call instructions.", "llvm": true }
	],
	"riscv64": [
		{ "name": "a", "explanation": "'A' (Atomic Instructions).", "llvm": false },
		{ "name": "c", "explanation": "'C' (Compressed Instructions).", "llvm": false },
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "d", "explanation": "'D' (Double-Precision Floating-Point).", "llvm": false },
		{
			"name": "e",
			"explanation": "Implements RV{32,64}E (provides 16 rather than 32 GPRs).",
			"llvm": false
		},
		{ "name": "f", "explanation": "'F' (Single-Precision Floating-Point).", "llvm": false },
		{ "name": "m", "explanation": "'M' (Integer Multiplication and Division).", "llvm": false },
		{ "name": "relax", "explanation": "Enable Linker relaxation..", "llvm": false },
		{
			"name": "unaligned-scalar-mem",
			"explanation": "Has reasonably performant unaligned loads and stores (both scalar and vector).",
			"llvm": false
		},
		{
			"name": "v",
			"explanation": "'V' (Vector Extension for Application Processors).",
			"llvm": false
		},
		{ "name": "zba", "explanation": "'Zba' (Address Generation Instructions).", "llvm": false },
		{ "name": "zbb", "explanation": "'Zbb' (Basic Bit-Manipulation).", "llvm": false },
		{ "name": "zbc", "explanation": "'Zbc' (Carry-Less Multiplication).", "llvm": false },
		{
			"name": "zbkb",
			"explanation": "'Zbkb' (Bitmanip instructions for Cryptography).",
			"llvm": false
		},
		{
			"name": "zbkc",
			"explanation": "'Zbkc' (Carry-less multiply instructions for Cryptography).",
			"llvm": false
		},
		{ "name": "zbkx", "explanation": "'Zbkx' (Crossbar permutation instructions).", "llvm": false },
		{ "name": "zbs", "explanation": "'Zbs' (Single-Bit Instructions).", "llvm": false },
		{ "name": "zdinx", "explanation": "'Zdinx' (Double in Integer).", "llvm": false },
		{ "name": "zfh", "explanation": "'Zfh' (Half-Precision Floating-Point).", "llvm": false },
		{
			"name": "zfhmin",
			"explanation": "'Zfhmin' (Half-Precision Floating-Point Minimal).",
			"llvm": false
		},
		{ "name": "zfinx", "explanation": "'Zfinx' (Float in Integer).", "llvm": false },
		{ "name": "zhinx", "explanation": "'Zhinx' (Half Float in Integer).", "llvm": false },
		{
			"name": "zhinxmin",
			"explanation": "'Zhinxmin' (Half Float in Integer Minimal).",
			"llvm": false
		},
		{
			"name": "zk",
			"explanation": "'Zk' (Standard scalar cryptography extension).",
			"llvm": false
		},
		{ "name": "zkn", "explanation": "'Zkn' (NIST Algorithm Suite).", "llvm": false },
		{ "name": "zknd", "explanation": "'Zknd' (NIST Suite: AES Decryption).", "llvm": false },
		{ "name": "zkne", "explanation": "'Zkne' (NIST Suite: AES Encryption).", "llvm": false },
		{
			"name": "zknh",
			"explanation": "'Zknh' (NIST Suite: Hash Function Instructions).",
			"llvm": false
		},
		{ "name": "zkr", "explanation": "'Zkr' (Entropy Source Extension).", "llvm": false },
		{ "name": "zks", "explanation": "'Zks' (ShangMi Algorithm Suite).", "llvm": false },
		{
			"name": "zksed",
			"explanation": "'Zksed' (ShangMi Suite: SM4 Block Cipher Instructions).",
			"llvm": false
		},
		{
			"name": "zksh",
			"explanation": "'Zksh' (ShangMi Suite: SM3 Hash Function Instructions).",
			"llvm": false
		},
		{ "name": "zkt", "explanation": "'Zkt' (Data Independent Execution Latency).", "llvm": false },
		{ "name": "32bit", "explanation": "Implements RV32.", "llvm": true },
		{ "name": "64bit", "explanation": "Implements RV64.", "llvm": true },
		{ "name": "auipc-addi-fusion", "explanation": "Enable AUIPC+ADDI macrofusion.", "llvm": true },
		{ "name": "conditional-cmv-fusion", "explanation": "Enable branch+c.mv fusion.", "llvm": true },
		{
			"name": "dlen-factor-2",
			"explanation": "Vector unit DLEN(data path width) is half of VLEN.",
			"llvm": true
		},
		{ "name": "experimental", "explanation": "Experimental intrinsics.", "llvm": true },
		{
			"name": "experimental-zacas",
			"explanation": "'Zacas' (Atomic Compare-And-Swap Instructions).",
			"llvm": true
		},
		{
			"name": "experimental-zcmop",
			"explanation": "'Zcmop' (Compressed May-Be-Operations).",
			"llvm": true
		},
		{
			"name": "experimental-zfbfmin",
			"explanation": "'Zfbfmin' (Scalar BF16 Converts).",
			"llvm": true
		},
		{ "name": "experimental-zicfilp", "explanation": "'Zicfilp' (Landing pad).", "llvm": true },
		{ "name": "experimental-zicfiss", "explanation": "'Zicfiss' (Shadow stack).", "llvm": true },
		{ "name": "experimental-zimop", "explanation": "'Zimop' (May-Be-Operations).", "llvm": true },
		{ "name": "experimental-ztso", "explanation": "'Ztso' (Memory Model", "llvm": true },
		{
			"name": "experimental-zvfbfmin",
			"explanation": "'Zvbfmin' (Vector BF16 Converts).",
			"llvm": true
		},
		{
			"name": "experimental-zvfbfwma",
			"explanation": "'Zvfbfwma' (Vector BF16 widening mul-add).",
			"llvm": true
		},
		{
			"name": "forced-atomics",
			"explanation": "Assume that lock-free native-width atomics are available.",
			"llvm": true
		},
		{ "name": "h", "explanation": "'H' (Hypervisor).", "llvm": true },
		{ "name": "i", "explanation": "'I' (Base Integer Instruction Set).", "llvm": true },
		{ "name": "ld-add-fusion", "explanation": "Enable LD+ADD macrofusion.", "llvm": true },
		{ "name": "lui-addi-fusion", "explanation": "Enable LUI+ADDI macro fusion.", "llvm": true },
		{
			"name": "no-default-unroll",
			"explanation": "Disable default unroll preference..",
			"llvm": true
		},
		{
			"name": "no-optimized-zero-stride-load",
			"explanation": "Hasn't optimized (perform fewer memory operations)zero-stride vector load.",
			"llvm": true
		},
		{ "name": "no-rvc-hints", "explanation": "Disable RVC Hint Instructions..", "llvm": true },
		{ "name": "reserve-x1", "explanation": "Reserve X1.", "llvm": true },
		{ "name": "reserve-x10", "explanation": "Reserve X10.", "llvm": true },
		{ "name": "reserve-x11", "explanation": "Reserve X11.", "llvm": true },
		{ "name": "reserve-x12", "explanation": "Reserve X12.", "llvm": true },
		{ "name": "reserve-x13", "explanation": "Reserve X13.", "llvm": true },
		{ "name": "reserve-x14", "explanation": "Reserve X14.", "llvm": true },
		{ "name": "reserve-x15", "explanation": "Reserve X15.", "llvm": true },
		{ "name": "reserve-x16", "explanation": "Reserve X16.", "llvm": true },
		{ "name": "reserve-x17", "explanation": "Reserve X17.", "llvm": true },
		{ "name": "reserve-x18", "explanation": "Reserve X18.", "llvm": true },
		{ "name": "reserve-x19", "explanation": "Reserve X19.", "llvm": true },
		{ "name": "reserve-x2", "explanation": "Reserve X2.", "llvm": true },
		{ "name": "reserve-x20", "explanation": "Reserve X20.", "llvm": true },
		{ "name": "reserve-x21", "explanation": "Reserve X21.", "llvm": true },
		{ "name": "reserve-x22", "explanation": "Reserve X22.", "llvm": true },
		{ "name": "reserve-x23", "explanation": "Reserve X23.", "llvm": true },
		{ "name": "reserve-x24", "explanation": "Reserve X24.", "llvm": true },
		{ "name": "reserve-x25", "explanation": "Reserve X25.", "llvm": true },
		{ "name": "reserve-x26", "explanation": "Reserve X26.", "llvm": true },
		{ "name": "reserve-x27", "explanation": "Reserve X27.", "llvm": true },
		{ "name": "reserve-x28", "explanation": "Reserve X28.", "llvm": true },
		{ "name": "reserve-x29", "explanation": "Reserve X29.", "llvm": true },
		{ "name": "reserve-x3", "explanation": "Reserve X3.", "llvm": true },
		{ "name": "reserve-x30", "explanation": "Reserve X30.", "llvm": true },
		{ "name": "reserve-x31", "explanation": "Reserve X31.", "llvm": true },
		{ "name": "reserve-x4", "explanation": "Reserve X4.", "llvm": true },
		{ "name": "reserve-x5", "explanation": "Reserve X5.", "llvm": true },
		{ "name": "reserve-x6", "explanation": "Reserve X6.", "llvm": true },
		{ "name": "reserve-x7", "explanation": "Reserve X7.", "llvm": true },
		{ "name": "reserve-x8", "explanation": "Reserve X8.", "llvm": true },
		{ "name": "reserve-x9", "explanation": "Reserve X9.", "llvm": true },
		{ "name": "save-restore", "explanation": "Enable save/restore..", "llvm": true },
		{
			"name": "seq-cst-trailing-fence",
			"explanation": "Enable trailing fence for seq-cst store..",
			"llvm": true
		},
		{
			"name": "shifted-zextw-fusion",
			"explanation": "Enable SLLI+SRLI to be fused when computing (shifted) word zero extension.",
			"llvm": true
		},
		{
			"name": "short-forward-branch-opt",
			"explanation": "Enable short forward branch optimization.",
			"llvm": true
		},
		{ "name": "sifive7", "explanation": "SiFive 7-Series processors.", "llvm": true },
		{
			"name": "smaia",
			"explanation": "'Smaia' (Advanced Interrupt Architecture Machine Level).",
			"llvm": true
		},
		{
			"name": "smepmp",
			"explanation": "'Smepmp' (Enhanced Physical Memory Protection).",
			"llvm": true
		},
		{
			"name": "ssaia",
			"explanation": "'Ssaia' (Advanced Interrupt Architecture Supervisor Level).",
			"llvm": true
		},
		{
			"name": "svinval",
			"explanation": "'Svinval' (Fine-Grained Address-Translation Cache Invalidation).",
			"llvm": true
		},
		{ "name": "svnapot", "explanation": "'Svnapot' (NAPOT Translation Contiguity).", "llvm": true },
		{ "name": "svpbmt", "explanation": "'Svpbmt' (Page-Based Memory Types).", "llvm": true },
		{
			"name": "tagged-globals",
			"explanation": "Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits.",
			"llvm": true
		},
		{
			"name": "unaligned-scalar-mem",
			"explanation": "Has reasonably performant unaligned scalar loads and stores.",
			"llvm": true
		},
		{
			"name": "use-postra-scheduler",
			"explanation": "Schedule again after register allocation.",
			"llvm": true
		},
		{ "name": "ventana-veyron", "explanation": "Ventana Veyron-Series processors.", "llvm": true },
		{ "name": "xcvalu", "explanation": "'XCValu' (CORE-V ALU Operations).", "llvm": true },
		{ "name": "xcvbi", "explanation": "'XCVbi' (CORE-V Immediate Branching).", "llvm": true },
		{
			"name": "xcvbitmanip",
			"explanation": "'XCVbitmanip' (CORE-V Bit Manipulation).",
			"llvm": true
		},
		{ "name": "xcvelw", "explanation": "'XCVelw' (CORE-V Event Load Word).", "llvm": true },
		{ "name": "xcvmac", "explanation": "'XCVmac' (CORE-V Multiply-Accumulate).", "llvm": true },
		{
			"name": "xcvmem",
			"explanation": "'XCVmem' (CORE-V Post-incrementing Load & Store).",
			"llvm": true
		},
		{ "name": "xcvsimd", "explanation": "'XCVsimd' (CORE-V SIMD ALU).", "llvm": true },
		{
			"name": "xsfvcp",
			"explanation": "'XSfvcp' (SiFive Custom Vector Coprocessor Interface Instructions).",
			"llvm": true
		},
		{
			"name": "xsfvfnrclipxfqf",
			"explanation": "'XSfvfnrclipxfqf' (SiFive FP32-to-int8 Ranged Clip Instructions).",
			"llvm": true
		},
		{
			"name": "xsfvfwmaccqqq",
			"explanation": "'XSfvfwmaccqqq' (SiFive Matrix Multiply Accumulate Instruction and 4-by-4)).",
			"llvm": true
		},
		{
			"name": "xsfvqmaccdod",
			"explanation": "'XSfvqmaccdod' (SiFive Int8 Matrix Multiplication Instructions (2-by-8 and 8-by-2)).",
			"llvm": true
		},
		{
			"name": "xsfvqmaccqoq",
			"explanation": "'XSfvqmaccqoq' (SiFive Int8 Matrix Multiplication Instructions (4-by-8 and 8-by-4)).",
			"llvm": true
		},
		{
			"name": "xtheadba",
			"explanation": "'xtheadba' (T-Head address calculation instructions).",
			"llvm": true
		},
		{
			"name": "xtheadbb",
			"explanation": "'xtheadbb' (T-Head basic bit-manipulation instructions).",
			"llvm": true
		},
		{
			"name": "xtheadbs",
			"explanation": "'xtheadbs' (T-Head single-bit instructions).",
			"llvm": true
		},
		{
			"name": "xtheadcmo",
			"explanation": "'xtheadcmo' (T-Head cache management instructions).",
			"llvm": true
		},
		{
			"name": "xtheadcondmov",
			"explanation": "'xtheadcondmov' (T-Head conditional move instructions).",
			"llvm": true
		},
		{
			"name": "xtheadfmemidx",
			"explanation": "'xtheadfmemidx' (T-Head FP Indexed Memory Operations).",
			"llvm": true
		},
		{
			"name": "xtheadmac",
			"explanation": "'xtheadmac' (T-Head Multiply-Accumulate Instructions).",
			"llvm": true
		},
		{
			"name": "xtheadmemidx",
			"explanation": "'xtheadmemidx' (T-Head Indexed Memory Operations).",
			"llvm": true
		},
		{
			"name": "xtheadmempair",
			"explanation": "'xtheadmempair' (T-Head two-GPR Memory Operations).",
			"llvm": true
		},
		{
			"name": "xtheadsync",
			"explanation": "'xtheadsync' (T-Head multicore synchronization instructions).",
			"llvm": true
		},
		{
			"name": "xtheadvdot",
			"explanation": "'xtheadvdot' (T-Head Vector Extensions for Dot).",
			"llvm": true
		},
		{
			"name": "xventanacondops",
			"explanation": "'XVentanaCondOps' (Ventana Conditional Ops).",
			"llvm": true
		},
		{
			"name": "za128rs",
			"explanation": "'Za128rs' (Reservation Set Size of at Most 128 Bytes).",
			"llvm": true
		},
		{
			"name": "za64rs",
			"explanation": "'Za64rs' (Reservation Set Size of at Most 64 Bytes).",
			"llvm": true
		},
		{ "name": "zawrs", "explanation": "'Zawrs' (Wait on Reservation Set).", "llvm": true },
		{
			"name": "zca",
			"explanation": "'Zca' (part of the C extension, excluding compressed floating point loads/stores).",
			"llvm": true
		},
		{
			"name": "zcb",
			"explanation": "'Zcb' (Compressed basic bit manipulation instructions).",
			"llvm": true
		},
		{
			"name": "zcd",
			"explanation": "'Zcd' (Compressed Double-Precision Floating-Point Instructions).",
			"llvm": true
		},
		{
			"name": "zce",
			"explanation": "'Zce' (Compressed extensions for microcontrollers).",
			"llvm": true
		},
		{
			"name": "zcf",
			"explanation": "'Zcf' (Compressed Single-Precision Floating-Point Instructions).",
			"llvm": true
		},
		{
			"name": "zcmp",
			"explanation": "'Zcmp' (sequenced instuctions for code-size reduction).",
			"llvm": true
		},
		{
			"name": "zcmt",
			"explanation": "'Zcmt' (table jump instuctions for code-size reduction).",
			"llvm": true
		},
		{
			"name": "zexth-fusion",
			"explanation": "Enable SLLI+SRLI to be fused to zero extension of halfword.",
			"llvm": true
		},
		{
			"name": "zextw-fusion",
			"explanation": "Enable SLLI+SRLI to be fused to zero extension of word.",
			"llvm": true
		},
		{ "name": "zfa", "explanation": "'Zfa' (Additional Floating-Point).", "llvm": true },
		{ "name": "zic64b", "explanation": "'Zic64b' (Cache Block Size Is 64 Bytes).", "llvm": true },
		{
			"name": "zicbom",
			"explanation": "'Zicbom' (Cache-Block Management Instructions).",
			"llvm": true
		},
		{
			"name": "zicbop",
			"explanation": "'Zicbop' (Cache-Block Prefetch Instructions).",
			"llvm": true
		},
		{ "name": "zicboz", "explanation": "'Zicboz' (Cache-Block Zero Instructions).", "llvm": true },
		{
			"name": "ziccamoa",
			"explanation": "'Ziccamoa' (Main Memory Supports All Atomics in A).",
			"llvm": true
		},
		{
			"name": "ziccif",
			"explanation": "'Ziccif' (Main Memory Supports Instruction Fetch with Atomicity Requirement).",
			"llvm": true
		},
		{
			"name": "zicclsm",
			"explanation": "'Zicclsm' (Main Memory Supports Misaligned Loads/Stores).",
			"llvm": true
		},
		{
			"name": "ziccrse",
			"explanation": "'Ziccrse' (Main Memory Supports Forward Progress on LR/SC Sequences).",
			"llvm": true
		},
		{ "name": "zicntr", "explanation": "'Zicntr' (Base Counters and Timers).", "llvm": true },
		{ "name": "zicond", "explanation": "'Zicond' (Integer Conditional Operations).", "llvm": true },
		{ "name": "zicsr", "explanation": "'zicsr' (CSRs).", "llvm": true },
		{ "name": "zifencei", "explanation": "'Zifencei' (fence.i).", "llvm": true },
		{
			"name": "zihintntl",
			"explanation": "'Zihintntl' (Non-Temporal Locality Hints).",
			"llvm": true
		},
		{ "name": "zihintpause", "explanation": "'Zihintpause' (Pause Hint).", "llvm": true },
		{ "name": "zihpm", "explanation": "'Zihpm' (Hardware Performance Counters).", "llvm": true },
		{ "name": "zmmul", "explanation": "'Zmmul' (Integer Multiplication).", "llvm": true },
		{
			"name": "zvbb",
			"explanation": "'Zvbb' (Vector basic bit-manipulation instructions).",
			"llvm": true
		},
		{ "name": "zvbc", "explanation": "'Zvbc' (Vector Carryless Multiplication).", "llvm": true },
		{
			"name": "zve32f",
			"explanation": "'Zve32f' (Vector Extensions for Embedded Processors with maximal 32 EEW and F extension).",
			"llvm": true
		},
		{
			"name": "zve32x",
			"explanation": "'Zve32x' (Vector Extensions for Embedded Processors with maximal 32 EEW).",
			"llvm": true
		},
		{
			"name": "zve64d",
			"explanation": "'Zve64d' (Vector Extensions for Embedded Processors with maximal 64 EEW, F and D extension).",
			"llvm": true
		},
		{
			"name": "zve64f",
			"explanation": "'Zve64f' (Vector Extensions for Embedded Processors with maximal 64 EEW and F extension).",
			"llvm": true
		},
		{
			"name": "zve64x",
			"explanation": "'Zve64x' (Vector Extensions for Embedded Processors with maximal 64 EEW).",
			"llvm": true
		},
		{
			"name": "zvfh",
			"explanation": "'Zvfh' (Vector Half-Precision Floating-Point).",
			"llvm": true
		},
		{
			"name": "zvfhmin",
			"explanation": "'Zvfhmin' (Vector Half-Precision Floating-Point Minimal).",
			"llvm": true
		},
		{
			"name": "zvkb",
			"explanation": "'Zvkb' (Vector Bit-manipulation used in Cryptography).",
			"llvm": true
		},
		{
			"name": "zvkg",
			"explanation": "'Zvkg' (Vector GCM instructions for Cryptography).",
			"llvm": true
		},
		{
			"name": "zvkn",
			"explanation": "'Zvkn' (shorthand for 'Zvkned', 'Zvknhb', 'Zvkb', and 'Zvkt').",
			"llvm": true
		},
		{ "name": "zvknc", "explanation": "'Zvknc' (shorthand for 'Zvknc' and 'Zvbc').", "llvm": true },
		{
			"name": "zvkned",
			"explanation": "'Zvkned' (Vector AES Encryption & Decryption (Single Round)).",
			"llvm": true
		},
		{ "name": "zvkng", "explanation": "'zvkng' (shorthand for 'Zvkn' and 'Zvkg').", "llvm": true },
		{ "name": "zvknha", "explanation": "'Zvknha' (Vector SHA-2 (SHA-256 only)).", "llvm": true },
		{
			"name": "zvknhb",
			"explanation": "'Zvknhb' (Vector SHA-2 (SHA-256 and SHA-512)).",
			"llvm": true
		},
		{
			"name": "zvks",
			"explanation": "'Zvks' (shorthand for 'Zvksed', 'Zvksh', 'Zvkb', and 'Zvkt').",
			"llvm": true
		},
		{ "name": "zvksc", "explanation": "'Zvksc' (shorthand for 'Zvks' and 'Zvbc').", "llvm": true },
		{ "name": "zvksed", "explanation": "'Zvksed' (SM4 Block Cipher Instructions).", "llvm": true },
		{ "name": "zvksg", "explanation": "'Zvksg' (shorthand for 'Zvks' and 'Zvkg').", "llvm": true },
		{ "name": "zvksh", "explanation": "'Zvksh' (SM3 Hash Function Instructions).", "llvm": true },
		{
			"name": "zvkt",
			"explanation": "'Zvkt' (Vector Data-Independent Execution Latency).",
			"llvm": true
		},
		{ "name": "zvl1024b", "explanation": "'Zvl' (Minimum Vector Length) 1024.", "llvm": true },
		{ "name": "zvl128b", "explanation": "'Zvl' (Minimum Vector Length) 128.", "llvm": true },
		{ "name": "zvl16384b", "explanation": "'Zvl' (Minimum Vector Length) 16384.", "llvm": true },
		{ "name": "zvl2048b", "explanation": "'Zvl' (Minimum Vector Length) 2048.", "llvm": true },
		{ "name": "zvl256b", "explanation": "'Zvl' (Minimum Vector Length) 256.", "llvm": true },
		{ "name": "zvl32768b", "explanation": "'Zvl' (Minimum Vector Length) 32768.", "llvm": true },
		{ "name": "zvl32b", "explanation": "'Zvl' (Minimum Vector Length) 32.", "llvm": true },
		{ "name": "zvl4096b", "explanation": "'Zvl' (Minimum Vector Length) 4096.", "llvm": true },
		{ "name": "zvl512b", "explanation": "'Zvl' (Minimum Vector Length) 512.", "llvm": true },
		{ "name": "zvl64b", "explanation": "'Zvl' (Minimum Vector Length) 64.", "llvm": true },
		{ "name": "zvl65536b", "explanation": "'Zvl' (Minimum Vector Length) 65536.", "llvm": true },
		{ "name": "zvl8192b", "explanation": "'Zvl' (Minimum Vector Length) 8192.", "llvm": true }
	],
	"sparc": [
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{
			"name": "deprecated-v8",
			"explanation": "Enable deprecated V8 instructions in V9 mode.",
			"llvm": true
		},
		{
			"name": "detectroundchange",
			"explanation": "LEON3 erratum detection: Detects any rounding mode change request: use only the round-to-nearest rounding mode.",
			"llvm": true
		},
		{
			"name": "fixallfdivsqrt",
			"explanation": "LEON erratum fix: Fix FDIVS/FDIVD/FSQRTS/FSQRTD instructions with NOPs and floating-point store.",
			"llvm": true
		},
		{
			"name": "hard-quad-float",
			"explanation": "Enable quad-word floating point instructions.",
			"llvm": true
		},
		{
			"name": "hasleoncasa",
			"explanation": "Enable CASA instruction for LEON3 and LEON4 processors.",
			"llvm": true
		},
		{
			"name": "hasumacsmac",
			"explanation": "Enable UMAC and SMAC for LEON3 and LEON4 processors.",
			"llvm": true
		},
		{
			"name": "insertnopload",
			"explanation": "LEON3 erratum fix: Insert a NOP instruction after every single-cycle load instruction when the next instruction is another load/store instruction.",
			"llvm": true
		},
		{ "name": "leon", "explanation": "Enable LEON extensions.", "llvm": true },
		{
			"name": "leoncyclecounter",
			"explanation": "Use the Leon cycle counter register.",
			"llvm": true
		},
		{ "name": "leonpwrpsr", "explanation": "Enable the PWRPSR instruction.", "llvm": true },
		{ "name": "no-fmuls", "explanation": "Disable the fmuls instruction..", "llvm": true },
		{ "name": "no-fsmuld", "explanation": "Disable the fsmuld instruction..", "llvm": true },
		{ "name": "popc", "explanation": "Use the popc (population count) instruction.", "llvm": true },
		{
			"name": "reserve-g1",
			"explanation": "Reserve G1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g2",
			"explanation": "Reserve G2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g3",
			"explanation": "Reserve G3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g4",
			"explanation": "Reserve G4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g5",
			"explanation": "Reserve G5, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g6",
			"explanation": "Reserve G6, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-g7",
			"explanation": "Reserve G7, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i0",
			"explanation": "Reserve I0, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i1",
			"explanation": "Reserve I1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i2",
			"explanation": "Reserve I2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i3",
			"explanation": "Reserve I3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i4",
			"explanation": "Reserve I4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-i5",
			"explanation": "Reserve I5, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l0",
			"explanation": "Reserve L0, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l1",
			"explanation": "Reserve L1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l2",
			"explanation": "Reserve L2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l3",
			"explanation": "Reserve L3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l4",
			"explanation": "Reserve L4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l5",
			"explanation": "Reserve L5, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l6",
			"explanation": "Reserve L6, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-l7",
			"explanation": "Reserve L7, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o0",
			"explanation": "Reserve O0, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o1",
			"explanation": "Reserve O1, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o2",
			"explanation": "Reserve O2, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o3",
			"explanation": "Reserve O3, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o4",
			"explanation": "Reserve O4, making it unavailable as a GPR.",
			"llvm": true
		},
		{
			"name": "reserve-o5",
			"explanation": "Reserve O5, making it unavailable as a GPR.",
			"llvm": true
		},
		{ "name": "slow-rdpc", "explanation": "rd %pc, %XX is slow.", "llvm": true },
		{
			"name": "soft-float",
			"explanation": "Use software emulation for floating point.",
			"llvm": true
		},
		{
			"name": "soft-mul-div",
			"explanation": "Use software emulation for integer multiply and divide.",
			"llvm": true
		},
		{ "name": "v9", "explanation": "Enable SPARC-V9 instructions.", "llvm": true },
		{
			"name": "vis",
			"explanation": "Enable UltraSPARC Visual Instruction Set extensions.",
			"llvm": true
		},
		{ "name": "vis2", "explanation": "Enable Visual Instruction Set extensions II.", "llvm": true },
		{ "name": "vis3", "explanation": "Enable Visual Instruction Set extensions III.", "llvm": true }
	],
	"arm": [
		{ "name": "aclass", "explanation": "Is application profile ('A' series).", "llvm": false },
		{ "name": "aes", "explanation": "Enable AES support.", "llvm": false },
		{ "name": "crc", "explanation": "Enable support for CRC instructions.", "llvm": false },
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "d32", "explanation": "Extend FP to 32 double registers.", "llvm": false },
		{
			"name": "dotprod",
			"explanation": "Enable support for dot product instructions.",
			"llvm": false
		},
		{
			"name": "dsp",
			"explanation": "Supports DSP instructions in ARM and/or Thumb2.",
			"llvm": false
		},
		{ "name": "fp-armv8", "explanation": "Enable ARMv8 FP.", "llvm": false },
		{ "name": "i8mm", "explanation": "Enable Matrix Multiply Int8 Extension.", "llvm": false },
		{ "name": "mclass", "explanation": "Is microcontroller profile ('M' series).", "llvm": false },
		{ "name": "neon", "explanation": "Enable NEON instructions.", "llvm": false },
		{ "name": "rclass", "explanation": "Is realtime profile ('R' series).", "llvm": false },
		{ "name": "sha2", "explanation": "Enable SHA1 and SHA256 support.", "llvm": false },
		{ "name": "thumb-mode", "explanation": "Thumb mode.", "llvm": false },
		{ "name": "thumb2", "explanation": "Enable Thumb2 instructions.", "llvm": false },
		{
			"name": "trustzone",
			"explanation": "Enable support for TrustZone security extensions.",
			"llvm": false
		},
		{
			"name": "v5te",
			"explanation": "Support ARM v5TE, v5TEj, and v5TExp instructions.",
			"llvm": false
		},
		{ "name": "v6", "explanation": "Support ARM v6 instructions.", "llvm": false },
		{ "name": "v6k", "explanation": "Support ARM v6k instructions.", "llvm": false },
		{ "name": "v6t2", "explanation": "Support ARM v6t2 instructions.", "llvm": false },
		{ "name": "v7", "explanation": "Support ARM v7 instructions.", "llvm": false },
		{ "name": "v8", "explanation": "Support ARM v8 instructions.", "llvm": false },
		{ "name": "vfp2", "explanation": "Enable VFP2 instructions.", "llvm": false },
		{ "name": "vfp3", "explanation": "Enable VFP3 instructions.", "llvm": false },
		{ "name": "vfp4", "explanation": "Enable VFP4 instructions.", "llvm": false },
		{
			"name": "virtualization",
			"explanation": "Supports Virtualization extension.",
			"llvm": false
		},
		{ "name": "32bit", "explanation": "Prefer 32-bit Thumb instrs.", "llvm": true },
		{
			"name": "8msecext",
			"explanation": "Enable support for ARMv8-M Security Extensions.",
			"llvm": true
		},
		{ "name": "a12", "explanation": "Cortex-A12 ARM processors.", "llvm": true },
		{ "name": "a15", "explanation": "Cortex-A15 ARM processors.", "llvm": true },
		{ "name": "a17", "explanation": "Cortex-A17 ARM processors.", "llvm": true },
		{ "name": "a32", "explanation": "Cortex-A32 ARM processors.", "llvm": true },
		{ "name": "a35", "explanation": "Cortex-A35 ARM processors.", "llvm": true },
		{ "name": "a5", "explanation": "Cortex-A5 ARM processors.", "llvm": true },
		{ "name": "a53", "explanation": "Cortex-A53 ARM processors.", "llvm": true },
		{ "name": "a55", "explanation": "Cortex-A55 ARM processors.", "llvm": true },
		{ "name": "a57", "explanation": "Cortex-A57 ARM processors.", "llvm": true },
		{ "name": "a7", "explanation": "Cortex-A7 ARM processors.", "llvm": true },
		{ "name": "a72", "explanation": "Cortex-A72 ARM processors.", "llvm": true },
		{ "name": "a73", "explanation": "Cortex-A73 ARM processors.", "llvm": true },
		{ "name": "a75", "explanation": "Cortex-A75 ARM processors.", "llvm": true },
		{ "name": "a76", "explanation": "Cortex-A76 ARM processors.", "llvm": true },
		{ "name": "a77", "explanation": "Cortex-A77 ARM processors.", "llvm": true },
		{ "name": "a78c", "explanation": "Cortex-A78C ARM processors.", "llvm": true },
		{ "name": "a8", "explanation": "Cortex-A8 ARM processors.", "llvm": true },
		{ "name": "a9", "explanation": "Cortex-A9 ARM processors.", "llvm": true },
		{
			"name": "aapcs-frame-chain",
			"explanation": "Create an AAPCS compliant frame chain.",
			"llvm": true
		},
		{
			"name": "aapcs-frame-chain-leaf",
			"explanation": "Create an AAPCS compliant frame chain for leaf functions.",
			"llvm": true
		},
		{
			"name": "acquire-release",
			"explanation": "Has v8 acquire/release (lda/ldaex  etc) instructions.",
			"llvm": true
		},
		{ "name": "armv4", "explanation": "ARMv4 architecture.", "llvm": true },
		{ "name": "armv4t", "explanation": "ARMv4t architecture.", "llvm": true },
		{ "name": "armv5t", "explanation": "ARMv5t architecture.", "llvm": true },
		{ "name": "armv5te", "explanation": "ARMv5te architecture.", "llvm": true },
		{ "name": "armv5tej", "explanation": "ARMv5tej architecture.", "llvm": true },
		{ "name": "armv6", "explanation": "ARMv6 architecture.", "llvm": true },
		{ "name": "armv6-m", "explanation": "ARMv6m architecture.", "llvm": true },
		{ "name": "armv6j", "explanation": "ARMv7a architecture.", "llvm": true },
		{ "name": "armv6k", "explanation": "ARMv6k architecture.", "llvm": true },
		{ "name": "armv6kz", "explanation": "ARMv6kz architecture.", "llvm": true },
		{ "name": "armv6s-m", "explanation": "ARMv6sm architecture.", "llvm": true },
		{ "name": "armv6t2", "explanation": "ARMv6t2 architecture.", "llvm": true },
		{ "name": "armv7-a", "explanation": "ARMv7a architecture.", "llvm": true },
		{ "name": "armv7-m", "explanation": "ARMv7m architecture.", "llvm": true },
		{ "name": "armv7-r", "explanation": "ARMv7r architecture.", "llvm": true },
		{ "name": "armv7e-m", "explanation": "ARMv7em architecture.", "llvm": true },
		{ "name": "armv7k", "explanation": "ARMv7a architecture.", "llvm": true },
		{ "name": "armv7s", "explanation": "ARMv7a architecture.", "llvm": true },
		{ "name": "armv7ve", "explanation": "ARMv7ve architecture.", "llvm": true },
		{ "name": "armv8-a", "explanation": "ARMv8a architecture.", "llvm": true },
		{ "name": "armv8-m.base", "explanation": "ARMv8mBaseline architecture.", "llvm": true },
		{ "name": "armv8-m.main", "explanation": "ARMv8mMainline architecture.", "llvm": true },
		{ "name": "armv8-r", "explanation": "ARMv8r architecture.", "llvm": true },
		{ "name": "armv8.1-a", "explanation": "ARMv81a architecture.", "llvm": true },
		{ "name": "armv8.1-m.main", "explanation": "ARMv81mMainline architecture.", "llvm": true },
		{ "name": "armv8.2-a", "explanation": "ARMv82a architecture.", "llvm": true },
		{ "name": "armv8.3-a", "explanation": "ARMv83a architecture.", "llvm": true },
		{ "name": "armv8.4-a", "explanation": "ARMv84a architecture.", "llvm": true },
		{ "name": "armv8.5-a", "explanation": "ARMv85a architecture.", "llvm": true },
		{ "name": "armv8.6-a", "explanation": "ARMv86a architecture.", "llvm": true },
		{ "name": "armv8.7-a", "explanation": "ARMv87a architecture.", "llvm": true },
		{ "name": "armv8.8-a", "explanation": "ARMv88a architecture.", "llvm": true },
		{ "name": "armv8.9-a", "explanation": "ARMv89a architecture.", "llvm": true },
		{ "name": "armv9-a", "explanation": "ARMv9a architecture.", "llvm": true },
		{ "name": "armv9.1-a", "explanation": "ARMv91a architecture.", "llvm": true },
		{ "name": "armv9.2-a", "explanation": "ARMv92a architecture.", "llvm": true },
		{ "name": "armv9.3-a", "explanation": "ARMv93a architecture.", "llvm": true },
		{ "name": "armv9.4-a", "explanation": "ARMv94a architecture.", "llvm": true },
		{ "name": "armv9.5-a", "explanation": "ARMv95a architecture.", "llvm": true },
		{
			"name": "atomics-32",
			"explanation": "Assume that lock-free 32-bit atomics are available.",
			"llvm": true
		},
		{
			"name": "avoid-movs-shop",
			"explanation": "Avoid movs instructions with shifter operand.",
			"llvm": true
		},
		{
			"name": "avoid-partial-cpsr",
			"explanation": "Avoid CPSR partial update for OOO execution.",
			"llvm": true
		},
		{ "name": "bf16", "explanation": "Enable support for BFloat16 instructions.", "llvm": true },
		{
			"name": "big-endian-instructions",
			"explanation": "Expect instructions to be stored big-endian..",
			"llvm": true
		},
		{ "name": "cde", "explanation": "Support CDE instructions.", "llvm": true },
		{ "name": "cdecp0", "explanation": "Coprocessor 0 ISA is CDEv1.", "llvm": true },
		{ "name": "cdecp1", "explanation": "Coprocessor 1 ISA is CDEv1.", "llvm": true },
		{ "name": "cdecp2", "explanation": "Coprocessor 2 ISA is CDEv1.", "llvm": true },
		{ "name": "cdecp3", "explanation": "Coprocessor 3 ISA is CDEv1.", "llvm": true },
		{ "name": "cdecp4", "explanation": "Coprocessor 4 ISA is CDEv1.", "llvm": true },
		{ "name": "cdecp5", "explanation": "Coprocessor 5 ISA is CDEv1.", "llvm": true },
		{ "name": "cdecp6", "explanation": "Coprocessor 6 ISA is CDEv1.", "llvm": true },
		{ "name": "cdecp7", "explanation": "Coprocessor 7 ISA is CDEv1.", "llvm": true },
		{
			"name": "cheap-predicable-cpsr",
			"explanation": "Disable +1 predication cost for instructions updating CPSR.",
			"llvm": true
		},
		{ "name": "clrbhb", "explanation": "Enable Clear BHB instruction.", "llvm": true },
		{ "name": "cortex-a710", "explanation": "Cortex-A710 ARM processors.", "llvm": true },
		{ "name": "cortex-a78", "explanation": "Cortex-A78 ARM processors.", "llvm": true },
		{ "name": "cortex-x1", "explanation": "Cortex-X1 ARM processors.", "llvm": true },
		{ "name": "cortex-x1c", "explanation": "Cortex-X1C ARM processors.", "llvm": true },
		{
			"name": "crypto",
			"explanation": "Enable support for Cryptography extensions.",
			"llvm": true
		},
		{ "name": "db", "explanation": "Has data barrier (dmb/dsb) instructions.", "llvm": true },
		{ "name": "dfb", "explanation": "Has full data barrier (dfb) instruction.", "llvm": true },
		{
			"name": "disable-postra-scheduler",
			"explanation": "Don't schedule again after register allocation.",
			"llvm": true
		},
		{ "name": "dont-widen-vmovs", "explanation": "Don't widen VMOVS to VMOVD.", "llvm": true },
		{
			"name": "execute-only",
			"explanation": "Enable the generation of execute only code..",
			"llvm": true
		},
		{
			"name": "expand-fp-mlx",
			"explanation": "Expand VFP/NEON MLA/MLS instructions.",
			"llvm": true
		},
		{ "name": "exynos", "explanation": "Samsung Exynos processors.", "llvm": true },
		{
			"name": "fix-cmse-cve-2021-35465",
			"explanation": "Mitigate against the cve-2021-35465 security vulnurability.",
			"llvm": true
		},
		{
			"name": "fix-cortex-a57-aes-1742098",
			"explanation": "Work around Cortex-A57 Erratum 1742098 / Cortex-A72 Erratum 1655431 (AES).",
			"llvm": true
		},
		{
			"name": "fp-armv8d16",
			"explanation": "Enable ARMv8 FP with only 16 d-registers.",
			"llvm": true
		},
		{
			"name": "fp-armv8d16sp",
			"explanation": "Enable ARMv8 FP with only 16 d-registers and no double precision.",
			"llvm": true
		},
		{
			"name": "fp-armv8sp",
			"explanation": "Enable ARMv8 FP with no double precision.",
			"llvm": true
		},
		{ "name": "fp16", "explanation": "Enable half-precision floating point.", "llvm": true },
		{
			"name": "fp16fml",
			"explanation": "Enable full half-precision floating point fml instructions.",
			"llvm": true
		},
		{
			"name": "fp64",
			"explanation": "Floating point unit supports double precision.",
			"llvm": true
		},
		{
			"name": "fpao",
			"explanation": "Enable fast computation of positive address offsets.",
			"llvm": true
		},
		{ "name": "fpregs", "explanation": "Enable FP registers.", "llvm": true },
		{ "name": "fpregs16", "explanation": "Enable 16-bit FP registers.", "llvm": true },
		{ "name": "fpregs64", "explanation": "Enable 64-bit FP registers.", "llvm": true },
		{
			"name": "fullfp16",
			"explanation": "Enable full half-precision floating point.",
			"llvm": true
		},
		{ "name": "fuse-aes", "explanation": "CPU fuses AES crypto operations.", "llvm": true },
		{
			"name": "fuse-literals",
			"explanation": "CPU fuses literal generation operations.",
			"llvm": true
		},
		{
			"name": "harden-sls-blr",
			"explanation": "Harden against straight line speculation across indirect calls.",
			"llvm": true
		},
		{
			"name": "harden-sls-nocomdat",
			"explanation": "Generate thunk code for SLS mitigation in the normal text section.",
			"llvm": true
		},
		{
			"name": "harden-sls-retbr",
			"explanation": "Harden against straight line speculation across RETurn and BranchRegister instructions.",
			"llvm": true
		},
		{ "name": "hwdiv", "explanation": "Enable divide instructions in Thumb.", "llvm": true },
		{ "name": "hwdiv-arm", "explanation": "Enable divide instructions in ARM mode.", "llvm": true },
		{ "name": "iwmmxt", "explanation": "ARMv5te architecture.", "llvm": true },
		{ "name": "iwmmxt2", "explanation": "ARMv5te architecture.", "llvm": true },
		{ "name": "krait", "explanation": "Qualcomm Krait processors.", "llvm": true },
		{ "name": "kryo", "explanation": "Qualcomm Kryo processors.", "llvm": true },
		{ "name": "lob", "explanation": "Enable Low Overhead Branch extensions.", "llvm": true },
		{
			"name": "long-calls",
			"explanation": "Generate calls via indirect call instructions.",
			"llvm": true
		},
		{ "name": "loop-align", "explanation": "Prefer 32-bit alignment for loops.", "llvm": true },
		{ "name": "m3", "explanation": "Cortex-M3 ARM processors.", "llvm": true },
		{ "name": "m7", "explanation": "Cortex-M7 ARM processors.", "llvm": true },
		{ "name": "mp", "explanation": "Supports Multiprocessing extension.", "llvm": true },
		{ "name": "muxed-units", "explanation": "Has muxed AGU and NEON/FPU.", "llvm": true },
		{
			"name": "mve",
			"explanation": "Support M-Class Vector Extension with integer ops.",
			"llvm": true
		},
		{
			"name": "mve.fp",
			"explanation": "Support M-Class Vector Extension with integer and floating ops.",
			"llvm": true
		},
		{
			"name": "mve1beat",
			"explanation": "Model MVE instructions as a 1 beat per tick architecture.",
			"llvm": true
		},
		{
			"name": "mve2beat",
			"explanation": "Model MVE instructions as a 2 beats per tick architecture.",
			"llvm": true
		},
		{
			"name": "mve4beat",
			"explanation": "Model MVE instructions as a 4 beats per tick architecture.",
			"llvm": true
		},
		{ "name": "nacl-trap", "explanation": "NaCl trap.", "llvm": true },
		{
			"name": "neon-fpmovs",
			"explanation": "Convert VMOVSR, VMOVRS, VMOVS to NEON.",
			"llvm": true
		},
		{ "name": "neonfp", "explanation": "Use NEON for single precision FP.", "llvm": true },
		{ "name": "neoverse-v1", "explanation": "Neoverse-V1 ARM processors.", "llvm": true },
		{ "name": "no-branch-predictor", "explanation": "Has no branch predictor.", "llvm": true },
		{
			"name": "no-bti-at-return-twice",
			"explanation": "Don't place a BTI instruction after a return-twice.",
			"llvm": true
		},
		{
			"name": "no-movt",
			"explanation": "Don't use movt/movw pairs for 32-bit imms.",
			"llvm": true
		},
		{
			"name": "no-neg-immediates",
			"explanation": "Convert immediates and instructions to their negated or complemented equivalent when the immediate does not fit in the encoding..",
			"llvm": true
		},
		{ "name": "noarm", "explanation": "Does not support ARM mode execution.", "llvm": true },
		{
			"name": "nonpipelined-vfp",
			"explanation": "VFP instructions are not pipelined.",
			"llvm": true
		},
		{
			"name": "pacbti",
			"explanation": "Enable Pointer Authentication and Branch Target Identification.",
			"llvm": true
		},
		{
			"name": "perfmon",
			"explanation": "Enable support for Performance Monitor extensions.",
			"llvm": true
		},
		{ "name": "prefer-ishst", "explanation": "Prefer ISHST barriers.", "llvm": true },
		{ "name": "prefer-vmovsr", "explanation": "Prefer VMOVSR.", "llvm": true },
		{ "name": "prof-unpr", "explanation": "Is profitable to unpredicate.", "llvm": true },
		{ "name": "r4", "explanation": "Cortex-R4 ARM processors.", "llvm": true },
		{ "name": "r5", "explanation": "Cortex-R5 ARM processors.", "llvm": true },
		{ "name": "r52", "explanation": "Cortex-R52 ARM processors.", "llvm": true },
		{ "name": "r7", "explanation": "Cortex-R7 ARM processors.", "llvm": true },
		{
			"name": "ras",
			"explanation": "Enable Reliability, Availability and Serviceability extensions.",
			"llvm": true
		},
		{
			"name": "read-tp-tpidrprw",
			"explanation": "Reading thread pointer from TPIDRPRW register.",
			"llvm": true
		},
		{
			"name": "read-tp-tpidruro",
			"explanation": "Reading thread pointer from TPIDRURO register.",
			"llvm": true
		},
		{
			"name": "read-tp-tpidrurw",
			"explanation": "Reading thread pointer from TPIDRURW register.",
			"llvm": true
		},
		{
			"name": "reserve-r9",
			"explanation": "Reserve R9, making it unavailable as GPR.",
			"llvm": true
		},
		{ "name": "ret-addr-stack", "explanation": "Has return address stack.", "llvm": true },
		{ "name": "sb", "explanation": "Enable v8.5a Speculation Barrier.", "llvm": true },
		{ "name": "slow-fp-brcc", "explanation": "FP compare + branch is slow.", "llvm": true },
		{
			"name": "slow-load-D-subreg",
			"explanation": "Loading into D subregs is slow.",
			"llvm": true
		},
		{
			"name": "slow-odd-reg",
			"explanation": "VLDM/VSTM starting with an odd register is slow.",
			"llvm": true
		},
		{ "name": "slow-vdup32", "explanation": "Has slow VDUP32", "llvm": true },
		{ "name": "slow-vgetlni32", "explanation": "Has slow VGETLNi32", "llvm": true },
		{ "name": "slowfpvfmx", "explanation": "Disable VFP / NEON FMA instructions.", "llvm": true },
		{ "name": "slowfpvmlx", "explanation": "Disable VFP / NEON MAC instructions.", "llvm": true },
		{ "name": "soft-float", "explanation": "Use software floating point features..", "llvm": true },
		{ "name": "splat-vfp-neon", "explanation": "Splat register from VFP to NEON.", "llvm": true },
		{
			"name": "strict-align",
			"explanation": "Disallow all unaligned memory access.",
			"llvm": true
		},
		{ "name": "swift", "explanation": "Swift ARM processors.", "llvm": true },
		{ "name": "use-mipipeliner", "explanation": "Use the MachinePipeliner.", "llvm": true },
		{ "name": "use-misched", "explanation": "Use the MachineScheduler.", "llvm": true },
		{ "name": "v4t", "explanation": "Support ARM v4T instructions.", "llvm": true },
		{ "name": "v5t", "explanation": "Support ARM v5T instructions.", "llvm": true },
		{ "name": "v6m", "explanation": "Support ARM v6M instructions.", "llvm": true },
		{ "name": "v7clrex", "explanation": "Has v7 clrex instruction.", "llvm": true },
		{ "name": "v8.1a", "explanation": "Support ARM v8.1a instructions.", "llvm": true },
		{
			"name": "v8.1m.main",
			"explanation": "Support ARM v8-1M Mainline instructions.",
			"llvm": true
		},
		{ "name": "v8.2a", "explanation": "Support ARM v8.2a instructions.", "llvm": true },
		{ "name": "v8.3a", "explanation": "Support ARM v8.3a instructions.", "llvm": true },
		{ "name": "v8.4a", "explanation": "Support ARM v8.4a instructions.", "llvm": true },
		{ "name": "v8.5a", "explanation": "Support ARM v8.5a instructions.", "llvm": true },
		{ "name": "v8.6a", "explanation": "Support ARM v8.6a instructions.", "llvm": true },
		{ "name": "v8.7a", "explanation": "Support ARM v8.7a instructions.", "llvm": true },
		{ "name": "v8.8a", "explanation": "Support ARM v8.8a instructions.", "llvm": true },
		{ "name": "v8.9a", "explanation": "Support ARM v8.9a instructions.", "llvm": true },
		{ "name": "v8m", "explanation": "Support ARM v8M Baseline instructions.", "llvm": true },
		{ "name": "v8m.main", "explanation": "Support ARM v8M Mainline instructions.", "llvm": true },
		{ "name": "v9.1a", "explanation": "Support ARM v9.1a instructions.", "llvm": true },
		{ "name": "v9.2a", "explanation": "Support ARM v9.2a instructions.", "llvm": true },
		{ "name": "v9.3a", "explanation": "Support ARM v9.3a instructions.", "llvm": true },
		{ "name": "v9.4a", "explanation": "Support ARM v9.4a instructions.", "llvm": true },
		{ "name": "v9.5a", "explanation": "Support ARM v9.5a instructions.", "llvm": true },
		{ "name": "v9a", "explanation": "Support ARM v9a instructions.", "llvm": true },
		{
			"name": "vfp2sp",
			"explanation": "Enable VFP2 instructions with no double precision.",
			"llvm": true
		},
		{
			"name": "vfp3d16",
			"explanation": "Enable VFP3 instructions with only 16 d-registers.",
			"llvm": true
		},
		{
			"name": "vfp3d16sp",
			"explanation": "Enable VFP3 instructions with only 16 d-registers and no double precision.",
			"llvm": true
		},
		{
			"name": "vfp3sp",
			"explanation": "Enable VFP3 instructions with no double precision.",
			"llvm": true
		},
		{
			"name": "vfp4d16",
			"explanation": "Enable VFP4 instructions with only 16 d-registers.",
			"llvm": true
		},
		{
			"name": "vfp4d16sp",
			"explanation": "Enable VFP4 instructions with only 16 d-registers and no double precision.",
			"llvm": true
		},
		{
			"name": "vfp4sp",
			"explanation": "Enable VFP4 instructions with no double precision.",
			"llvm": true
		},
		{ "name": "vldn-align", "explanation": "Check for VLDn unaligned access.", "llvm": true },
		{
			"name": "vmlx-forwarding",
			"explanation": "Has multiplier accumulator forwarding.",
			"llvm": true
		},
		{ "name": "vmlx-hazards", "explanation": "Has VMLx hazards.", "llvm": true },
		{
			"name": "wide-stride-vfp",
			"explanation": "Use a wide stride when allocating VFP registers.",
			"llvm": true
		},
		{ "name": "xscale", "explanation": "ARMv5te architecture.", "llvm": true },
		{ "name": "zcz", "explanation": "Has zero-cycle zeroing instructions.", "llvm": true }
	],
	"bpf": [
		{ "name": "alu32", "explanation": "Enable ALU32 instructions.", "llvm": false },
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "dummy", "explanation": "unused feature.", "llvm": true },
		{
			"name": "dwarfris",
			"explanation": "Disable MCAsmInfo DwarfUsesRelocationsAcrossSections.",
			"llvm": true
		}
	],
	"csky": [
		{ "name": "10e60", "explanation": "Support CSKY 10e60 instructions.", "llvm": false },
		{ "name": "2e3", "explanation": "Support CSKY 2e3 instructions.", "llvm": false },
		{ "name": "3e3r1", "explanation": "Support CSKY 3e3r1 instructions.", "llvm": false },
		{ "name": "3e3r2", "explanation": "Support CSKY 3e3r2 instructions.", "llvm": false },
		{ "name": "3e3r3", "explanation": "Support CSKY 3e3r3 instructions.", "llvm": false },
		{ "name": "3e7", "explanation": "Support CSKY 3e7 instructions.", "llvm": false },
		{ "name": "7e10", "explanation": "Support CSKY 7e10 instructions.", "llvm": false },
		{ "name": "cache", "explanation": "Enable cache.", "llvm": false },
		{
			"name": "crt-static",
			"explanation": "Enables C Run-time Libraries to be statically linked.",
			"llvm": false
		},
		{ "name": "doloop", "explanation": "Enable doloop instructions.", "llvm": false },
		{ "name": "dsp1e2", "explanation": "Support CSKY dsp1e2 instructions.", "llvm": false },
		{ "name": "dspe60", "explanation": "Support CSKY dspe60 instructions.", "llvm": false },
		{ "name": "e1", "explanation": "Support CSKY e1 instructions.", "llvm": false },
		{ "name": "e2", "explanation": "Support CSKY e2 instructions.", "llvm": false },
		{ "name": "edsp", "explanation": "Enable DSP instrutions.", "llvm": false },
		{ "name": "elrw", "explanation": "Use the extend LRW instruction.", "llvm": false },
		{ "name": "fdivdu", "explanation": "Enable float divide instructions.", "llvm": false },
		{ "name": "float1e2", "explanation": "Support CSKY float1e2 instructions.", "llvm": false },
		{ "name": "float1e3", "explanation": "Support CSKY float1e3 instructions.", "llvm": false },
		{ "name": "float3e4", "explanation": "Support CSKY float3e4 instructions.", "llvm": false },
		{ "name": "float7e60", "explanation": "Support CSKY float7e60 instructions.", "llvm": false },
		{ "name": "floate1", "explanation": "Support CSKY floate1 instructions.", "llvm": false },
		{ "name": "fpuv2_df", "explanation": "Enable FPUv2 double float instructions.", "llvm": false },
		{ "name": "fpuv2_sf", "explanation": "Enable FPUv2 single float instructions.", "llvm": false },
		{ "name": "fpuv3_df", "explanation": "Enable FPUv3 double float instructions.", "llvm": false },
		{
			"name": "fpuv3_hf",
			"explanation": "Enable FPUv3 half precision operate instructions.",
			"llvm": false
		},
		{
			"name": "fpuv3_hi",
			"explanation": "Enable FPUv3 half word converting instructions.",
			"llvm": false
		},
		{ "name": "fpuv3_sf", "explanation": "Enable FPUv3 single float instructions.", "llvm": false },
		{ "name": "hard-float", "explanation": "Use hard floating point features.", "llvm": false },
		{
			"name": "hard-float-abi",
			"explanation": "Use hard floating point ABI to pass args.",
			"llvm": false
		},
		{ "name": "hard-tp", "explanation": "Enable TLS Pointer register.", "llvm": false },
		{ "name": "high-registers", "explanation": "Enable r16-r31 registers.", "llvm": false },
		{ "name": "hwdiv", "explanation": "Enable divide instrutions.", "llvm": false },
		{ "name": "mp", "explanation": "Support CSKY mp instructions.", "llvm": false },
		{ "name": "mp1e2", "explanation": "Support CSKY mp1e2 instructions.", "llvm": false },
		{ "name": "nvic", "explanation": "Enable NVIC.", "llvm": false },
		{ "name": "trust", "explanation": "Enable trust instructions.", "llvm": false },
		{ "name": "vdsp2e60f", "explanation": "Support CSKY vdsp2e60f instructions.", "llvm": false },
		{ "name": "vdspv1", "explanation": "Enable 128bit vdsp-v1 instructions.", "llvm": false },
		{ "name": "vdspv2", "explanation": "Enable vdsp-v2 instructions.", "llvm": false },
		{ "name": "btst16", "explanation": "Use the 16-bit btsti instruction.", "llvm": true },
		{ "name": "ccrt", "explanation": "Use CSKY compiler runtime.", "llvm": true },
		{ "name": "ck801", "explanation": "CSKY ck801 processors.", "llvm": true },
		{ "name": "ck802", "explanation": "CSKY ck802 processors.", "llvm": true },
		{ "name": "ck803", "explanation": "CSKY ck803 processors.", "llvm": true },
		{ "name": "ck803s", "explanation": "CSKY ck803s processors.", "llvm": true },
		{ "name": "ck804", "explanation": "CSKY ck804 processors.", "llvm": true },
		{ "name": "ck805", "explanation": "CSKY ck805 processors.", "llvm": true },
		{ "name": "ck807", "explanation": "CSKY ck807 processors.", "llvm": true },
		{ "name": "ck810", "explanation": "CSKY ck810 processors.", "llvm": true },
		{ "name": "ck810v", "explanation": "CSKY ck810v processors.", "llvm": true },
		{ "name": "ck860", "explanation": "CSKY ck860 processors.", "llvm": true },
		{ "name": "ck860v", "explanation": "CSKY ck860v processors.", "llvm": true },
		{ "name": "constpool", "explanation": "Dump the constant pool by compiler.", "llvm": true },
		{ "name": "dsp_silan", "explanation": "Enable DSP Silan instrutions.", "llvm": true },
		{ "name": "dspv2", "explanation": "Enable DSP V2.0 instrutions.", "llvm": true },
		{ "name": "istack", "explanation": "Enable interrput attribute.", "llvm": true },
		{ "name": "java", "explanation": "Enable java instructions.", "llvm": true },
		{
			"name": "multiple_stld",
			"explanation": "Enable multiple load/store instrutions.",
			"llvm": true
		},
		{ "name": "pushpop", "explanation": "Enable push/pop instrutions.", "llvm": true },
		{ "name": "smart", "explanation": "Let CPU work in Smart Mode.", "llvm": true },
		{ "name": "soft-tp", "explanation": "Disable TLS Pointer register.", "llvm": true },
		{ "name": "stack-size", "explanation": "Output stack size information.", "llvm": true },
		{ "name": "vdsp2e3", "explanation": "Support CSKY vdsp2e3 instructions.", "llvm": true }
	]
}
